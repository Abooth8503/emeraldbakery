{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AtTheBoothBakery_Type","emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","Object","freeze","motivationalQuotes","quote","name","formatter","Intl","NumberFormat","style","currency","Dashboard","props","employee","setEmployee","dashboardOrders","setDashboardOrders","userName","filter","empOrder","EmployeeName","randNumber","Math","floor","random","deliveredOrders","order","OrderStatus","sumCost","reduce","cost","entry","parseFloat","Price","orderedButNotDeliveredandNotCancelled","format","userNameString","split","Container","fluid","Row","className","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","fontWeight","fontStyle","textDecoration","Form","Control","as","onChange","e","preventDefault","target","marginBottom","to","color","marginLeft","OrderCard","uploadFiles","setUploadFiles","message","setMessage","path","fileName","document","createElement","toDataURL","href","download","appendChild","removeChild","url","then","blob","theBlob","b","lastModifiedDate","newFileArray","f","File","push","blobToFile","URL","createObjectURL","updateBakeryOrder","orderStatus","orderContent","Id","Name","Area","Address","City","State","ZipCode","OrderType","Quantity","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","PorchDropoff","Employee","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","undefined","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","padding","border","borderWidth","borderStyle","parent","Img","Image","src","Title","verticalAlign","role","aria-label","timeStyle","Text","Button","size","onClick","id","routeComponentProps","history","variant","Label","address","sectionStyle","Orders","useState","displayOrders","setDisplayOrders","filterType","setFilterType","Badge","Dropdown","DropdownButton","title","onSelect","atbOrders","Delivered","Ordered","Today","today","moment","statusOrder","Item","eventKey","placeholder","regExOrder","RegExp","toString","searchedOrders","match","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","width","data-testid","years","Array","from","val","index","times","CreateOrder","nameOrders","setNameOrders","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","porchDropoff","setPorchDropoff","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","daysLengthEnd","daysLengthEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","deliveryDateMonthEndValidated","setDeliveryDateMonthEndValidated","deliveryDateDayEndValidated","setDeliveryDateDayEndValidated","deliveryDateYearEndValidated","setdeliveryDateYearEndValidated","endTimeValidated","setEndTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","filteredBeginTime","setFilteredBeginTime","imageUrl","setImageUrl","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","setValue","clearSuggestions","location","filteredEditOrder","deliveryDateStart","deliveryDateEnd","user","ref","useOnclickOutside","handleSelect","getGeocode","results","getZipCode","zip","handleNameSelect","isFormValidated","clearFields","sort","Group","type","regExName","listStyleType","suggestion","files","imageUrlAzure","paddingLeft","disabled","place_id","structured_formatting","main_text","secondary_text","Accordion","Toggle","Header","Collapse","Body","display","min","step","controlId","Check","label","checked","newDate","numberOfDays","everyYear","keyIndex","rows","trim","alert","CalendarOrders","selectedDay","daySet","calenderOrders","setCalenderOrders","tileClassName","view","find","x","onClickDay","calendarType","background","upcomingOrder","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","height","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","thumbnail","alt","ListGroup","marginRight","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","alignItems","boxShadow","borderRadius","top","transform","window","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","welcomeNotification","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"2HAYYA,E,iHAyDL,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,iBAAAC,EAAA,sEACkBC,MAAMF,GADxB,cACCG,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,gCAzDKP,K,sBAAAA,E,kBAAAA,E,eAAAA,M,KAgEZ,IAAMQ,EAAY,WAAiE,IAAhEC,EAA+D,uDAA5C,GAAIC,EAAwC,uDAAP,GAAO,EACpDC,WAAwBF,GAD4B,mBACzEG,EADyE,KACjEC,EADiE,OAE7CF,WAA4BD,GAFiB,mBAEzEI,EAFyE,KAE7DC,EAF6D,OAIhDJ,WAAuB,IAJyB,mBAIzEK,EAJyE,KAI/DC,EAJ+D,cAYjEC,IAZiE,2EAYhF,8BAAAf,EAAA,sEAEUgB,EAAY,IAAIC,QAAJ,4EACqDC,4DACrE,CACEC,OAAQ,QALhB,SASuBrB,EAAoBkB,GAT3C,OASUI,EATV,OAWIV,EAAUU,GAXd,gDAaIC,QAAQC,IAAR,MAbJ,0DAZgF,+BA6BjEC,IA7BiE,2EA6BhF,8BAAAvB,EAAA,sEAEUwB,EAAgB,IAAIP,QAAJ,wEAC6CC,4DACjE,CACEC,OAAQ,QALhB,SASuBrB,EAAoB0B,GAT3C,OASUJ,EATV,OAWIR,EAAaQ,GAXjB,gDAaIC,QAAQC,IAAR,MAbJ,0DA7BgF,sBA8ChF,SAASG,IACP,OAAO,IAAIC,SAAQ,SAACC,GACdlB,EAAOmB,OAAS,GAClBD,EAAQlB,MAKd,OAjDAoB,qBAAU,WAGRd,IACAQ,MACC,IA4CI,CACLd,SACAE,aACAE,WACAC,cACAJ,YACAe,mBACAV,uBAIEe,EAAiBtB,gBAAyD,MAEnEuB,EAAoB,kBAAMvB,aAAiBsB,IAEjD,SAASE,EAAT,GAIU,IAHfC,EAGc,EAHdA,SAIA,OACE,cAACH,EAAeI,SAAhB,CAAyBC,MAAO9B,EAAU,IAA1C,SAAgD4B,IAM7C,SAASG,EACdC,EACAC,EACAC,GAEA,IAcMC,EAAQ,IAAIC,KAAKJ,GACjBK,EAAMF,EAAMG,UACZC,EAAaJ,EAAMK,WACnBC,EAAON,EAAMO,cACbC,EAAOR,EAAMS,qBACnB,OAAIX,EAAgB,GAAN,OAAUM,EAAa,EAAvB,YAA4BF,EAA5B,YAAmCI,EAAnC,YAA2CE,GACrDT,EAAmB,GAAN,OAAUK,EAAa,EAAvB,YAA4BF,EAA5B,YAAmCI,GAE9C,GAAN,OAAUJ,EAAV,YAtBmB,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAU0BE,GAA5B,YAA2CE,GA2BtC,SAASI,EAAcC,EAAeC,GAC3C,IAAIC,EAAkB,GACtB,MAAc,KAAVF,GAAiC,KAAjBC,IAIR,OAAVD,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,EAGAE,EAAkBC,EAAUC,UACT,OAAVJ,IAAuD,IAvB7D,SAAoBC,GAKzB,OAJuBA,EAAe,IAAM,GACnBA,EAAe,MAAQ,GAC3BA,EAAe,MAAQ,EAoBfI,CAAWC,OAAOL,IAC7CC,EAAkBC,EAAUI,SACT,OAAVP,EACTE,EAAkBC,EAAUK,YACT,OAAVR,GAA4B,OAAVA,GAA4B,OAAVA,GAA4B,OAAVA,IAC/DE,EAAkBC,EAAUM,SAlBrBP,EA0BX,IAAMC,EAAY,CAAEC,UAAW,GAAIK,OAAQ,GAAID,YAAa,GAAID,SAAU,IAC1EG,OAAOC,OAAOR,G,gDC3ORS,EAAqB,CACzB,CACEC,MAAO,4CACPC,KAAM,eAER,CACED,MAAO,4DACPC,KAAM,sBAER,CACED,MACE,kFACFC,KAAM,iBAER,CACED,MAAO,uEACPC,KAAM,eAER,CACED,MAAO,kDACPC,KAAM,cAER,CACED,MACE,sPACFC,KAAM,kBAER,CACED,MACE,gLACFC,KAAM,gBAER,CAAED,MAAO,sDAAkDC,KAAM,aACjE,CAAED,MAAO,mDAA+CC,KAAM,eAC9D,CAAED,MAAO,uDAAwDC,KAAM,eACvE,CAAED,MAAO,6DAAyDC,KAAM,aACxE,CAAED,MAAO,2DAAuDC,KAAM,WACtE,CACED,MAAO,2DACPC,KAAM,gBAIJC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,QAwJGC,MA7If,SAAmBC,GAA4B,IACrC/D,EAAWsB,IAAXtB,OADoC,EAEZD,WAAmC,mBAFvB,mBAErCiE,EAFqC,KAE3BC,EAF2B,OAGElE,WAAuBC,GAHzB,mBAGrCkE,EAHqC,KAGpBC,EAHoB,KAK5C/C,qBAAU,WACR,OAAQ2C,EAAMK,UACZ,IAAK,iBACHD,EACEnE,EAAOqE,QAAO,SAACC,GAAD,MAAwC,UAA1BA,EAASC,iBAEvC,MACF,IAAK,gBAKL,IAAK,gBACHJ,EACEnE,EAAOqE,QAAO,SAACC,GAAD,MAAwC,WAA1BA,EAASC,iBAEvC,MACF,QACE3D,QAAQC,IAAI,cAEf,IAcH,IAAM2D,EAAaC,KAAKC,MAAMD,KAAKE,SAAWrB,EAAmBnC,QACjE,GAAInB,EAAOmB,OAAS,EAClB,OAAO,6CAGT,IAAMyD,EAAkBV,EAAgBG,QAAO,SAACQ,GAC9C,MAA6B,cAAtBA,EAAMC,eAGTC,EAAUH,EAAgBI,QAC9B,SAACC,EAAcC,GAAf,OAA8BD,GAAQE,WAAWD,EAAME,QAAU,KACjE,GAGIC,EAAwCnB,EAAgBG,QAAO,SAACQ,GACpE,MAA6B,YAAtBA,EAAMC,eAGflE,QAAQC,IAAI,8BAA+B4C,EAAU6B,OAAOP,IAE5D,IAAMQ,EAAiBxB,EAAMK,SAASoB,MAAM,KAAK,GACjD,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,+BAA+BhC,MAAO,CAAEiC,UAAW,OAAlE,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWnC,MAAO,CAAEoC,gBAAiB,SAArC,SACE,qBACEJ,UAAU,cACVhC,MAAO,CAAEqC,WAAY,gBAAiBC,SAAU,aAFlD,qBAIWX,EAJX,aASN,cAACI,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACE,cAACE,EAAA,EAAD,UACE,yBAAQF,UAAU,QAAlB,UACE,4BACEhC,MAAO,CAAEsC,SAAU,SADrB,oBAEM5C,EAAmBkB,GAAYjB,MAFrC,OAGA,4BACEK,MAAO,CACLuC,UAAW,QACXD,SAAU,UAHd,SAME,2CAAY5C,EAAmBkB,GAAYhB,KAA3C,gBAKR,cAACmC,EAAA,EAAD,CAAK/B,MAAO,CAAEiC,UAAW,OAAzB,SACE,cAACC,EAAA,EAAD,CAAKlC,MAAO,CAAEsC,SAAU,UAAxB,SACE,eAACH,EAAA,EAAD,CAAWnC,MAAO,CAAEoC,gBAAiB,SAArC,UACE,oBACEpC,MAAO,CACLwC,WAAY,OACZC,UAAW,UACXC,eAAgB,aAJpB,6CASA,eAACC,EAAA,EAAKC,QAAN,CACEC,GAAG,SACHC,SA9EZ,SAA0BC,GACxBA,EAAEC,iBACF3C,EAAY0C,EAAEE,OAAOnF,OACE,UAAnBiF,EAAEE,OAAOnF,MACXyC,EAAmBnE,EAAOqE,QAAO,SAACC,GAAD,MAAwC,UAA1BA,EAASC,iBAC5B,WAAnBoC,EAAEE,OAAOnF,MAClByC,EAAmBnE,EAAOqE,QAAO,SAACC,GAAD,MAAwC,WAA1BA,EAASC,iBAExDJ,EAAmBnE,IAuEX0B,MAAOsC,EACPJ,MAAO,CAAEkD,aAAc,QAJzB,UAME,qDACA,2CACA,4CACA,4CAEF,0CACQ,cAAC,IAAD,CAAMC,GAAG,UAAT,oBADR,iBAC6C7C,EAAgB/C,UAE7D,uBACA,+CAEE,uBAAMyC,MAAO,CAAEoD,MAAO,QAASC,WAAY,MAAOb,WAAY,QAA9D,yBACK3C,EAAU6B,OAAOP,SAGxB,uBA/BF,iCAgCsB,+BAAOH,EAAgBzD,SAC3C,uBACA,uBACA,sDAEE,uBAAMyC,MAAO,CAAEqD,WAAY,OAA3B,yBACK5B,EAAsClE,wB,oECqF1C+F,MAvQf,SAAmBnD,GAA4B,IAAD,EACNhE,WAA4B,IADtB,mBACrCoH,EADqC,KACxBC,EADwB,OAEdrH,WAAuB,IAFT,mBAErCsH,EAFqC,KAE5BC,EAF4B,KAGpChH,EAAuBgB,IAAvBhB,mBAHoC,4CAiB5C,WAAwBiH,EAAcC,GAAtC,IAAAjI,EAAA,SAAAA,EAAA,6DACQA,EAAIkI,SAASC,cAAc,KADnC,SAEiBC,EAAUJ,EAAMC,GAFjC,OAEEjI,EAAEqI,KAFJ,OAGErI,EAAEsI,SAAWL,EACbC,SAAS9H,KAAKmI,YAAYvI,GAE1BkI,SAAS9H,KAAKoI,YAAYxI,GAN5B,4CAjB4C,sBA0B5C,SAASoI,EAAUK,EAAaR,GAC9B,OAAOhI,MAAMwI,GACVC,MAAK,SAACxI,GACL,OAAOA,EAASyI,UAEjBD,MAAK,SAACC,GAEL,OAKN,SAAoBC,EAAeX,GACjC,IAAMY,EAASD,EAEfC,EAAEC,iBAAmB,IAAIrG,KACzBoG,EAAE5E,KAAOgE,EACT,IAAMc,EAAe,GAEfC,EAAI,IAAIC,KAAK,CAACJ,GAAIZ,GACxBc,EAAaG,KAAKF,GAClBnB,EAAekB,GAfXI,CAAWR,EAAMV,GACVmB,IAAIC,gBAAgBV,MAiBjC,SAASW,EACPlC,EACAmC,GAEAnC,EAAEC,iBAEF,IAAMmC,EAAsB,CAC1BC,GAAIjF,EAAMc,MAAMmE,GAChBC,KAAMlF,EAAMc,MAAMoE,KAClBC,KAAMnF,EAAMc,MAAMqE,KAClBC,QAASpF,EAAMc,MAAMsE,QACrBC,KAAMrF,EAAMc,MAAMuE,KAClBC,MAAOtF,EAAMc,MAAMwE,MACnBC,QAASvF,EAAMc,MAAMyE,QACrBC,UAAWxF,EAAMc,MAAM0E,UACvBzE,YAAagE,EACbU,SAAUzF,EAAMc,MAAM2E,SACtBpE,MAAOrB,EAAMc,MAAMO,MACnBqE,YAAa1F,EAAMc,MAAM4E,YACzBC,aAAc3F,EAAMc,MAAM6E,aAC1BC,gBAAiB5F,EAAMc,MAAM8E,gBAC7BC,UAAW7F,EAAMc,MAAM+E,UACvBC,QAAS9F,EAAMc,MAAMgF,QACrBC,cAAe/F,EAAMc,MAAMiF,cAC3BC,KAAMhG,EAAMc,MAAMmF,UAClBA,UAAWjG,EAAMc,MAAMmF,UACvBC,SAAUlG,EAAMc,MAAMoF,SACtBC,cAAenG,EAAMc,MAAMqF,cAC3BC,aAAcpG,EAAMc,MAAMsF,aAC1BC,SAAUrG,EAAMc,MAAMuF,SACtB7F,aAAcR,EAAMc,MAAMN,cAG5B3D,QAAQC,IAAI,UAAWkI,EAAc5B,GAErC,IAAMkD,EAAU,IAAIC,SAEpBnD,EAAYoD,SAAQ,SAACC,GACnBH,EAAQI,OAAO,OAAQD,MAGzBH,EAAQI,OAAO,eAAgBC,KAAKC,UAAU5B,IAE9C,IAAM6B,EAAS,CACblK,OAAQ,OACRf,KAAM0K,GAGR,IAEmB7K,MAAM,qEAAD,OACiDiB,4DACrEmK,GAGO3C,MAAK,SAAC4C,GACO,MAAhBA,EAAKC,QACPxD,EAAW,aAAD,OAAcwB,IACxBiC,YAAW,WACTzK,IACAgH,EAAW,MACV,OAEHA,EAAW,kCACXyD,YAAW,WACTzD,EAAW,MACV,SAGP,MAAOX,GACP/F,QAAQC,IAAR,sCAA2C8F,KAnH/CvF,qBAAU,WACR,IAAMmG,EAAOxD,EAAMc,MAAMqF,cACzB,QAAac,IAATzD,GAA+B,OAATA,EAAe,CACvC,IAAMC,EAAWD,EAAK0D,QAAQ,WAAY,KARF,sCASxCC,CAAS3D,EAAMC,MAEhB,IAiHH,IAAI0C,EAAgB,GAEdiB,EAAU,UAAMpH,EAAMc,MAAMsE,QAAlB,YAA6BpF,EAAMc,MAAMuE,KAAzC,YAAiDrF,EAAMc,MAAMwE,OAE7C,SAA9BtF,EAAMc,MAAMqF,eACkB,OAA9BnG,EAAMc,MAAMqF,oBACkBc,IAA9BjH,EAAMc,MAAMqF,cAEZA,EACE,sGAEgCc,IAA9BjH,EAAMc,MAAMqF,gBACdA,EAAgBnG,EAAMc,MAAMqF,eAGhC,IAAMkB,EAAoB,IAAIpJ,KAAK+B,EAAMc,MAAM6E,cACzC2B,EAAkB,IAAIrJ,KAAK+B,EAAMc,MAAM8E,iBAG7C,OACE,cAAC2B,EAAA,EAAD,CAEE1H,MAAO,CACLkD,aAAc,MACdyE,QAAS,MACTC,OAAQ,QACRC,YAAa,MACbC,YAAa,QACbzF,WAAY,YARhB,SAWE,eAACN,EAAA,EAAD,WACoB,UAAjB5B,EAAM4H,OACL,cAAC7F,EAAA,EAAD,UACE,cAACwF,EAAA,EAAKM,IAAN,CAAUnF,GAAIoF,IAAOC,IAAK5B,EAAexE,OAAO,MAEhD,KAmBJ,eAACI,EAAA,EAAD,WACE,eAACwF,EAAA,EAAKS,MAAN,WACE,sBAAMnI,MAAO,CAAEsC,SAAU,QAASE,WAAY,QAA9C,SACGrC,EAAMc,MAAMoE,OAEf,uBACA,uBAAMrF,MAAO,CAAEsC,SAAU,QAAS8F,cAAe,YAAjD,UACGjI,EAAMc,MAAMsF,aACX,sBAAM8B,KAAK,MAAMC,aAAW,OAAOtI,MAAO,CAAEsC,SAAU,QAAtD,0BAGE,KACHnC,EAAMc,MAAMgF,QACX,sBAAMoC,KAAK,MAAMC,aAAW,QAAQtI,MAAO,CAAEsC,SAAU,QAAvD,0BAGE,KAVN,UAYMkF,EAAkB5I,mBAAmB,QAAS,CAChD2J,UAAW,cAGf,sBAAMvI,MAAO,CAAEsC,SAAU,WAAzB,kBACA,sBAAMtC,MAAO,CAAEsC,SAAU,QAAS8F,cAAe,YAAjD,mBACMX,EAAgB7I,mBAAmB,QAAS,CAC9C2J,UAAW,gBAIjB,eAACb,EAAA,EAAKc,KAAN,WACE,sBAAMxI,MAAO,CAAEwC,WAAY,QAA3B,uBACA,sBAAMxC,MAAO,CAAEqD,WAAY,OAA3B,SAAqClD,EAAMc,MAAM2E,WAC/B,UAAjBzF,EAAM4H,OACL,qCACE,4BAC6BX,IAA5BjH,EAAMc,MAAM4E,aACb1F,EAAMc,MAAM4E,YAAYtI,OAAS,EAC/B,qCACE,sBAAMyC,MAAO,CAAEwC,WAAY,QAA3B,2BACA,+BAAOrC,EAAMc,MAAM4E,iBAEnB,QAEJ,KACJ,uBACA,cAAC4C,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAS,kBAnNhBC,EAmNkCzI,EAAMc,MAAMmE,QAlNjEjF,EAAM0I,oBAAoBC,QAAQjE,KAAlC,UAAkD+D,GADpD,IAAqBA,GAmNX,kBAGA,cAACH,EAAA,EAAD,CACEC,KAAK,KACLK,QAAQ,UACR/I,MAAO,CAAEqD,WAAY,OACrBsF,QAAS,SAAC5F,GAAD,OAAOkC,EAAkBlC,EAAG,cAJvC,uBAQA,cAAC0F,EAAA,EAAD,CACEM,QAAQ,SACRL,KAAK,KACL1I,MAAO,CAAEqD,WAAY,OACrBsF,QAAS,SAAC5F,GAAD,OAAOkC,EAAkBlC,EAAG,cAJvC,oBAQCU,EAAQlG,OAAS,EAChB,cAACoF,EAAA,EAAKqG,MAAN,CACEhJ,MAAO,CAAEqD,WAAY,MAAOD,MAAO,UAAWd,SAAU,WAD1D,SAGGmB,IAED,QAEN,eAACiE,EAAA,EAAKc,KAAN,CAAWxI,MAAO,CAAEsC,SAAU,UAA9B,UACE,cAAC,IAAD,IACA,mBAAG0B,KAAM7D,EAAM8I,QAASjJ,MAAO,CAAEqD,WAAY,OAA7C,SACGkE,cA7GJpH,EAAMc,MAAMmE,KC7IjB8D,EAAe,CACnBjH,UAAW,MACXI,WAAY,YA+HC8G,I,EAAAA,EA1Hf,SAAgBhJ,GAA4B,IAClC/D,EAAWsB,IAAXtB,OADiC,EAECgN,mBAAShN,GAFV,mBAElCiN,EAFkC,KAEnBC,EAFmB,OAGLF,mBAAiB,aAHZ,mBAGlCG,EAHkC,KAGtBC,EAHsB,KA6DzC,OAAsB,IAAlBpN,EAAOmB,OACF,oDAIP,eAACsE,EAAA,EAAD,CAAWC,OAAK,EAAC9B,MAAOkJ,EAAxB,UACE,cAACnH,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAKF,UAAU,cAAf,SACE,eAACG,EAAA,EAAD,WACE,qBAAInC,MAAO,CAAEqC,WAAY,gBAAiBC,SAAU,aAApD,mBAEE,cAACmH,EAAA,EAAD,CAAOV,QAAQ,UAAU/I,MAAO,CAAEqD,WAAY,OAA9C,SACGgG,EAAc9L,YAGnB,gCACkB,cAAfgM,EAA6B,gDAASA,KAAqBA,WAMpE,eAACxH,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,UACE,cAACwH,EAAA,EAAD,CAAU1J,MAAO,CAAEkD,aAAc,OAAjC,SACE,eAACyG,EAAA,EAAD,CAAgBC,MAAM,gBAAgBC,SAjF3B,SAAC9G,GACpByG,EAAczG,GAEd,IAAI+G,EAAY,GAEhB,OAAQ/G,GACN,KAAKvH,EAAsBuO,UACzBD,EAAY1N,EAAOqE,QAAO,SAACQ,GACzB,MAA6B,cAAtBA,EAAMC,eAEf,MACF,KAAK1F,EAAsBwO,QACzBF,EAAY1N,EAAOqE,QAAO,SAACQ,GACzB,MAA6B,YAAtBA,EAAMC,eAEf,MACF,KAAK1F,EAAsByO,MAEzB,IAAMC,EAAQ,IAAI9L,KAElB0L,EAAY1N,EACTqE,QAAO,SAACpC,GACP,GAAI6L,GAEAC,IAAO9L,EAAIyH,cAAcpE,OAAO,eAChCyI,IAAOD,GAAOxI,OAAO,cAErB,OAAOrD,KAIZoC,QACC,SAAC2J,GAAD,MAC8B,cAA5BA,EAAYlJ,aACgB,cAA5BkJ,EAAYlJ,eAElB,MACF,QACE4I,EAAY1N,EAGhBkN,EAAiBQ,IAwCT,UACE,cAACJ,EAAA,EAASW,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACZ,EAAA,EAASW,KAAV,CAAeC,SAAS,YAAxB,uBACA,cAACZ,EAAA,EAASW,KAAV,CAAeC,SAAS,UAAxB,4BAIN,cAACpI,EAAA,EAAD,UACE,uBACElC,MAAO,CAAEiC,UAAW,OACpBsI,YAAY,yBACZzH,SAhDU,SAACC,GACnB,IAAMyH,EAAa,IAAIC,OAAJ,UAAc1H,EAAEE,OAAOnF,MAAM4M,YAAc,KACxDC,EAAiBvO,EAAOqE,QAAO,SAACQ,GACpC,OACGA,EAAMoE,MAAQpE,EAAMoE,KAAKuF,MAAMJ,IAC/BvJ,EAAMsE,SAAWtE,EAAMsE,QAAQqF,MAAMJ,MAI1ClB,EAAiBqB,WA4Cf,qBAAK3K,MAAO,CAAEuC,UAAW,OAAQF,WAAY,oBAA7C,SACGgH,EAAcwB,KAAI,SAAC5J,GAClB,IAAMsG,EAAU,UAAMtG,EAAMsE,QAAZ,YAAuBtE,EAAMuE,KAA7B,YAAqCvE,EAAMwE,OACrDqF,EAAiBC,UAAUxD,GAC3ByD,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEjC,oBAAqB1I,EACrBc,MAAOA,EACPgI,QAAS+B,EACTjD,OAAO,SAJF9G,EAAMmE,a,yDChInB6F,EAAcC,YAAOC,YAAPD,CAAH,gRA0DFE,OAvCf,SAAyBjL,GAAmC,IAAD,EAC9BiJ,oBAAS,GADqB,mBAClDiC,EADkD,KACrCC,EADqC,KAEnDC,EAASC,uBAAY,SAACC,GACG,IAAzBA,EAAclO,QAKlB4C,EAAMuL,UAAUD,EAAeH,GAAI,MAClC,IATsD,EAUHK,YAAY,CAChEJ,SACAK,OAAQ,oBAFFC,EAViD,EAUjDA,aAAcC,EAVmC,EAUnCA,cAAeC,EAVoB,EAUpBA,aAUrC,OACE,8CAAKnD,GAAG,aAAgBiD,KAAxB,cACE,qCAAWC,MACVC,EACC,wDAEA,eAAC,WAAD,WACE,cAACtD,EAAA,EAAD,CAAQzI,MAAO,CAAEgM,MAAO,QAAUrD,QAZ1C,SAAqB5F,GACnBA,EAAEC,iBACFsI,GAAI,IAUE,6BAGiB,IAAhBD,EACC,cAACJ,EAAD,CAAajL,MAAO,CAAEiC,UAAW,OAASgK,cAAY,YACpD,aClCRxN,I,OAAO,IAAIL,MAAOM,eAClBwN,GAAQC,MAAMC,KAAK,IAAID,MAAM,IAAI,SAACE,EAAKC,GAAN,OAAgB7N,GAAO6N,KAExDC,GAAQ,CACZ,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YA+jCaC,OA5jCf,SAAqBrM,GAA4B,IAAD,EACVhE,WAAuB,IADb,mBACvCsQ,EADuC,KAC3BC,EAD2B,OAEtBvQ,gBAAmCiL,GAFb,mBAEvCxH,EAFuC,KAEjC+M,EAFiC,OAGtBxQ,gBAAmCiL,GAHb,mBAGvCwF,EAHuC,KAGjCC,EAHiC,OAIhB1Q,gBAAmCiL,GAJnB,mBAIvC6B,EAJuC,KAI9B6D,EAJ8B,OAKtB3Q,gBAAmCiL,GALb,mBAKvC2F,EALuC,KAKjCC,EALiC,OAMpB7Q,gBAAmCiL,GANf,mBAMvC6F,EANuC,KAMhCC,EANgC,OAOhB/Q,gBAAmCiL,GAPnB,mBAOvC+F,EAPuC,KAO9BC,EAP8B,OAQZjR,gBAAmCiL,GARvB,mBAQvCiG,EARuC,KAQ5BC,EAR4B,OASRnR,gBAAmCiL,GAT3B,mBASvClC,EATuC,KAS1BqI,EAT0B,QAUdpR,WAAuB,GAVT,qBAUvCqR,GAVuC,MAU7BC,GAV6B,SAWpBtR,gBAAmCiL,GAXf,qBAWvCsG,GAXuC,MAWhCC,GAXgC,SAYhBxR,YAAwB,GAZR,qBAYvCyR,GAZuC,MAY9BC,GAZ8B,SAaN1R,YAAwB,GAblB,qBAavC2R,GAbuC,MAazBC,GAbyB,SAcR5R,gBAAmCiL,GAd3B,qBAcvC4G,GAduC,MAc1BC,GAd0B,SAeJ9R,gBAAmCiL,GAf/B,qBAevC8G,GAfuC,MAexBC,GAfwB,SAgBdhS,WAAmC,mBAhBrB,qBAgBvCiE,GAhBuC,MAgB7BC,GAhB6B,SAiBJlE,gBAAmCiL,GAjB/B,qBAiBvCgH,GAjBuC,MAiBxBC,GAjBwB,SAkBRlS,gBAAmCiL,GAlB3B,qBAkBvCkH,GAlBuC,MAkB1BC,GAlB0B,SAmBNpS,gBAAmCiL,GAnB7B,qBAmBvCoH,GAnBuC,MAmBzBC,GAnByB,SAoBVtS,WAAuB,IApBb,qBAoBvCuS,GApBuC,MAoB3BC,GApB2B,SAqBZxS,gBAAmCiL,GArBvB,qBAqBvCwH,GArBuC,MAqB5BC,GArB4B,SAsBE1S,gBAC9CiL,GAvB4C,qBAsBvC0H,GAtBuC,MAsBrBC,GAtBqB,SAyBF5S,gBAC1CiL,GA1B4C,qBAyBvC4H,GAzBuC,MAyBvBC,GAzBuB,SA4BA9S,gBAC5CiL,GA7B4C,qBA4BvC8H,GA5BuC,MA4BtBC,GA5BsB,SA+BJhT,WAAuB,IA/BnB,qBA+BvCiT,GA/BuC,MA+BxBC,GA/BwB,SAgChBlT,gBAAmCiL,GAhCnB,qBAgCvCkI,GAhCuC,MAgC9BC,GAhC8B,SAkCJpT,YAAwB,GAlCpB,qBAkCvCqT,GAlCuC,MAkCxBC,GAlCwB,SAmCMtT,YAAwB,GAnC9B,qBAmCvCuT,GAnCuC,MAmCnBC,GAnCmB,SAoCUxT,YAAwB,GApClC,qBAoCvCyT,GApCuC,MAoCjBC,GApCiB,SAqCI1T,YAAwB,GArC5B,qBAqCvC2T,GArCuC,MAqCpBC,GArCoB,SAsCF5T,YAAwB,GAtCtB,qBAsCvC6T,GAtCuC,MAsCvBC,GAtCuB,SAuCc9T,YAC1D,GAxC4C,qBAuCvC+T,GAvCuC,MAuCfC,GAvCe,SA0CchU,YAC1D,GA3C4C,qBA0CvCiU,GA1CuC,MA0CfC,GA1Ce,SA6CUlU,YAAwB,GA7ClC,qBA6CvCmU,GA7CuC,MA6CjBC,GA7CiB,SA8CYpU,YACxD,GA/C4C,qBA8CvCqU,GA9CuC,MA8ChBC,GA9CgB,SAiDMtU,YAAwB,GAjD9B,qBAiDvCuU,GAjDuC,MAiDnBC,GAjDmB,SAqD1CxU,YAAwB,GArDkB,qBAmD5CyU,GAnD4C,MAoD5CC,GApD4C,SAyD1C1U,YAAwB,GAzDkB,qBAuD5C2U,GAvD4C,MAwD5CC,GAxD4C,SA6D1C5U,YAAwB,GA7DkB,qBA2D5C6U,GA3D4C,MA4D5CC,GA5D4C,SA8DE9U,YAAwB,GA9D1B,qBA8DvC+U,GA9DuC,MA8DrBC,GA9DqB,SA+DEhV,YAAwB,GA/D1B,qBA+DvCiV,GA/DuC,MA+DrBC,GA/DqB,SAiEAlV,YAAwB,GAjExB,qBAiEvCmV,GAjEuC,MAiErBC,GAjEqB,SAkEIpV,WAAuB,IAlE3B,qBAkEvCqV,GAlEuC,MAkEpBC,GAlEoB,SAmERtV,WAA4B,IAnEpB,qBAmEvCoH,GAnEuC,MAmE1BC,GAnE0B,SAoEdrH,gBAAmCiL,GApErB,qBAoEvCsK,GApEuC,MAoE7BC,GApE6B,SA4E1CC,YAAsB,CACxBC,eAAgB,GAGhBC,SAAU,MATVC,GAvE4C,GAuE5CA,MACAjU,GAxE4C,GAwE5CA,MAxE4C,MAyE5CkU,YAAe9K,GAzE6B,GAyE7BA,OAAQnK,GAzEqB,GAyErBA,KACvBkV,GA1E4C,GA0E5CA,SACAC,GA3E4C,GA2E5CA,iBA3E4C,GAmFfxU,IAAvBtB,GAnFsC,GAmFtCA,OAAQE,GAnF8B,GAmF9BA,WAnF8B,8CAmJ9C,WAAwBqH,EAAcC,GAAtC,IAAAjI,EAAA,SAAAA,EAAA,6DACQA,EAAIkI,SAASC,cAAc,KADnC,SAEiBC,GAAUJ,EAAMC,GAFjC,OAEEjI,EAAEqI,KAFJ,OAGErI,EAAEsI,SAAWL,EACbC,SAAS9H,KAAKmI,YAAYvI,GAE1BkI,SAAS9H,KAAKoI,YAAYxI,GAN5B,4CAnJ8C,sBA4J9C,SAASoI,GAAUK,EAAaR,GAC9B,OAAOhI,MAAMwI,GACVC,MAAK,SAACxI,GACL,OAAOA,EAASyI,UAEjBD,MAAK,SAACC,GAEL,OAKN,SAAoBC,EAAeX,GACjC,IAAMY,EAASD,EAEfC,EAAEC,iBAAmB,IAAIrG,KACzBoG,EAAE5E,KAAOgE,EACT,IAAMc,EAAe,GAEfC,EAAI,IAAIC,KAAK,CAACJ,GAAIZ,GACxBc,EAAaG,KAAKF,GAClBnB,GAAekB,GAfXI,CAAWR,EAAMV,GACVmB,IAAIC,gBAAgBV,MA9EjC9G,qBAAU,WACR,QAAiD4J,IAA7CjH,EAAM0I,oBAAoBsJ,SAASlF,MAAqB,CAC1D,IAAMmF,EAAoBhW,GAAOqE,QAC/B,SAACQ,GAAD,OAAWA,EAAMmE,KAAOjF,EAAM0I,oBAAoBsJ,SAASlF,SAK7D,GAFAjQ,QAAQC,IAAI,gBAAiBmV,GAEzBA,EAAkB7U,OAAS,EAAG,CAChC8T,IAAoB,GACpB1E,EAAQyF,EAAkB,GAAG/M,MAC7BwH,EAAQuF,EAAkB,GAAG9M,MAC7BwH,EAAWsF,EAAkB,GAAG7M,SAChCyH,EAAQoF,EAAkB,GAAG5M,MAC7B0H,EAASkF,EAAkB,GAAG3M,OAC9B2H,EAAWgF,EAAkB,GAAG1M,SAChC4H,EAAa8E,EAAkB,GAAGzM,WAClC4H,EAAe6E,EAAkB,GAAGlR,aACpCuM,GAAY2E,EAAkB,GAAGxM,UACjC+H,GAASyE,EAAkB,GAAG5Q,OAC9BqM,GAAWuE,EAAkB,GAAGnM,SAChC8H,GAAgBqE,EAAkB,GAAG7L,cACrClG,GAAY+R,EAAkB,GAAGzR,cAGjC,IAAM0R,EAAoBlI,IAAOiI,EAAkB,GAAGtM,cACtD9I,QAAQC,IAAI,aAAcoV,EAAkB3Q,OAAO,YACnD2M,GAAiBgE,EAAkB3Q,OAAO,OAC1C6M,GAAe8D,EAAkB3Q,OAAO,OACxC+M,GAAgB4D,EAAkB3Q,OAAO,SACzCmN,GAAawD,EAAkB3Q,OAAO,YAGtC,IAAM4Q,EAAkBnI,IAAOiI,EAAkB,GAAGrM,iBAQpD,GAPAgJ,GAAoBuD,EAAgB5Q,OAAO,OAC3CuN,GAAkBqD,EAAgB5Q,OAAO,OACzCyN,GAAmBmD,EAAgB5Q,OAAO,SAC1C6N,GAAW+C,EAAgB5Q,OAAO,YAElCyM,GAAiBiE,EAAkB,GAAGlM,eACtC+H,GAAemE,EAAkB,GAAGvM,aAEK,OAAvCuM,EAAkB,GAAG9L,oBACkBc,IAAvCgL,EAAkB,GAAG9L,cACrB,CACAqL,GAAYS,EAAkB,GAAG9L,eACjC,IAAM3C,EAAOyO,EAAkB,GAAG9L,cAClC,QAAac,IAATzD,GAA+B,OAATA,EAAe,CACvC,IAAMC,EAAWD,EAAK0D,QAAQ,WAAY,KArIN,uCAsIpCC,CAAS3D,EAAMC,MAMJ,sBAAfzD,EAAMoS,MAA+C,yBAAfpS,EAAMoS,KAC9ClS,GAAY,SAEZA,GAAY,YAEb,IAmCH,IAAMmS,GAAMC,aAAkB,WAG5BP,QAQIQ,GAAe,SAAC,GAAD,IACnB1E,EADmB,EACnBA,YADmB,OAKf,WAGJiE,GAASjE,GAAa,GACtBkE,KAEA,IAAMjJ,EAAU+E,EAAYpM,MAAM,KAC9BqH,EAAQ1L,OAAS,IAEnBuP,EAAW7D,EAAQ,IACnB+D,EAAQ/D,EAAQ,IAChBiE,EAASjE,EAAQ,KAInB0J,YAAW,CAAE1J,QAAS+E,IACnB3J,MAAK,SAACuO,GAAD,OAAaC,YAAWD,EAAQ,IAAI,MACzCvO,MAAK,SAACyO,GACO,OAARA,GACF1F,EAAW0F,QA4BbC,GAAmB,SAAChQ,EAAqB9B,GAC7C8B,EAAEC,iBACF2J,EAAQ1L,EAAMoE,MACdyH,EAAW7L,EAAMsE,SACjByH,EAAQ/L,EAAMuE,MACd0H,EAASjM,EAAMwE,OACf2H,EAAWnM,EAAMyE,SAEjBuM,GAAS,GAAD,OAAIhR,EAAMsE,QAAV,YAAqBtE,EAAMuE,KAA3B,YAAmCvE,EAAMwE,MAAzC,YAAkDxE,EAAMyE,UAChEgH,EAAc,KA2NhB,SAASsG,KAkBL3B,MAhBA7B,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,KA+EJ,SAAS6B,KACPtG,EAAQ,IACRE,EAAQ,IACRC,EAAW,IACXE,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXE,EAAa,qBACbC,EAAe,uBACfE,GAAY,GACZE,GAAS,IACTU,GAAiB,MACjBE,GAAe,MACfE,GAAgB,QAChBM,GAAoB,MACpBE,GAAkB,MAClBE,GAAmB,QACnBN,GAAa,eACbU,GAAW,eACXpB,GAAiB,kBACjB3K,GAAe,IACfyK,GAAe,IACfgE,GAAS,IACTlE,IAAgB,GAChBF,IAAW,GACXxN,GAAY,mBAmBd,OAVA/D,GAAW4W,MAAK,SAACvX,EAAc6I,GAC7B,YAAe4C,IAAXzL,EAAE0J,WAAiC+B,IAAX5C,EAAEa,MACxB1J,EAAE0J,KAAOb,EAAEa,KACN,GAIH,KAIR,eAACxD,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAWnC,MAAO,CAAEoC,gBAAiB,QAASH,UAAW,OAAzD,SACE,oBACED,UAAU,cACVhC,MAAO,CAAEqC,WAAY,gBAAiBC,SAAU,aAFlD,cAIgD8E,IAA7CjH,EAAM0I,oBAAoBsJ,SAASlF,MAChC,eACA,iBAIR,eAACtK,EAAA,EAAD,WACE,eAACA,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,mBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,sBACZzH,SAtXV,SAAsBC,GACpBA,EAAEC,iBACF2J,EAAQ5J,EAAEE,OAAOnF,OAEjB,IAAMuV,EAAY,IAAI5I,OAAJ,UAAc1H,EAAEE,OAAOnF,MAAM4M,YAAc,KACvDC,EAAiBvO,GAAOqE,QAAO,SAACQ,GACpC,OAAOA,EAAMoE,MAAQpE,EAAMoE,KAAKuF,MAAMyI,MAGxC3G,EAAc/B,QACDvD,IAATxH,IACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMrC,QAAS,GACjBkS,IAAiB,GAGrBuD,MAwWQlV,MAAO8B,IAGRA,GAAQA,EAAKrC,OAAS,GACrB,oBAAIyC,MAAO,CAAEsT,cAAe,QAA5B,SA/YR7G,EAAW5B,KAAI,SAAC0I,GACd,OACE,qBAAwB5K,QAAS,SAAC5F,GAAD,OAAOgQ,GAAiBhQ,EAAGwQ,IAA5D,yBACI,iCAASA,EAAWlO,OADxB,MACyC,gCAAQkO,EAAWhO,YADnDgO,EAAWnO,YAiZpB,eAACzC,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,2BACA,cAAC,GAAD,CAAiB0C,UA9CzB,SAAwB8H,GACtBhQ,GAAegQ,GACf,IAAMC,EAAa,+EAA2ED,EAAM,GAAG5T,MACvG+R,GAAY8B,WA4CWrM,IAAhB7D,GACC,oBAAIvD,MAAO,CAAEsT,cAAe,OAAQI,YAAa,MAAOzR,UAAW,OAAnE,SACGsB,GAAYsH,KAAI,SAACjE,GAAD,OACf,+BACE,cAAC,IAAD,CAASxD,MAAM,QAAQsF,KAAM,GAAI1I,MAAO,CAAEiC,UAAW,UACrD,sBACEjC,MAAO,CACLoD,MAAO,UACPnB,UAAW,OACXmG,cAAe,UAEjB6D,cAAY,iBANd,SAQGrF,EAAKhH,SAVDgH,EAAKhH,WAehB,QAGN,eAAC+C,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,mBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,qBACZzH,SA1YV,SAAsBC,GACpBA,EAAEC,iBACF6J,EAAQ9J,EAAEE,OAAOnF,QAyYTA,MAAO8O,OAGX,sBAAK5M,MAAO,CAAEkD,aAAc,QAAUsP,IAAKA,GAA3C,UACE,cAAC7P,EAAA,EAAKqG,MAAN,6BACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACLtV,MAAOA,GACPgF,SA1eU,SAACC,GAEnBkP,GAASlP,EAAEE,OAAOnF,OAAO,IAyejB6V,UAAW5B,GACXxH,YAAY,uBACZvK,MAAO,CAAEgM,MAAO,UAGN,OAAX9E,IACC,oBAAIlH,MAAO,CAAEsT,cAAe,QAA5B,SA7cRvW,GAAK8N,KAAI,SAAC0I,GAAgB,IAEtBK,EAEEL,EAFFK,SAFqB,EAInBL,EADFM,sBAAyBC,EAHJ,EAGIA,UAAWC,EAHf,EAGeA,eAEtC,OACE,qBAAmBpL,QAAS+J,GAAaa,GAAzC,0BACK,iCAASO,IADd,IACkC,gCAAQC,MADjCH,WA0cT,cAACI,EAAA,EAAD,UACE,eAACtM,EAAA,EAAD,WACE,cAACsM,EAAA,EAAUC,OAAX,CAAkBpR,GAAI6E,IAAKwM,OAAQ5J,SAAS,IAA5C,0BAGA,cAAC0J,EAAA,EAAUG,SAAX,CAAoB7J,SAAS,IAA7B,SACE,eAAC5C,EAAA,EAAK0M,KAAN,WACE,eAACzR,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,sBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,aACZzM,MAAOmL,EACPnG,SAralB,SAAyBC,GACvBA,EAAEC,iBACF8J,EAAW/J,EAAEE,OAAOnF,aAsaR,eAAC6E,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,mBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,OACZzM,MAAOiP,EACPjK,SAzalB,SAAsBC,GACpBA,EAAEC,iBACFgK,EAAQjK,EAAEE,OAAOnF,aA0aL,eAAC6E,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,oBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,QACZzM,MAAOmP,EACPnK,SA7alB,SAAuBC,GACrBA,EAAEC,iBACFkK,EAASnK,EAAEE,OAAOnF,aA8aN,eAAC6E,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,sBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,QACZzM,MAAOqP,EACPrK,SAjblB,SAAyBC,GACvBA,EAAEC,iBACFoK,EAAWrK,EAAEE,OAAOnF,uBAsbhB,eAAC6E,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,yBACA,eAACrG,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAASC,SArblC,SAA2BC,GACzBA,EAAEC,iBACFsK,EAAavK,EAAEE,OAAOnF,YAEJsJ,IAAdiG,IACW,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW9P,QAAS,GACtBoS,IAAsB,GAG1BqD,MA4a6DlV,MAAOuP,EAA9D,UACE,uDACC/Q,GAAWuO,KAAI,SAACwC,GACf,OAAO,iCAA4BA,EAAUhI,MAAzBgI,EAAUjI,aAIpC,eAACzC,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,2BACA,eAACrG,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAASC,SAlblC,SAA6BC,GAC3BA,EAAEC,iBACFuK,EAAexK,EAAEE,OAAOnF,YAEJsJ,IAAhBlC,IACa,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAa3H,QAAS,GACxBsS,IAAwB,GAG5BmD,MAya+DlV,MAAOoH,EAAhE,UACE,yDACA,6CACA,6CACA,+CACA,qDAGJ,eAACvC,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,uBACA,gCACE,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACLtV,MAAO0P,GACPjD,YAAY,IACZvK,MAAO,CAAEgM,MAAO,OAAQqI,QAAS,YAEnC,cAAC5L,EAAA,EAAD,CACEzI,MAAO,CACLqU,QAAS,SACThR,WAAY,MACZ+E,cAAe,MACf5F,WAAY,QAEdmG,QA9bZ,SAAqB5F,GACnBA,EAAEC,iBACFyK,GAAYD,GAAW,QAENpG,IAAboG,IACFuC,IAAqB,GAEvBiD,MAgbQ,eAWA,cAACvK,EAAA,EAAD,CACEzI,MAAO,CACLqU,QAAS,SACThR,WAAY,MACZ+E,cAAe,MACf5F,WAAY,QAEdmG,QA/bZ,SAAsB5F,GACpBA,EAAEC,iBACFyK,GAAYD,GAAW,QAENpG,IAAboG,IACFuC,IAAqB,GAEvBiD,MAibQ,qBAaJ,eAACrQ,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,oBACA,sBAAKhH,UAAU,cAAf,UACE,sBAAMA,UAAU,oBAAhB,eACA,cAACW,EAAA,EAAKC,QAAN,CACEwQ,KAAK,SACL7I,YAAY,QACZ+J,IAAI,IACJC,KAAK,OACLzW,MAAO4P,GACP5K,SArcZ,SAAuBC,GACrBA,EAAEC,iBACF2K,GAAS5K,EAAEE,OAAOnF,YAEJsJ,IAAVsG,IACFuC,IAAkB,GAEpB+C,cAkcI,eAACrQ,EAAA,EAAKwQ,MAAN,CAAYqB,UAAU,oBAAtB,UACE,cAAC7R,EAAA,EAAK8R,MAAN,CACErB,KAAK,WACLsB,MAAM,UACN9U,KAAK,UACL+U,QAAS/G,GACT9K,SAAU,kBAAM+K,IAAYD,OAE9B,cAACjL,EAAA,EAAK8R,MAAN,CACErB,KAAK,WACLsB,MAAM,iBACNC,QAAS7G,GACThL,SAAU,kBAAMiL,IAAiBD,UAGrC,cAACnL,EAAA,EAAKqG,MAAN,kCACA,eAACrG,EAAA,EAAKwQ,MAAN,WACE,eAACxQ,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH/E,MAAOsQ,GACPtL,SAhcV,SAA+BC,GAC7BA,EAAEC,iBACF,IAAM4R,EAAU7R,EAAEE,OAAOnF,MACzBuQ,GAAiBtL,EAAEE,OAAOnF,OAC1BiR,GAAoBhM,EAAEE,OAAOnF,YACRsJ,IAAjBoH,IACFG,GAAc9P,EAAc+V,EAASpG,KAEhB,OAAnBzL,EAAEE,OAAOnF,YAAqCsJ,IAAnBrE,EAAEE,OAAOnF,OACtCuS,IAA0B,GAE5B2C,MAsbQhT,MAAO,CAAEgM,MAAO,OAAQqI,QAAS,UAJnC,UAME,wBAAQvW,MAAM,KAAd,gBACC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAM+M,KACxE,SAACxM,GACC,OAAO,wBAAQP,MAAK,UAAKO,GAAlB,mBAA+CA,IAAjBe,OAAOf,UAIlD,eAACsE,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH+F,GAAG,SACH9K,MAAOwQ,GACPxL,SAhcV,SAA6BC,GAC3BA,EAAEC,iBACFuL,GAAexL,EAAEE,OAAOnF,OACxBmR,GAAkBlM,EAAEE,OAAOnF,OACJ,OAAnBiF,EAAEE,OAAOnF,YAAqCsJ,IAAnBrE,EAAEE,OAAOnF,OACtCyS,IAAwB,GAE1ByC,MA0bQhT,MAAO,CAAEgM,MAAO,OAAQqI,QAAS,SAAUhR,WAAY,OALzD,UAOE,wBAAQvF,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEC2C,QAAO,SAACoU,GACP,OAAOzV,OAAOyV,IAAiBnG,MAEhC7D,KAAI,SAACxM,GACJ,OACE,wBAAQP,MAAK,UAAKO,GAAlB,mBAAwDA,IAAxD,cAAqCe,OAAOf,WAIpD,eAACsE,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH+F,GAAG,UACH9K,MAAO0Q,GACP1L,SAxeV,SAA8BC,GAC5BA,EAAEC,iBACFyL,GAAgB1L,EAAEE,OAAOnF,OACzBqR,GAAmBpM,EAAEE,OAAOnF,YACNsJ,IAAlBgH,IACFO,GAAc9P,EAAcuP,GAAerL,EAAEE,OAAOnF,QAE/B,SAAnBiF,EAAEE,OAAOnF,YAAuCsJ,IAAnBrE,EAAEE,OAAOnF,OACxC2S,IAAyB,GAE3BuC,MA+dQhT,MAAO,CAAEqU,QAAS,SAAUrI,MAAO,QAAS3I,WAAY,OAL1D,UAOE,wBAAQvF,MAAM,OAAd,kBACCoO,GAAMrB,KAAI,SAACiK,EAAWxI,GACrB,IAAMyI,EAAWzI,EACjB,OACE,wBAAsCxO,MAAOgX,EAA7C,SACGA,GADH,oBAA0BC,UAMhC,uBACA,cAACpS,EAAA,EAAKqG,MAAN,CAAYhJ,MAAO,CAAEiC,UAAW,QAAhC,wBACA,eAACU,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH+F,GAAG,eACH9K,MAAO8Q,GACP9L,SA9eV,SAA2BC,GACzBA,EAAEC,iBAEF6L,GAAa9L,EAAEE,OAAOnF,OAMtB,IAAM8Q,EAAoBzE,IAAOpH,EAAEE,OAAOnF,MAAO,SAC9C4D,OAAO,WACPgJ,WAED+G,GADgB,kBAAd7C,EACmBA,EAEA,IAEA,gBAAnB7L,EAAEE,OAAOnF,OACX6S,IAAsB,IA6dhB3Q,MAAO,CAAEgM,MAAO,OALlB,UAOE,iDACCO,GAAM1B,KAAI,SAAClM,EAAM2N,GAChB,IAAMyI,EAAWzI,EACjB,OACE,wBAAiCxO,MAAOa,EAAxC,SACGA,GADH,eAAqBoW,aAO7B,uBACA,cAACpS,EAAA,EAAKqG,MAAN,gCACA,eAACrG,EAAA,EAAKwQ,MAAN,WACE,eAACxQ,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH/E,MAAOgR,GACPhM,SA5eV,SAAkCC,GAChCA,EAAEC,iBACF+L,GAAoBhM,EAAEE,OAAOnF,YACLsJ,IAApB8H,IACFG,GAAiBxQ,EAAckE,EAAEE,OAAOnF,MAAOoR,KAE1B,OAAnBnM,EAAEE,OAAOnF,YAAqCsJ,IAAnBrE,EAAEE,OAAOnF,OACtC+S,IAAiC,GAEnCmC,MAoeQhT,MAAO,CAAEgM,MAAO,OAAQqI,QAAS,UAJnC,UAME,wBAAQvW,MAAM,KAAd,gBACC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAM+M,KACxE,SAACxM,GACC,OAAO,wBAAQP,MAAK,UAAKO,GAAlB,mBAA+CA,IAAjBe,OAAOf,UAIlD,eAACsE,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH+F,GAAG,SACH9K,MAAOkR,GACPlM,SA9eV,SAAgCC,GAC9BA,EAAEC,iBACFiM,GAAkBlM,EAAEE,OAAOnF,OACJ,OAAnBiF,EAAEE,OAAOnF,YAAqCsJ,IAAnBrE,EAAEE,OAAOnF,OACtCiT,IAA+B,GAEjCiC,MAyeQhT,MAAO,CAAEgM,MAAO,OAAQqI,QAAS,SAAUhR,WAAY,OALzD,UAOE,wBAAQvF,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEC2C,QAAO,SAACoU,GACP,OAAOzV,OAAOyV,IAAiBzF,MAEhCvE,KAAI,SAACxM,GACJ,OACE,wBAAQP,MAAK,UAAKO,GAAlB,mBAAwDA,IAAxD,cAAqCe,OAAOf,WAIpD,eAACsE,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH+F,GAAG,UACH9K,MAAOoR,GACPpM,SA/gBV,SAAiCC,GAC/BA,EAAEC,iBACFmM,GAAmBpM,EAAEE,OAAOnF,YACHsJ,IAArB0H,IACFO,GAAiBxQ,EAAciQ,GAAkB/L,EAAEE,OAAOnF,QAErC,SAAnBiF,EAAEE,OAAOnF,YAAuCsJ,IAAnBrE,EAAEE,OAAOnF,OACxCmT,IAAgC,GAElC+B,MAugBQhT,MAAO,CAAEqU,QAAS,SAAUrI,MAAO,QAAS3I,WAAY,OAL1D,UAOE,wBAAQvF,MAAM,OAAd,kBACCoO,GAAMrB,KAAI,SAACiK,EAAWxI,GACrB,IAAMyI,EAAWzI,EACjB,OACE,wBAAsCxO,MAAOgX,EAA7C,SACGA,GADH,oBAA0BC,UAMhC,uBACA,cAACpS,EAAA,EAAKqG,MAAN,CAAYhJ,MAAO,CAAEiC,UAAW,QAAhC,sBACA,eAACU,EAAA,EAAKC,QAAN,CACEC,GAAG,SACH+F,GAAG,aACH9K,MAAOwR,GACPxM,SA1iBV,SAAyBC,GACvBA,EAAEC,iBACFuM,GAAWxM,EAAEE,OAAOnF,OACG,gBAAnBiF,EAAEE,OAAOnF,OACXqT,IAAoB,IAuiBdnR,MAAO,CAAEgM,MAAO,OALlB,UAOE,iDACCwF,GAAkBjU,OAAS,EACxBgP,GACG9L,QAAO,SAAC9B,GAAD,OAAUA,EAAO6S,MACxB3G,KAAI,SAAClM,EAAM2N,GACV,IAAMyI,EAAWzI,EACjB,OACE,wBAAiCxO,MAAOa,EAAxC,SACGA,GADH,eAAqBoW,OAK3B,KAEHxI,GAAM1B,KAAI,SAAClM,EAAM2N,GAChB,IAAMyI,EAAWzI,EACjB,OACE,wBAAiCxO,MAAOa,EAAxC,SACGA,GADH,eAAqBoW,aAO7B,eAACpS,EAAA,EAAKwQ,MAAN,CAAYnT,MAAO,CAAEiC,UAAW,OAAhC,UACE,cAACU,EAAA,EAAKqG,MAAN,0BACA,cAACrG,EAAA,EAAKC,QAAN,CACEC,GAAG,WACHmS,KAAM,EACNlX,MAAOkQ,GACPzD,YAAY,mBACZzH,SA/qBV,SAA6BC,GAC3BA,EAAEC,iBACFiL,GAAelL,EAAEE,OAAOnF,aAgrBpB,eAAC6E,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,gCACA,eAACrG,EAAA,EAAKC,QAAN,CACEC,GAAG,SACHC,SAjrBV,SAA+BC,GAC7BA,EAAEC,iBACFmL,GAAiBpL,EAAEE,OAAOnF,YACHsJ,IAAnBrE,EAAEE,OAAOnF,OACXqS,IAA0B,GAE5B6C,MA4qBQlV,MAAOoQ,GAHT,UAKE,oDACA,qDACA,4DACA,4DACA,8CACA,+CACA,sDACA,iDAIJ,eAACvL,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,uBACA,eAACrG,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAASC,SAxrBlC,SAA0BC,GACxBA,EAAEC,iBACF3C,GAAY0C,EAAEE,OAAOnF,QAsrBuCA,MAAOsC,GAA7D,UACE,qDACA,2CACA,kDAIJ,cAACqI,EAAA,EAAD,CAAQM,QAAQ,UAAUJ,QA9jBhC,SAAqB5F,GACnBA,EAAEC,iBAEF,IAAMmC,EAAsB,CAC1BC,QAC+CgC,IAA7CjH,EAAM0I,oBAAoBsJ,SAASlF,MAC/B,EACA7N,OAAOe,EAAM0I,oBAAoBsJ,SAASlF,OAChD5H,UAAe+B,IAATxH,EAAqB,IAAMA,EAAKqV,OACtC3P,UAAe8B,IAATwF,EAAqB,IAAMA,EAAKqI,OACtC1P,aAAqB6B,IAAZ6B,EAAwB,IAAMA,EAAQgM,OAC/CzP,UAAe4B,IAAT2F,EAAqB,IAAMA,EAAKkI,OACtCxP,WAAiB2B,IAAV6F,EAAsB,IAAMA,EAAMgI,OACzCvP,aAAqB0B,IAAZ+F,EAAwB,IAAMA,EAAQ8H,OAC/CtP,eAAyByB,IAAdiG,EAA0B,IAAMA,EAAU4H,OACrD/T,iBAA6BkG,IAAhBlC,EAA4B,IAAMA,EAAY+P,OAC3DrP,SAAU4H,GACVhM,WAAiB4F,IAAVsG,GAAsB,IAAMA,GACnC7H,iBAA6BuB,IAAhB4G,GAA4B,IAAMA,GAAYiH,OAC3DnP,aAAa,GAAD,OAAKsI,GAAL,YAAsBE,GAAtB,YAAqCE,GAArC,YAAqDI,IACjE7I,gBAAgB,GAAD,OAAK+I,GAAL,YAAyBE,GAAzB,YAA2CE,GAA3C,YAA8DI,IAC7EtJ,UAAW,IAAI5H,KACf6H,QAAS2H,GACT1H,mBAAiCkB,IAAlB8G,GAA8B,IAAMA,GAAc+G,OACjE9O,UAAqBiB,IAAfjH,EAAMoS,KAAqB,IAAMpS,EAAMoS,KAAK0C,OAClD7O,eAA0BgB,IAAfjH,EAAMoS,KAAqB,IAAMpS,EAAMoS,KAAK0C,OACvD5O,SAAU,GACVC,mBAA4Bc,IAAbsK,GAAyB,IAAMA,GAASuD,OACvD1O,aAAcuH,GACdtH,SAAU,EACV7F,aAAcP,IAGhBpD,QAAQC,IAAI,UAAWkI,GAEvB,IAAMsB,EAAU,IAAIC,SAEpBnD,GAAYoD,SAAQ,SAACC,GACnBH,EAAQI,OAAO,OAAQD,MAGzBH,EAAQI,OAAO,eAAgBC,KAAKC,UAAU5B,IAE9C,IAAM6B,EAAS,CACblK,OAAQ,OACRf,KAAM0K,GAGR,IAEE,IAAM5K,EAAWD,MAAM,qEAAD,OACiDiB,4DACrEmK,GAEFuK,IAAkB,GAElB1V,EAASwI,MAAK,SAAC4C,GACO,MAAhBA,EAAKC,OACPC,YAAW,WACT8L,KACA1B,IAAkB,KACjB,KAEH2D,MAAM,sDAAD,OAAuDjO,EAAKC,YAGrE,MAAOnE,GACP/F,QAAQC,IAAR,sCAA2C8F,MA2fO4Q,SAAUvC,GAA1D,oBAGA,cAAC3I,EAAA,EAAD,CAAQE,QAASsK,GAAajT,MAAO,CAAEqD,WAAY,OAAnD,mBAGCiO,GACC,cAAC3O,EAAA,EAAKqG,MAAN,CAAYhJ,MAAO,CAAEqD,WAAY,OAAjC,iCACE,KACJ,8B,qBCv7BO8R,OAlLf,SAAwBhV,GAA4B,IAAD,EACVzC,IAA/BtB,EADyC,EACzCA,OAAQM,EADiC,EACjCA,mBADiC,EAEnBP,gBAAiCiL,GAFd,mBAE1CgO,EAF0C,KAE7BC,EAF6B,OAGLlZ,WAAuBC,GAHlB,mBAG1CkZ,EAH0C,KAG1BC,EAH0B,OAIvBpZ,WAA8B,IAAIiC,MAJX,mBAI1CN,EAJ0C,KAInCgF,EAJmC,KAuDjD,OAjDAtF,qBAAU,WAGR,OAFAd,IAEQyD,EAAMK,UACZ,IAAK,iBAGL,IAAK,gBACH+U,EAAkBnZ,EAAOqE,QAAO,SAACC,GAAD,MAAwC,UAA1BA,EAASC,iBACvD,MACF,IAAK,gBACH4U,EACEnZ,EAAOqE,QAAO,SAACC,GAAD,MAAwC,WAA1BA,EAASC,iBAEvC,MACF,QACE3D,QAAQC,IAAI,cAEf,IA+BCb,EAAOmB,OAAS,EACX,6CAIP,eAACsE,EAAA,EAAD,CAAWG,UAAU,cAAchC,MAAO,CAAEiC,UAAW,OAAvD,UACE,cAACE,EAAA,EAAD,CAAWnC,MAAO,CAAEoC,gBAAiB,SAArC,SACE,qBAAIpC,MAAO,CAAEqC,WAAY,gBAAiBC,SAAU,aAApD,UACsB,mBAAnBnC,EAAMK,UAAoD,kBAAnBL,EAAMK,SAA7C,qBAEe,IAHlB,gBAOF,cAAC,KAAD,CACEsC,SAAU,SAACuJ,GAAD,OAASvJ,EAASuJ,IAC5BvO,MAAOA,EACP0X,cA7CN,YAM8B,IAL5BxX,EAK2B,EAL3BA,KAOA,MAAa,UAFc,EAJ3ByX,MAQIH,EAAeI,MACb,SAACC,GAAD,OACExL,IAAOwL,EAAE7P,cAAcpE,OAAO,gBAC9ByI,IAAOnM,GAAM0D,OAAO,iBAGjB,YAIJ,MA0BHkU,WAvBN,SAAwB9X,GACtBuX,EAAOvX,IAuBHkE,UAAU,iBACV6T,aAAa,OAEf,cAAC9T,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,UACE,sBAAMF,UAAU,YAAYhC,MAAO,CAAEqD,WAAY,OAAjD,SACE,+BACE,sBAAMrD,MAAO,CAAEwC,WAAY,QAA3B,oBACA,cAACiH,EAAA,EAAD,CACEzJ,MAAO,CACLsC,SAAU,QACVc,MAAO,UACPC,WAAY,MACZyS,WAAY,SALhB,SASIR,EACG7U,QAAO,SAACpC,GACP,GAAI+W,GAEAjL,IAAO9L,EAAIyH,cAAcpE,OAAO,eAChCyI,IAAOiL,GAAa1T,OAAO,cAE3B,OAAOrD,KAIZoC,QACC,SAAC2J,GAAD,MAC8B,cAA5BA,EAAYlJ,aACgB,cAA5BkJ,EAAYlJ,eACd3D,uBAOC6J,IAAhBgO,EACGE,EACG7U,QAAO,SAACsV,GAIP,GAHqB5L,IAAO4L,EAAcjQ,cACtBqE,MAGlB,OAAO4L,KAGVlL,KAAI,SAAC5J,GACJ,IAAMsG,EAAU,UAAMtG,EAAMsE,QAAZ,YAAuBtE,EAAMuE,KAA7B,YAAqCvE,EAAMwE,OACrDqF,EAAiBC,UAAUxD,GAC3ByD,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEjC,oBAAqB1I,EAAM0I,oBAC3B5H,MAAOA,EACPgI,QAAS+B,EACTjD,OAAO,YAJF9G,EAAMmE,OAQnBkQ,EACG7U,QAAO,SAACpC,GACP,GAAI+W,GAEAjL,IAAO9L,EAAIyH,cAAcpE,OAAO,eAChCyI,IAAOiL,GAAa1T,OAAO,cAE3B,OAAOrD,KAIZoC,QACC,SAAC2J,GAAD,MAC8B,cAA5BA,EAAYlJ,aACgB,cAA5BkJ,EAAYlJ,eAEfgS,MAAK,SAACvX,EAAU6I,GACf,OAAI7I,EAAEmK,aAAetB,EAAEsB,aACd,GAGD,KAET+E,KAAI,SAAC5J,GACJ,IAAMsG,EAAU,UAAMtG,EAAMsE,QAAZ,YAAuBtE,EAAMuE,KAA7B,YAAqCvE,EAAMwE,OACrDqF,EAAiBC,UAAUxD,GAC3ByD,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEjC,oBAAqB1I,EAAM0I,oBAC3B5H,MAAOA,EACPgI,QAAS+B,EACTjD,OAAO,YAJF9G,EAAMmE,W,iBClLvB4Q,GAAS,6BACXC,GAAa,EA0GFC,OAxGf,WACE,IACMC,EAAeha,IAAMia,OADW,MADX,EAGOhN,qBAHP,mBAGTiN,GAHS,WAIvBC,OAAyClP,EAE7C5J,qBAAU,WACR,IAAM+Y,EAAkB1S,SAAS2S,eAAe,gBADlC,4CAEd,gCAAA7a,EAAA,sEAEUgB,EAAY,IAAIC,QAAJ,4EACqDC,4DACrE,CACEC,OAAQ,QALhB,SASuBrB,EAAoBkB,GAT3C,QASUI,EATV,QAWaQ,OAAS,IACVkZ,EAAmB1Z,EAAK0D,QAAO,SAACpC,GACpC,GACE8L,IAAO9L,EAAIyH,cAAcpE,OAAO,eAChCyI,IAAO,IAAI/L,MAAQsD,OAAO,cAE1B,OAAOrD,KAGXgY,EAAaI,GAEW,OAApBF,IACFD,EAAYI,IACZC,EAAWF,KAxBnB,gDA4BIzZ,QAAQC,IAAR,MA5BJ,0DAFc,0DAkCdP,KACC,IAGH,IAAMga,EAAgB,WACpB,OAAO,IAAIE,OAAOC,KAAKC,IAAIX,EAAaY,QAAwB,CAC9DC,OAAQ,CAAEC,IAAK,kBAAmBC,KAAM,YACxCC,KAAM,MAIV,SAASC,EACPjF,EACAtH,EACA5J,GAIA,IAAMoW,EAAY,IAAIT,OAAOC,KAAKS,OAAO,CACvCC,UAAWX,OAAOC,KAAKW,UAAUC,KACjCC,SAAUvF,EACVuC,MAAM,GAAD,OAAKsB,GAAOC,KAAeD,GAAOzY,QAAlC,YAA6C0D,EAAMoE,MACxDwF,IAAKA,IAGDtD,EAAU,UAAMtG,EAAMsE,QAAZ,YAAuBtE,EAAMuE,KAA7B,YAAqCvE,EAAMwE,OACrDqF,EAAiBC,UAAUxD,GAC3ByD,EAAY,0DAAsDF,GAElE6M,EAAa,iCACJ3M,EADI,aACa/J,EAAMsE,QADnB,2BAKbqS,EAAa,IAAIhB,OAAOC,KAAKgB,WAAW,CAC5CC,QAASH,IAGXN,EAAUU,YAAY,SAAS,WAC7BH,EAAWI,KAAKnN,EAAKwM,MA/EE,SAmFZV,EAnFY,8EAmF3B,WAA0BsB,GAA1B,SAAAtc,EAAA,+EACSsc,EAAatR,QAAb,iCAAAuR,MAAqB,WAAOjX,GAAP,uBAAAtF,EAAA,6DACpBsN,EADoB,UACPhI,EAAMsE,QADC,aACWtE,EAAMuE,KADjB,aAC0BvE,EAAMwE,MADhC,YACyCxE,EAAMyE,SAD/C,SAGJiN,YAAW,CAAE1J,YAHT,cAGpB2J,EAHoB,gBAICuF,YAAUvF,EAAQ,IAJnB,gBAIlBqE,EAJkB,EAIlBA,IAAKC,EAJa,EAIbA,SAEK9P,IAAdkP,GACFc,EAAU,CAAEH,MAAKC,OAAOZ,EAAWrV,GAPX,4CAArB,wDADT,4CAnF2B,sBAgG3B,OACE,qBACEuR,IAAK2D,EACLnW,MAAO,CAAEgM,MAAO,IAAKoM,OAAQ,OAAQV,SAAU,e,gBC+EtCW,OA3Kf,SAAqBlY,GAAkD,IAC7D/D,EAAWsB,IAAXtB,OAD4D,EAExCD,YAAwB,GAFgB,mBAE7Dmc,EAF6D,KAErDC,EAFqD,KAQpE,SAASC,IACPD,GAAWD,GAGb,GAAIlc,EAAOmB,OAAS,EAClB,OAAO,6CAGT,IAAMkb,EAAoBrc,EAAOqE,QAAO,SAACQ,GAAD,OAAWA,EAAMmE,KAAOjF,EAAMgS,SAASlF,SAC3EyL,EAAgBD,EAAkB,GAAGnS,cAgBzC,MAdoB,SAAlBoS,QACkBtR,IAAlBsR,GACkB,KAAlBA,GACkB,OAAlBA,EAEAA,EACE,sGAEoBtR,IAAlBsR,IACFA,EAAgBD,EAAkB,GAAGnS,eAGzCtJ,QAAQC,IAAIyb,GAGV,cAAC,WAAD,UACE,eAAC7W,EAAA,EAAD,CAAWG,UAAU,cAAchC,MAAO,CAAEiC,UAAW,OAAvD,UACE,cAACE,EAAA,EAAD,CAAWnC,MAAO,CAAEoC,gBAAiB,SAArC,SACE,oBAAIpC,MAAO,CAAEqC,WAAY,gBAAiBC,SAAU,aAApD,4BAIF,eAACP,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,UACGuW,EAAkB5N,KAAI,SAAC5J,GACtB,OACE,eAACyG,EAAA,EAAD,CACE1F,UAAU,mDAEVhC,MAAO,CACLoY,OAAQ,QACRnW,UAAW,MACX0F,QAAS,QANb,UASE,cAACD,EAAA,EAAKwM,OAAN,CAAalU,MAAO,CAAEsC,SAAU,SAAUE,WAAY,UAAtD,mBACMvB,EAAMoE,KADZ,cAGA,eAACqC,EAAA,EAAKc,KAAN,WACE,sBAAMxI,MAAO,CAAEwC,WAAY,QAA3B,yBAAwD,IACxD,qBAAKxC,MAAO,CAAEyC,UAAW,UAAzB,SAAsCxB,EAAM0E,eAE9C,eAAC+B,EAAA,EAAKc,KAAN,CAAWxI,MAAO,CAAEkD,aAAc,OAAlC,UACE,sBAAMlD,MAAO,CAAEwC,WAAY,QAA3B,uBAAsD,IACtD,+BAAOvB,EAAM2E,cAEf,cAAC6C,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAS,kBA7DxBC,EA6DwC3H,EAAMmE,QA5D/DjF,EAAM2I,QAAQjE,KAAd,UAA8B+D,GADhC,IAAmBA,GA6DH,oBAlBK3H,EAAMmE,SAyBnB,cAAClD,EAAA,EAAD,CAAKF,UAAU,mDAAf,SACE,cAACiG,EAAA,EAAD,CAAOC,IAAKwQ,EAAeC,WAAS,EAAChQ,QAAS6P,MAE/CF,GACC,wBACEtW,UAAU,SACVhC,MAAO,CAAE0X,SAAU,YACnBM,MAAI,EACJrP,QAAS6P,EAJX,SAME,qBACExW,UAAU,QACVkG,IAAKwQ,EACL/P,QAAS6P,EACTI,IAAI,kBAKZ,cAAC7W,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,UACE,cAAC2W,GAAA,EAAD,CAAW7Y,MAAO,CAAEiC,UAAW,OAA/B,SACGwW,EAAkB5N,KAAI,SAAC5J,GACtB,IAAMuG,EAAoB,IAAIpJ,KAAK6C,EAAM6E,cACnC2B,EAAkB,IAAIrJ,KAAK6C,EAAM8E,iBACjCwB,EAAU,UAAMtG,EAAMsE,QAAZ,YAAuBtE,EAAMuE,KAA7B,YAAqCvE,EAAMwE,OACrDqF,EAAiBC,UAAUxD,GAC3ByD,EAAY,0DAAsDF,GACxE,OACE,eAAC,WAAD,WACE,eAAC+N,GAAA,EAAUxO,KAAX,CAAgBrI,UAAU,4BAA1B,UACE,8CAAqB,IACrB,sBAAMhC,MAAO,CAAEqD,WAAY,OAA3B,SACGtF,EAAWkD,EAAM+E,WAAW,GAAM,QAGvC,eAAC6S,GAAA,EAAUxO,KAAX,CAAgBrI,UAAU,4BAA1B,UACE,+CAAsB,IACtB,sBAAMhC,MAAO,CAAEqD,WAAY,MAAOyV,YAAa,OAA/C,SACG/a,EAAWkD,EAAM6E,cAAc,GAAO,KAEzC,mCACA,sBAAM9F,MAAO,CAAEqD,WAAY,OAA3B,SACGtF,EAAWkD,EAAM8E,iBAAiB,GAAO,QAG9C,eAAC8S,GAAA,EAAUxO,KAAX,CAAgBrI,UAAU,4BAA1B,UACE,iDAAwB,IACxB,sBAAMhC,MAAO,CAAEqD,WAAY,OAA3B,mBACMmE,EAAkB5I,mBAAmB,QAAS,CAChD2J,UAAW,aAGdd,IAAoBD,EACnB,qCACE,sBAAMxH,MAAO,CAAEqD,WAAY,OAA3B,kBACA,sBAAMrD,MAAO,CAAEqD,WAAY,OAA3B,mBACMoE,EAAgB7I,mBAAmB,QAAS,CAC9C2J,UAAW,gBAIf,aAGiBnB,IAAtBnG,EAAM4E,aAA6B5E,EAAM4E,YAAYtI,OAAS,EAC7D,eAACsb,GAAA,EAAUxO,KAAX,CAAgBrI,UAAU,4BAA1B,UACE,6CAAoB,IACpB,sBAAMhC,MAAO,CAAEqD,WAAY,OAA3B,SAAqCpC,EAAM4E,iBAE3C,KAEJ,eAACgT,GAAA,EAAUxO,KAAX,CAAgBrI,UAAU,4BAA1B,UACE,mBAAGhC,MAAO,CAAE8Y,YAAa,OAAzB,sBAA+C,IAC/C,uBAAM9Y,MAAO,CAAEsC,SAAU,SAAzB,UACE,cAAC,IAAD,CAAYoG,KAAM,KAClB,mBACE1E,KAAMgH,EACNhL,MAAO,CAAEqD,WAAY,MAAOf,SAAU,UAFxC,SAIGiF,UAIP,eAACsR,GAAA,EAAUxO,KAAX,CAAgBrI,UAAU,4BAA1B,UACE,mBAAGhC,MAAO,CAAE8Y,YAAa,OAAzB,yBAAkD,IAClD,sBAAM9Y,MAAO,CAAEsC,SAAU,UAAzB,SAAsCrB,EAAMmF,iBAzD3BnF,EAAMmE,mB,SCrH9B,OAA0B,8CCY5B2T,GAAuE,SAAC,GAE9E,IADLC,EACI,EADJA,aACI,EACkC5P,qBADlC,mBACG6P,EADH,KACgBC,EADhB,KAGJ,OACE,sBAAKlX,UAAU,mBAAmBhC,MAAO,CAAEiC,UAAW,QAAtD,UACE,oBACEjC,MAAO,CACLqC,WAAY,gBACZC,SAAU,QACVc,MAAO,SACP+V,iBAAkB,aALtB,qBAUCF,GACC,qBAAKjZ,MAAO,CAAEsC,SAAU,UAAxB,+CAEF,uBAAO4F,IAAKkR,GAAQpN,MAAM,OAAOoM,OAAO,MAAMiB,UAAQ,EAACC,MAAI,EAACC,OAAK,IACjE,wBAAQrR,IAAKkR,GAAQhG,KAAK,cAC1B,mBAAGpT,MAAO,CAAEsC,SAAU,UAAtB,qBACA,cAAC,eAAD,CACEkX,SAAQ,UAAK3c,4EACb4c,WAAW,SACXC,UAAWV,EACXW,UAAW,SAAC9d,GACVqd,GAAe,IAEjBU,YAAY,EACZC,aAAc,qBACdC,aAAa,mB,SC4MNC,OAlOf,SAAuB5Z,GAAe,IAC5B7D,EAAeoB,IAAfpB,WAD2B,EAESH,YAAwB,GAFjC,mBAE5B6d,EAF4B,KAEZC,EAFY,OAGf9d,WAAuB,GAHR,mBAG5ByM,EAH4B,KAGxBsR,EAHwB,OAIX/d,gBAAmCiL,GAJxB,mBAI5BxH,EAJ4B,KAItBua,EAJsB,OAKGhe,gBAAmCiL,GALtC,mBAK5B4G,EAL4B,KAKfoM,EALe,OAMHje,gBAAmCiL,GANhC,mBAM5BsK,EAN4B,KAMlBC,EANkB,OAOGxV,gBAAmCiL,GAPtC,mBAO5BiT,EAP4B,KAOfC,EAPe,OASGne,WAA4B,IAT/B,mBAS5BoH,EAT4B,KASfC,EATe,KAwDnC,SAASyP,IACPkH,EAAQ,IACRD,EAAM,GACNE,EAAe,IACfzI,EAAY,IAgDd,OAA0B,IAAtBrV,EAAWiB,OACN,0DAGTjB,EAAW4W,MAAK,SAACvX,EAAc6I,GAC7B,YAAe4C,IAAXzL,EAAE0J,WAAiC+B,IAAX5C,EAAEa,MACxB1J,EAAE0J,KAAOb,EAAEa,KACN,GAIH,KAIR,eAACxD,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAKF,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,UACE,oBAAInC,MAAO,CAAEqC,WAAY,gBAAiBC,SAAU,aAApD,mCAMN,cAACmG,EAAA,EAAD,CACEE,QAnGN,SAA+B5F,GAC7BA,EAAEC,iBACFiX,GAAmBD,IAkGfha,MAAO,CAAEkD,aAAc,OACvB6F,QAAQ,YAHV,8BAOCiR,EACC,cAAC,KAAD,CACEO,SAAS,YACTC,kBAAkB,KAClBC,SAAU,IACVC,eAAe,WACfC,eAAe,WACfC,gBAAgB,WAChBC,yBAAyB,EACzBC,OAAO,qCART,SAUGxe,EAAWuO,KAAI,SAACwC,GACf,OACE,cAACwL,GAAA,EAAUxO,KAAX,CAEE0Q,QAAM,EACNpS,QAAS,kBAjJvB,SAA0BC,GACxBqR,GAAmBD,GACnB,IAAMgB,EAAoB1e,EAAWmE,QAAO,SAACwa,GAAD,OAAQA,EAAG7V,KAAOwD,KAC9DsR,EAAMc,EAAkB,GAAG5V,IAC3B+U,EAAQa,EAAkB,GAAG3V,MACY,OAArC2V,EAAkB,GAAGnV,YACvBuU,EAAe,IAEfA,EAAeY,EAAkB,GAAGnV,aAGH,IAAjCmV,EAAkB,GAAG3U,eACae,IAAlC4T,EAAkB,GAAG3U,UACa,OAAlC2U,EAAkB,GAAG3U,UACoB,IAAzC2U,EAAkB,GAAG3U,SAAS9I,OAE9BoU,EACE,kGAGFA,EAAYqJ,EAAkB,GAAG3U,UA6HR6U,CAAiB7N,EAAUjI,KAH5C,SAKGiI,EAAUhI,MAJNgI,EAAUjI,SASrB,KACJ,eAACzC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,mBACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,2BACZzH,SAlIV,SAAsBC,GACpBA,EAAEC,iBACFmX,EAAQpX,EAAEE,OAAOnF,QAiITA,MAAO8B,OAIX,eAAC+C,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,0BACA,cAACrG,EAAA,EAAKC,QAAN,CACEwQ,KAAK,OACL7I,YAAY,kCACZzH,SAvIV,SAA6BC,GAC3BA,EAAEC,iBACFoX,EAAerX,EAAEE,OAAOnF,QAsIhBA,MAAOkQ,OAIX,eAACrL,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,2BACA,cAAC,GAAD,CAAiB0C,UAzIzB,SAAwB8H,GACtBhQ,EAAegQ,GACf,IAAMC,EAAa,+EAA2ED,EAAM,GAAG5T,MACvG+R,EAAY8B,WAuIWrM,IAAhB7D,EACC,oBAAIvD,MAAO,CAAEsT,cAAe,OAAQI,YAAa,MAAOzR,UAAW,OAAnE,SACGsB,EAAYsH,KAAI,SAACjE,GAAD,OACf,+BACE,cAAC,IAAD,CAASxD,MAAM,QAAQsF,KAAM,GAAI1I,MAAO,CAAEiC,UAAW,UACrD,sBACEjC,MAAO,CACLoD,MAAO,UACPnB,UAAW,OACXmG,cAAe,UAEjB6D,cAAY,iBANd,SAQGrF,EAAKhH,SAVDgH,EAAKhH,WAehB,QAGN,eAAC+C,EAAA,EAAKwQ,MAAN,WACE,cAACxQ,EAAA,EAAKqG,MAAN,oBACA,cAACf,EAAA,EAAD,CAAOC,IAAKwJ,EAAUiH,WAAS,OAGjC,eAAChW,EAAA,EAAKwQ,MAAN,WACE,cAAC1K,EAAA,EAAD,CAAQE,QAxJhB,WACE,IAAM0E,EAAY,CAChBjI,GAAIwD,EACJvD,KAAMzF,EACNiG,YAAamI,EACb3H,SAAUqL,EACVvL,KAAMhG,EAAMoS,MAGR9L,EAAU,IAAIC,SAEpBnD,EAAYoD,SAAQ,SAACC,GACnBH,EAAQI,OAAO,OAAQD,MAGzBH,EAAQI,OAAO,YAAaC,KAAKC,UAAUsG,IAE3CrQ,QAAQC,IAAI,iBAAkBoQ,GAC9B,IACEzR,MAAK,wEAE8DiB,4DACjE,CACEC,OAAQ,OACRf,KAAM0K,IAERpC,MAAK,SAACxI,GACN,IAAKA,EAASsf,GACZ,MAAMC,MAAM,0BAUd,OAPAd,EAAe,qBAEfnT,YAAW,WACT8L,IACAqH,EAAe,MACd,KAEIze,KAET,MAAOwf,GACPre,QAAQC,IAAI,mBAAoBoe,KA+G5B,kBACA,cAAC5S,EAAA,EAAD,CAAQE,QAASsK,EAAajT,MAAO,CAAEqD,WAAY,OAAnD,mBAGA,cAACV,EAAA,EAAKqG,MAAN,UAAaqR,e,2BC7IRiB,GAnFH,SAACnb,GAA+B,IAAD,EACbhE,IAAMiN,UAAkB,GADX,mBAClCkP,EADkC,KAC1BC,EAD0B,KAOzC,SAASgD,IACPhD,GAAU,GAGZ,OACE,eAAC,aAAD,CACED,OAAQA,EACRkD,cAAe,SAACvO,GAAD,OAXnB,SAA2BA,GACzBsL,EAAUtL,EAAMqL,QAUYmD,CAAkBxO,IAC5CyO,WAAYvb,EAAMub,WAClBC,iBAAkBxb,EAAMwb,iBAJ1B,UAME,eAAC,IAAD,CACExY,GAAG,IACHnB,UAAU,YACV2G,QAAS,WACP4S,KAJJ,UAOE,cAAC,KAAD,CAAQvb,MAAO,CAAE8Y,YAAa,MAAO1Q,cAAe,YAPtD,UAUA,eAAC,IAAD,CACEjF,GAAG,YACHnB,UAAU,YACV2G,QAAS,WACP4S,KAJJ,UAOE,cAAC,KAAD,CAAYvb,MAAO,CAAE8Y,YAAa,SAPpC,cAUA,eAAC,IAAD,CACE3V,GAAG,UACHnB,UAAU,YACV2G,QAAS,WACP4S,KAJJ,UAOE,cAAC,KAAD,CAAevb,MAAO,CAAE8Y,YAAa,SAPvC,kBAUA,eAAC,IAAD,CACE3V,GAAG,UACHnB,UAAU,YACV2G,QAAS,WACP4S,KAJJ,UAOE,cAAC,KAAD,CAAUvb,MAAO,CAAE8Y,YAAa,SAPlC,YAUA,eAAC,IAAD,CACE3V,GAAG,OACHnB,UAAU,YACV2G,QAAS,WACP4S,KAJJ,UAOE,cAAC,IAAD,CAAOvb,MAAO,CAAE8Y,YAAa,SAP/B,SAUA,uBACA,eAAC,IAAD,CACE3V,GAAG,cACHnB,UAAU,YACV2G,QAAS,WACP4S,KAJJ,UAOE,cAAC,IAAD,CAAiBvb,MAAO,CAAE8Y,YAAa,SAPzC,qBClEA8C,GAAa,kBACjB,gCACE,gDACA,4CACa,cAAC,IAAD,CAAMzY,GAAItG,kBAAV,sBADb,WAMEgf,GAAkB,CACtB3Y,aAAc,OACdd,gBAAiB,qBACjBiS,QAAS,cACTyH,WAAY,SACZ1Y,MAAO,sBACP2Y,UAAW,2EACXpU,QAAS,MACTqU,aAAc,MACdpU,OAAQ,wBACRtF,SAAU,OACVD,WAAY,qBACZ4Z,IAAK,MACLC,UAAW,mBACXxE,SAAU,QACVrU,WAAY,OAGd8Y,OAAOC,UAAYD,OAAOC,WAAa,GACvC,IAAMA,GAAYD,OAAOC,UAwMVC,OAtMf,WAA6B,IAAD,EACwBjT,mBAAiB,IADzC,mBACnBkT,EADmB,KACAC,EADA,OAEwBnT,mBAAiB,IAFzC,mBAEnBoT,EAFmB,KAEAC,EAFA,OAGsBrT,mBAAiB,IAHvC,mBAGnBsT,EAHmB,KAGDC,EAHC,OAIcvT,mBAAiB,IAJ/B,mBAInBwT,EAJmB,KAILC,EAJK,KAM1Brf,qBAAU,WACR4e,GAAUvX,MAAK,WACb7H,QAAQC,IAAI,QAAZ,UAAwBJ,yCACxB,IAAMigB,EAAa,CACjBC,MAAM,GAAD,OAAKlgB,wCACVmgB,8BAA8B,EAC9BC,cAAe,CACbC,UAAW,CACTC,SAAS,EACTC,cAAe,6DACfC,iBAAkB,QAClBC,iBAAkB,YAClBC,WAAY,CACVC,KAAM,CACJ,CACEC,IAAK,SACL/I,MAAO,oBAMjBgJ,oBAAqB,CACnB9T,MAAO,sBACPnG,QAAS,4BAIb2Y,GAAUvX,MAAK,WACbuX,GAAUuB,qBAAuB,CAAEC,MAAO,mBAC1CxB,GAAUyB,oBAAsB,sCAChCzB,GAAU0B,4BACR,6CACF1B,GAAU2B,KAAKjB,WASlB,IAEH,IAAMkB,EACJ,cAAC,GAAD,CACEhF,aAAc,SAACnd,GACT,YAAaA,IACf4gB,EAAqB5gB,EAASoiB,WAAWC,OACzCvB,EAAoB9gB,EAASoiB,WAAWre,MACxCid,EAAgBhhB,EAASoiB,WAAWvM,UACpC6K,EAAqB1gB,EAASsiB,aAMhCC,EAAgB,WACpB7B,EAAqB,KAIvB,OADAvf,QAAQC,IAAI,aAAcJ,iBAAwBA,cAEhD,eAAC,WAAD,WACGyf,IACwB,sBAAtBE,GACuB,yBAAtBA,GACsB,yBAAtBA,GACsB,wBAAtBA,GACsB,6BAAtBA,IACA,eAAC7e,EAAD,WACE,cAAC,IAAD,CAAe0gB,SAAUxhB,iBAAzB,SACE,sBAAKmF,UAAU,MAAM4G,GAAG,kBAAkB5I,MAAO,CAAEoY,OAAQ,QAA3D,UACE,cAAC,GAAD,CAAKuD,iBAAkB,kBAAmBD,WAAY,cACtD,qBAAK9S,GAAG,YAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE0V,OAAK,EACL3a,KAAK,IACL4a,OAAQ,kBAAM,cAAC,EAAD,CAAW/d,SAAUkc,OAErC,cAAC,IAAD,CACE4B,OAAK,EACL3a,KAAK,UACL4a,OAAQ,SAACpe,GAAD,OAAW,cAAC,EAAD,eAAYA,OAEjC,cAAC,IAAD,CACEme,OAAK,EACL3a,KAAK,UACL4a,OAAQ,SAACpe,GAAD,OACN,cAAC,GAAD,CACEoS,KAAMiK,EACN3T,oBAAqB1I,OAI3B,cAAC,IAAD,CACEme,OAAK,EACL3a,KAAK,YACL4a,OAAQ,SAACpe,GAAD,OACN,cAAC,GAAD,CACE0I,oBAAqB1I,EACrBK,SAAUkc,OAIhB,cAAC,IAAD,CAAO4B,OAAK,EAAC3a,KAAK,OAAO4a,OAAQ,kBAAM,cAAC,GAAD,OACvC,cAAC,IAAD,CACED,OAAK,EACL3a,KAAK,UACL4a,OAAQ,SAACpe,GAAD,OAAW,cAAC,GAAD,eAAiBA,OAEtC,cAAC,IAAD,CACEme,OAAK,EACL3a,KAAK,cACL4a,OAAQ,kBAAM,cAAC,GAAD,CAAehM,KAAMiK,OAErC,cAAC,IAAD,CAAOgC,UAAW5C,eAKzBc,EACC,sBACE1c,MAAO,CACL0X,SAAU,QACV+G,OAAQ,IACRzS,MAAO,MACP8M,YAAa,MACbV,OAAQ,QANZ,UASE,cAAC,gBAAD,CACEmG,OAAQ,SAACG,GAAD,OACN,yBAAQ/V,QAAS+V,EAAY/V,QAAS3I,MAAO6b,GAA7C,UACE,qBACE7b,MAAO,CACL8Y,YAAa,OACbhD,WAAY,qBACZnO,QAAS,OACTqU,aAAc,OALlB,SAQE,cAAC,KAAD,CAAUtT,KAAM,OAElB,sBAAM1I,MAAO,CAAE2H,QAAS,qBAAsBnF,WAAY,KAA1D,wBAKJgX,SAAQ,UAAK3c,4EACb4c,WAAW,SACXkF,gBAAiBP,IAEnB,sBAAKpc,UAAU,aAAahC,MAAO,CAAEqC,WAAY,YAAjD,UACE,uBAAMrC,MAAO,CAAEqD,WAAY,QAA3B,6BACmBqZ,KAEnB,cAACzU,EAAA,EAAD,CACEC,IAAK0U,EACL5c,MAAO,CAAEoY,OAAQ,OAAQ/U,WAAY,OACrCub,eAAa,UAIjB,QAGTtC,EAAoB,KAAO0B,EAE3B1B,GAEuB,sBAAtBE,GACsB,yBAAtBA,GACsB,yBAAtBA,GACsB,wBAAtBA,GAEFA,EAAkBjf,OAAS,EACzB,qEACqC,IACnC,mBAAGyG,KAAK,0BAAR,+BACA,cAAC,gBAAD,CACEwV,SAAQ,UAAK3c,4EACb4c,WAAW,SACXkF,gBAAiBP,OAGnB,SCrOKS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1a,MAAK,YAAkD,IAA/C2a,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,GAAD,MAEFzb,SAAS2S,eAAe,SAM1BqI,M","file":"static/js/main.4d13f253.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    OneSignal: any;\n  }\n}\n\nexport enum AtTheBoothBakery_Type {\n  Delivered = 'Delivered',\n  Ordered = 'ordered',\n  Today = 'Today',\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n  PorchDropoff: boolean;\n  Employee: number;\n  EmployeeName: string | undefined;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron, Form } from 'react-bootstrap';\nimport { Order, useEmeraldContext, Orders } from '../Interfaces/EmeraldTypes';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [dashboardOrders, setDashboardOrders] = React.useState<Orders>(orders);\n\n  useEffect(() => {\n    switch (props.userName) {\n      case 'Ariel Castillo':\n        setDashboardOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n        );\n        break;\n      case 'Paul Castillo':\n        setDashboardOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n        );\n        break;\n      case 'Jordan Hebert':\n        setDashboardOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n        );\n        break;\n      default:\n        console.log('default');\n    }\n  }, []);\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n    if (e.target.value === 'Ariel') {\n      setDashboardOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel'));\n    } else if (e.target.value === 'Jordan') {\n      setDashboardOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan'));\n    } else {\n      setDashboardOrders(orders);\n    }\n  }\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const deliveredOrders = dashboardOrders.filter((order: Order) => {\n    return order.OrderStatus === 'Delivered';\n  });\n\n  const sumCost = deliveredOrders.reduce(\n    (cost: number, entry: any) => cost + (parseFloat(entry.Price) || 0),\n    0\n  );\n\n  const orderedButNotDeliveredandNotCancelled = dashboardOrders.filter((order: Order) => {\n    return order.OrderStatus === 'Ordered';\n  });\n\n  console.log('Price of all Delivered is: ', formatter.format(sumCost));\n\n  const userNameString = props.userName.split(' ')[0];\n  return (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              style={{ marginBottom: '10px' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{dashboardOrders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    //a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n      PorchDropoff: props.order.PorchDropoff,\n      Employee: props.order.Employee,\n      EmployeeName: props.order.EmployeeName,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n\n  // console.log('prepaid: ', props.order);\n  return (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        {/* <Col\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '210px',\n          }}\n        >\n          <Card.Img\n            as={Image}\n            src={`https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/At%20The%20Booth%20Logo%20Transparent%20Image%20only.png`}\n            // fluid={true}\n            style={{ width: '50%', height: '50%' }}\n            // thumbnail\n          />\n        </Col> */}\n\n        <Col>\n          <Card.Title>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Jumbotron,\n  Dropdown,\n  DropdownButton,\n} from 'react-bootstrap';\nimport moment from 'moment';\n// import FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext, AtTheBoothBakery_Type } from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [displayOrders, setDisplayOrders] = useState(orders);\n  const [filterType, setFilterType] = useState<string>('Delivered');\n\n  const handleSelect = (e: any) => {\n    setFilterType(e);\n\n    let atbOrders = [];\n    // console.log('current order type:', e);\n    switch (e) {\n      case AtTheBoothBakery_Type.Delivered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Delivered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Ordered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Ordered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Today:\n        // eslint-disable-next-line no-case-declarations\n        const today = new Date();\n\n        atbOrders = orders\n          .filter((day) => {\n            if (today) {\n              if (\n                moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                moment(today).format('MM-DD-YYYY')\n              ) {\n                return day;\n              }\n            }\n          })\n          .filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          );\n        break;\n      default:\n        atbOrders = orders;\n    }\n\n    setDisplayOrders(atbOrders);\n  };\n\n  const onSearchKey = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const regExOrder = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return (\n        (order.Name && order.Name.match(regExOrder)) ||\n        (order.Address && order.Address.match(regExOrder))\n      );\n    });\n\n    setDisplayOrders(searchedOrders);\n  };\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown style={{ marginBottom: '5px' }}>\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            style={{ marginTop: '5px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Jumbotron, Form, Button, Accordion, Card } from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n  Orders,\n} from '../Interfaces/EmeraldTypes';\nimport { JsxElement } from 'typescript';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [nameOrders, setNameOrders] = React.useState<Orders>([]);\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [porchDropoff, setPorchDropoff] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  const [\n    deliveryDateMonthEndValidated,\n    setDeliveryDateMonthEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateDayEndValidated,\n    setDeliveryDateDayEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateYearEndValidated,\n    setdeliveryDateYearEndValidated,\n  ] = React.useState<boolean>(false);\n  const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n\n      console.log('order editing', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        setIsSubmitDisabled(false);\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n        setPorchDropoff(filteredEditOrder[0].PorchDropoff);\n        setEmployee(filteredEditOrder[0].EmployeeName);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        console.log('start time', deliveryDateStart.format('HH:mm A'));\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm A'));\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm A'));\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      setEmployee('Ariel');\n    } else {\n      setEmployee('Jordan');\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    // a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  const renderNameSuggestions = (): JSX.Element[] =>\n    nameOrders.map((suggestion) => {\n      return (\n        <li key={suggestion.Id} onClick={(e) => handleNameSelect(e, suggestion)}>\n          🍪<strong>{suggestion.Name}</strong> - <small>{suggestion.Address}</small>\n        </li>\n      );\n    });\n\n  const handleNameSelect = (e: React.MouseEvent, order: Order): void => {\n    e.preventDefault();\n    nameSet(order.Name);\n    addressSet(order.Address);\n    citySet(order.City);\n    stateSet(order.State);\n    zipCodeSet(order.ZipCode);\n\n    setValue(`${order.Address} ${order.City},${order.State} ${order.ZipCode}`);\n    setNameOrders([]);\n  };\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n\n    const regExName = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return order.Name && order.Name.match(regExName);\n    });\n\n    setNameOrders(searchedOrders);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    areaSet(e.target.value);\n  }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n\n    beginTimeSet(e.target.value);\n    // console.log(\n    //   'onChange begin time',\n    //   e.target.value,\n    //   moment(e.target.value, 'HH:mm').format('hh:mm a').toString()\n    // );\n    const beginTime: string = moment(e.target.value, 'HH:mm')\n      .format('hh:mm a')\n      .toString();\n    if (beginTime !== 'Select a Time') {\n      setFilteredBeginTime(beginTime);\n    } else {\n      setFilteredBeginTime('');\n    }\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYearEnd !== undefined) {\n      daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryDateMonthEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDateDayEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    endTimeSet(e.target.value);\n    if (e.target.value !== 'Select Time') {\n      setEndTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonthEnd !== undefined) {\n      daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setdeliveryDateYearEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      deliveryDateMonthEndValidated &&\n      deliveryDateDayEndValidated &&\n      deliveryDateYearEndValidated &&\n      endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name.trim(),\n      Area: area === undefined ? ' ' : area.trim(),\n      Address: address === undefined ? ' ' : address.trim(),\n      City: city === undefined ? ' ' : city.trim(),\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode.trim(),\n      OrderType: orderType === undefined ? ' ' : orderType.trim(),\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus.trim(),\n      Quantity: quantity,\n      Price: price === undefined ? '0' : price,\n      Description: description === undefined ? ' ' : description.trim(),\n      DeliveryDate: `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`,\n      DeliveryDateEnd: `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`,\n      OrderDate: new Date(),\n      PrePaid: prepaid,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource.trim(),\n      User: props.user === undefined ? ' ' : props.user.trim(),\n      CreatedBy: props.user === undefined ? ' ' : props.user.trim(),\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl.trim(),\n      PorchDropoff: porchDropoff,\n      Employee: 1,\n      EmployeeName: employee,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n    setValue('');\n    setPorchDropoff(false);\n    prepaidSet(false);\n    setEmployee('Select Employee');\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {name && name.length > 0 && (\n            <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n          )}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Area</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of Area'\n            onChange={onChangeArea}\n            value={area}\n          />\n        </Form.Group>\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span className='input-group-addon'>$</span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check\n            type='checkbox'\n            label='PrePaid'\n            name='prepaid'\n            checked={prepaid}\n            onChange={() => prepaidSet(!prepaid)}\n          />\n          <Form.Check\n            type='checkbox'\n            label='Porch Dropoff?'\n            checked={porchDropoff}\n            onChange={() => setPorchDropoff(!porchDropoff)}\n          />\n        </Form.Group>\n        <Form.Label>Delivery Begin Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Begin Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <hr></hr>\n        <Form.Label>Delivery End Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonthEnd}\n            onChange={onChangeDeliveryMonthEnd}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDayEnd}\n            onChange={onChangeDeliveryDayEnd}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLengthEnd;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYearEnd}\n            onChange={onChangeDeliveryYearEnd}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>End Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='endTimeCtl'\n            value={endTime}\n            onChange={onChangeEndTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {filteredBeginTime.length > 0\n              ? times\n                  .filter((time) => time > filteredBeginTime)\n                  .map((time, index) => {\n                    const keyIndex = index;\n                    return (\n                      <option key={`time-${keyIndex}`} value={time}>\n                        {time}\n                      </option>\n                    );\n                  })\n              : null}\n\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Friend-Relatives</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Employee</Form.Label>\n          <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n            <option>Select Employee</option>\n            <option>Ariel</option>\n            <option>Jordan</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order, Orders } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\n\ninterface Props {\n  routeComponentProps: RouteComponentProps;\n  userName: string;\n}\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders, fetchEmeraldOrders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [calenderOrders, setCalenderOrders] = React.useState<Orders>(orders);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n\n  useEffect(() => {\n    fetchEmeraldOrders();\n\n    switch (props.userName) {\n      case 'Ariel Castillo':\n        setCalenderOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel'));\n        break;\n      case 'Paul Castillo':\n        setCalenderOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel'));\n        break;\n      case 'Jordan Hebert':\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n        );\n        break;\n      default:\n        console.log('default');\n    }\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        calenderOrders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n          {props.userName === 'Ariel Castillo' || props.userName === 'Paul Castillo'\n            ? `Ariel's`\n            : `Jordan's`}{' '}\n          Calender\n        </h2>\n      </Jumbotron>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n        calendarType='US'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders\n                    .filter((day) => {\n                      if (selectedDay) {\n                        if (\n                          moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                          moment(selectedDay).format('MM-DD-YYYY')\n                        ) {\n                          return day;\n                        }\n                      }\n                    })\n                    .filter(\n                      (statusOrder) =>\n                        statusOrder.OrderStatus !== 'Delivered' &&\n                        statusOrder.OrderStatus !== 'Cancelled'\n                    ).length\n                }\n              </Badge>\n            </h5>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? calenderOrders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : calenderOrders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n  console.log(orderImageUrl);\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      console.log('appid', `${process.env.REACT_APP_ONESIGNAL}`);\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n      //Automatically subscribe to the new_app_version tag\n      // OneSignal.sendTag('new_app_version', 'new_app_version', (tagsSent) => {\n      //   // Callback called when tag has finished sending\n      //   console.log('new_app_version TAG SENT', tagsSent);\n      // })\n      // );\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  console.log('public url', process.env.PUBLIC_URL, process.env.NODE_ENV);\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => (\n                        <CalendarOrders\n                          routeComponentProps={props}\n                          userName={loggedInUserName}\n                        />\n                      )}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}