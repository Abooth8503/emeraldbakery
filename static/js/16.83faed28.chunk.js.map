{"version":3,"sources":["GoogleSignInComponent.tsx","App.tsx","Interfaces/EmeraldTypes.tsx"],"names":["GoogleSignInComponent","loginSuccess","useState","loginFailed","setLoginFailed","className","style","marginTop","fontFamily","fontSize","color","WebkitTextStroke","clientId","process","buttonText","onSuccess","onFailure","response","isSignedIn","cookiePolicy","responseType","Dashboard","loadable","Orders","CreateOrder","CalendarOrders","GMap","OrderDetail","OrderTypeForm","Nav","FourOhFour","to","logoutBtnStyles","marginBottom","backgroundColor","display","alignItems","boxShadow","padding","borderRadius","border","top","transform","position","marginLeft","window","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","useEffect","push","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","label","welcomeNotification","title","message","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","name","imageUrl","tokenId","logoutSuccess","basename","id","height","outerContainerId","pageWrapId","exact","path","render","userName","props","user","routeComponentProps","component","bottom","width","marginRight","renderProps","onClick","background","size","fontWeight","onLogoutSuccess","Image","src","roundedCircle","length","href","AtTheBoothBakery_Type","emeraldGet","request","a","fetch","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","useMediaQuery","screenSize","setScreenSize","useLayoutEffect","updateScreenSize","innerWidth","innerHeight","addEventListener","removeEventListener","Object","freeze"],"mappings":"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","file":"static/js/16.83faed28.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\n// import video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      {/* <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' /> */}\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}// eslint-disable-next-line\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport loadable from '@loadable/component'\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\n// import Dashboard from './Common/Dashboard';\n// import Orders from './Orders';\n// import CreateOrder from './Forms/CreateOrder';\n// import CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\n// import GMap from './Gmap';\n// import OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\n// import OrderTypeForm from './Admin/OrderTypeForm';\n// import Nav from './Nav';\n\nconst Dashboard = loadable(() => import('./Common/Dashboard'))\nconst Orders = loadable(() => import('./Orders'))\nconst CreateOrder = loadable(() => import('./Forms/CreateOrder'))\nconst CalendarOrders = loadable(() => import('./CalendarOrders'))\nconst GMap = loadable(() => import('./Gmap'))\nconst OrderDetail = loadable(() => import('./OrderDetail'))\nconst OrderTypeForm = loadable(() => import('./Admin/OrderTypeForm'))\nconst Nav = loadable(() => import('./Nav'))\n\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => (\n                        <CalendarOrders\n                          routeComponentProps={props}\n                          userName={loggedInUserName}\n                        />\n                      )}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect, useLayoutEffect, useState } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line\n    OneSignal: any;\n  }\n}\n\nexport enum AtTheBoothBakery_Type {\n  Delivered = 'Delivered',\n  Ordered = 'ordered',\n  Today = 'Today',\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n  PorchDropoff: boolean;\n  Employee: number;\n  EmployeeName: string | undefined;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  // eslint-disable-next-line\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n// eslint-disable-next-line\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\n\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\n\nexport function isValidDate(day: number, month: number, year: number): boolean {\n  return day <= calculateDays(month.toString(), year.toString());\n}\n\nexport function useMediaQuery(): number[] {\n  const [screenSize, setScreenSize] = useState([0, 0]);\n\n  useLayoutEffect(() => {\n    function updateScreenSize(): void {\n      setScreenSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateScreenSize);\n    updateScreenSize();\n    return () => window.removeEventListener('resize', updateScreenSize);\n  }, []);\n\n  return screenSize;\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n"],"sourceRoot":""}