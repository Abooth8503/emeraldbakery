{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Common/EmeraldDropzone.tsx","Admin/OrderTypeForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","Object","freeze","motivationalQuotes","quote","name","Dashboard","props","randNumber","Math","floor","random","userNameString","userName","split","Container","fluid","Row","className","style","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","to","OrderCard","OrderImageUrl","mapAddress","order","Address","City","State","ImageUrl","undefined","Card","marginBottom","padding","border","borderWidth","borderStyle","onClick","id","Id","routeComponentProps","history","push","maxWidth","Image","src","thumbnail","Title","Name","verticalAlign","DeliveryDate","Text","Quantity","Description","href","address","sectionStyle","Orders","Badge","variant","marginLeft","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","map","encodedAddress","encodeURI","addressToUse","years","Array","from","val","index","times","CreateOrder","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatus","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","daysLengthEnd","daysLengthEndSet","endTime","endTimeSet","nameValidated","setNameValidated","areaValidated","setAreaValidated","addressValidated","setAddressValidated","cityValidated","setCityValidated","stateValidated","setStateValidated","zipCodeValidated","setZipCodeValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","deliveryDateMonthEndValidated","setDeliveryDateMonthEndValidated","deliveryDateDayEndValidated","setDeliveryDateDayEndValidated","deliveryDateYearEndValidated","setdeliveryDateYearEndValidated","endTimeValidated","setEndTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","filteredBeginTime","setFilteredBeginTime","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","status","setValue","clearSuggestions","location","filteredEditOrder","filter","Area","ZipCode","OrderType","OrderStatus","Price","PrePaid","deliveryDateStart","moment","format","toUpperCase","deliveryDateEnd","DeliveryDateEnd","TrafficSource","ref","useOnclickOutside","handleSelect","getGeocode","then","results","getZipCode","zip","isFormValidated","clearFields","sort","b","Form","Group","Label","Control","type","placeholder","onChange","e","preventDefault","target","disabled","width","listStyleType","suggestion","place_id","structured_formatting","main_text","secondary_text","Accordion","Toggle","as","Header","eventKey","Collapse","Body","display","Button","fontWeight","min","step","controlId","Check","label","defaultChecked","newDate","numberOfDays","everyYear","keyIndex","toString","rows","orderContent","OrderDate","User","user","CreatedBy","payload","FormData","append","JSON","stringify","myInit","resp","setTimeout","alert","CalendarOrders","selectedDay","daySet","tileClassName","view","find","x","onClickDay","upcomingOrder","labels","labelIndex","GMap","googleMapRef","useRef","useState","setOrdersMap","googleMap","googleMapScript","document","getElementById","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","Marker","animation","Animation","DROP","position","markerOrders","forEach","mark","getLatLng","height","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","fontStyle","size","open","alt","ListGroup","Item","marginRight","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","SpinSpinner","styled","FaSpinner","EmeraldDropzone","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","getRootProps","getInputProps","isDragActive","data-testid","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","imageUrl","setImageUrl","saveMessage","setSaveMessage","uploadFiles","setUploadFiles","action","selectedOrderType","ot","orderTypeClicked","files","imageUrlAzure","paddingLeft","file","color","ok","Error","error","FourOhFour","logoutBtnStyles","alignItems","boxShadow","borderRadius","top","transform","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","path","render","component","bottom","renderProps","background","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"2VAkDO,SAAeA,EAAtB,kC,4CAAO,WAA6BC,GAA7B,iBAAAC,EAAA,sEACkBC,MAAMF,GADxB,cACCG,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,sBAOP,IAAMC,EAAY,WAAiE,IAAhEC,EAA+D,uDAA5C,GAAIC,EAAwC,uDAAP,GAAO,EACpDC,WAAwBF,GAD4B,mBACzEG,EADyE,KACjEC,EADiE,OAE7CF,WAA4BD,GAFiB,mBAEzEI,EAFyE,KAE7DC,EAF6D,OAIhDJ,WAAuB,IAJyB,mBAIzEK,EAJyE,KAI/DC,EAJ+D,cAYjEC,IAZiE,2EAYhF,8BAAAf,EAAA,sEAEUgB,EAAY,IAAIC,QAAJ,4EACqDC,4DACrE,CACEC,OAAQ,QALhB,SASuBrB,EAAoBkB,GAT3C,OASUI,EATV,OAWIV,EAAUU,GAXd,gDAaIC,QAAQC,IAAR,MAbJ,0DAZgF,+BA6BjEC,IA7BiE,2EA6BhF,8BAAAvB,EAAA,sEAEUwB,EAAgB,IAAIP,QAAJ,wEAC6CC,4DACjE,CACEC,OAAQ,QALhB,SASuBrB,EAAoB0B,GAT3C,OASUJ,EATV,OAWIR,EAAaQ,GAXjB,gDAaIC,QAAQC,IAAR,MAbJ,0DA7BgF,sBA8ChF,SAASG,IACP,OAAO,IAAIC,SAAQ,SAACC,GACdlB,EAAOmB,OAAS,GAClBD,EAAQlB,MAKd,OAjDAoB,qBAAU,WAGRd,IACAQ,MACC,IA4CI,CACLd,SACAE,aACAE,WACAC,cACAJ,YACAe,qBAIEK,EAAiBtB,gBAAyD,MAEnEuB,EAAoB,kBAAMvB,aAAiBsB,IAEjD,SAASE,EAAT,GAIU,IAHfC,EAGc,EAHdA,SAIA,OACE,cAACH,EAAeI,SAAhB,CAAyBC,MAAO9B,EAAU,IAA1C,SAAgD4B,IAM7C,SAASG,EACdC,EACAC,EACAC,GAEA,IAcMC,EAAQ,IAAIC,KAAKJ,GACjBK,EAAMF,EAAMG,UACZC,EAAaJ,EAAMK,WACnBC,EAAON,EAAMO,cACbC,EAAOR,EAAMS,qBACnB,OAAIX,EAAgB,GAAN,OAAUM,EAAV,YAAwBF,EAAxB,YAA+BI,EAA/B,YAAuCE,GACjDT,EAAmB,GAAN,OAAUK,EAAa,EAAvB,YAA4BF,EAA5B,YAAmCI,GAE9C,GAAN,OAAUJ,EAAV,YAtBmB,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAU0BE,GAA5B,YAA2CE,GA4BtC,SAASI,EAAcC,EAAeC,GAC3C,IAAIC,EAAkB,GACtB,MAAc,KAAVF,GAAiC,KAAjBC,IAIR,OAAVD,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,EAGAE,EAAkBC,EAAUC,UACT,OAAVJ,IAAuD,IAxB7D,SAAoBC,GAMzB,OALuBA,EAAe,IAAM,GACnBA,EAAe,MAAQ,GAC3BA,EAAe,MAAQ,EAqBfI,CAAWC,OAAOL,IAC7CC,EAAkBC,EAAUI,SACT,OAAVP,EACTE,EAAkBC,EAAUK,YACT,OAAVR,GAA4B,OAAVA,GAA4B,OAAVA,GAA4B,OAAVA,IAC/DE,EAAkBC,EAAUM,SAlBrBP,EA0BX,IAAMC,EAAY,CAAEC,UAAW,GAAIK,OAAQ,GAAID,YAAa,GAAID,SAAU,IAC1EG,OAAOC,OAAOR,G,oCCzNRS,EAAqB,CACzB,CACEC,MAAO,4CACPC,KAAM,eAER,CACED,MAAO,4DACPC,KAAM,sBAER,CACED,MACE,kFACFC,KAAM,iBAER,CACED,MAAO,uEACPC,KAAM,eAER,CACED,MAAO,kDACPC,KAAM,cAER,CACED,MACE,sPACFC,KAAM,kBAER,CACED,MACE,gLACFC,KAAM,gBAER,CAAED,MAAO,sDAAkDC,KAAM,aACjE,CAAED,MAAO,mDAA+CC,KAAM,eAC9D,CAAED,MAAO,uDAAwDC,KAAM,eACvE,CAAED,MAAO,6DAAyDC,KAAM,aACxE,CAAED,MAAO,2DAAuDC,KAAM,WACtE,CACED,MAAO,2DACPC,KAAM,gBA0DKC,MAlDf,SAAmBC,GAA4B,IACrC1D,EAAWsB,IAAXtB,OAEF2D,EAAaC,KAAKC,MAAMD,KAAKE,SAAWR,EAAmBnC,QACjE,GAAInB,EAAOmB,OAAS,EAClB,OAAO,6CAGT,IAAM4C,EAAiBL,EAAMM,SAASC,MAAM,KAAK,GACjD,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,+BAA+BC,MAAO,CAAEC,UAAW,OAAlE,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWH,MAAO,CAAEI,gBAAiB,SAArC,SACE,qBACEL,UAAU,cACVC,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,aAFlD,qBAIWb,EAJX,aASN,cAACK,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACE,cAACG,EAAA,EAAD,UACE,yBAAQH,UAAU,QAAlB,UACE,4BACEC,MAAO,CAAEM,SAAU,SADrB,oBAEMtB,EAAmBK,GAAYJ,MAFrC,OAGA,4BACEe,MAAO,CACLO,UAAW,QACXD,SAAU,UAHd,SAME,2CAAYtB,EAAmBK,GAAYH,KAA3C,gBAKR,cAACY,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,CAAKF,MAAO,CAAEM,SAAU,UAAxB,UACG,IADH,SAEQ,cAAC,IAAD,CAAME,GAAG,UAAT,oBAFR,KAE2C9E,EAAOmB,gB,0BC3B3C4D,MAxDf,SAAmBrB,GAKjB,IAAIsB,EAAgB,GAEdC,EAAU,UAAMvB,EAAMwB,MAAMC,QAAlB,YAA6BzB,EAAMwB,MAAME,KAAzC,YAAiD1B,EAAMwB,MAAMG,OAW7E,OAVAzE,QAAQC,IAAI,QAAS6C,EAAMwB,OACE,SAAzBxB,EAAMwB,MAAMI,UACd1E,QAAQC,IAAI,cACZmE,EACE,uGAE2BO,IAAzB7B,EAAMwB,MAAMI,WACdN,EAAgBtB,EAAMwB,MAAMI,UAI9B,cAACE,EAAA,EAAD,CAEElB,MAAO,CACLmB,aAAc,MACdC,QAAS,MACTC,OAAQ,QACRC,YAAa,MACbC,YAAa,QACblB,WAAY,YAEdmB,QAAS,kBA5BQC,EA4BUrC,EAAMwB,MAAMc,QA3BzCtC,EAAMuC,oBAAoBC,QAAQC,KAAlC,UAAkDJ,GADpD,IAAqBA,GAkBnB,SAYE,eAAC3B,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKF,MAAO,CAAE8B,SAAU,SAAxB,SACE,cAACC,EAAA,EAAD,CAAOC,IAAKtB,EAAeuB,WAAS,MAEtC,eAAC/B,EAAA,EAAD,WACE,eAACgB,EAAA,EAAKgB,MAAN,WACG9C,EAAMwB,MAAMuB,KAAM,IACnB,uBAAMnC,MAAO,CAAEM,SAAU,QAAS8B,cAAe,YAAjD,wBACO/E,EAAW+B,EAAMwB,MAAMyB,cAAc,GAAO,IADnD,UAIF,eAACnB,EAAA,EAAKoB,KAAN,wBACalD,EAAMwB,MAAM2B,SACvB,uBAFF,gBAGgBnD,EAAMwB,MAAM4B,eAE5B,cAACtB,EAAA,EAAKoB,KAAN,CAAWtC,MAAO,CAAEM,SAAU,UAA9B,SACE,mBAAGmC,KAAMrD,EAAMsD,QAAf,SAAyB/B,aA5B1BvB,EAAMwB,MAAMc,KCvBjBiB,EAAe,CACnB1C,UAAW,MACXI,WAAY,YAuDCuC,MAlDf,SAAgBxD,GAA4B,IAClC1D,EAAWsB,IAAXtB,OAER,OAAsB,IAAlBA,EAAOmB,OACF,oDAIP,eAAC+C,EAAA,EAAD,CAAWC,OAAK,EAACG,MAAO2C,EAAxB,UACE,cAAC7C,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAKH,UAAU,cAAf,SACE,cAACI,EAAA,EAAD,UACE,qBAAIH,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,aAApD,mBAEE,cAACuC,EAAA,EAAD,CAAOC,QAAQ,UAAU9C,MAAO,CAAE+C,WAAY,OAA9C,SACGrH,EAAOmB,kBAMlB,cAAC,IAAD,CACEmG,SAAS,MACTC,kBAAkB,KAClBC,SAAU,IACVC,eAAe,WACfC,eAAe,WACfC,gBAAgB,WAChBC,yBAAyB,EACzBC,OAAO,qCACPvD,MAAO,CAAEO,UAAW,OAAQF,WAAY,oBAT1C,SAWG3E,EAAO8H,KAAI,SAAC5C,GACX,IAAMD,EAAU,UAAMC,EAAMC,QAAZ,YAAuBD,EAAME,KAA7B,YAAqCF,EAAMG,OACrD0C,EAAiBC,UAAU/C,GAC3BgD,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEE9B,oBAAqBvC,EACrBwB,MAAOA,EACP8B,QAASiB,GAHJ/C,EAAMc,a,4DClCnB3D,G,OAAO,IAAIL,MAAOM,eAClB4F,EAAQC,MAAMC,KAAK,IAAID,MAAM,IAAI,SAACE,EAAKC,GAAN,OAAgBjG,EAAOiG,KAExDC,EAAQ,CACZ,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAk8BaC,MA/7Bf,SAAqB9E,GAA4B,IAAD,EACtB3D,gBAAmCwF,GADb,mBACvC/B,EADuC,KACjCiF,EADiC,OAEtB1I,gBAAmCwF,GAFb,mBAEvCmD,EAFuC,KAEjCC,EAFiC,OAGhB5I,gBAAmCwF,GAHnB,mBAGvCyB,EAHuC,KAG9B4B,EAH8B,OAItB7I,gBAAmCwF,GAJb,mBAIvCsD,EAJuC,KAIjCC,EAJiC,OAKpB/I,gBAAmCwF,GALf,mBAKvCwD,EALuC,KAKhCC,EALgC,OAMhBjJ,gBAAmCwF,GANnB,mBAMvC0D,EANuC,KAM9BC,EAN8B,OAOZnJ,gBAAmCwF,GAPvB,mBAOvC4D,EAPuC,KAO5BC,EAP4B,OAQRrJ,gBAAmCwF,GAR3B,mBAQvC8D,EARuC,KAQ1BC,EAR0B,OASdvJ,WAAuB,GATT,mBASvCwJ,EATuC,KAS7BC,EAT6B,OAUpBzJ,gBAAmCwF,GAVf,oBAUvCkE,GAVuC,MAUhCC,GAVgC,SAWhB3J,YAAwB,GAXR,qBAWvC4J,GAXuC,MAW9BC,GAX8B,SAYR7J,gBAAmCwF,GAZ3B,qBAYvCsE,GAZuC,MAY1BC,GAZ0B,SAaJ/J,gBAAmCwF,GAb/B,qBAavCwE,GAbuC,MAaxBC,GAbwB,SAcJjK,gBAAmCwF,GAd/B,qBAcvC0E,GAduC,MAcxBC,GAdwB,SAeRnK,gBAAmCwF,GAf3B,qBAevC4E,GAfuC,MAe1BC,GAf0B,SAgBNrK,gBAAmCwF,GAhB7B,qBAgBvC8E,GAhBuC,MAgBzBC,GAhByB,SAiBVvK,WAAuB,IAjBb,qBAiBvCwK,GAjBuC,MAiB3BC,GAjB2B,SAkBZzK,gBAAmCwF,GAlBvB,qBAkBvCkF,GAlBuC,MAkB5BC,GAlB4B,SAmBE3K,gBAC9CwF,GApB4C,qBAmBvCoF,GAnBuC,MAmBrBC,GAnBqB,SAsBF7K,gBAC1CwF,GAvB4C,qBAsBvCsF,GAtBuC,MAsBvBC,GAtBuB,SAyBA/K,gBAC5CwF,GA1B4C,qBAyBvCwF,GAzBuC,MAyBtBC,GAzBsB,SA4BJjL,WAAuB,IA5BnB,qBA4BvCkL,GA5BuC,MA4BxBC,GA5BwB,SA6BhBnL,gBAAmCwF,GA7BnB,qBA6BvC4F,GA7BuC,MA6B9BC,GA7B8B,SA+BJrL,YAAwB,GA/BpB,qBA+BvCsL,GA/BuC,MA+BxBC,GA/BwB,SAgCJvL,YAAwB,GAhCpB,qBAgCvCwL,GAhCuC,MAgCxBC,GAhCwB,SAiCEzL,YAAwB,GAjC1B,qBAiCvC0L,GAjCuC,MAiCrBC,GAjCqB,SAkCJ3L,YAAwB,GAlCpB,qBAkCvC4L,GAlCuC,MAkCxBC,GAlCwB,SAmCF7L,YAAwB,GAnCtB,qBAmCvC8L,GAnCuC,MAmCvBC,GAnCuB,SAoCE/L,YAAwB,GApC1B,qBAoCvCgM,GApCuC,MAoCrBC,GApCqB,SAqCMjM,YAAwB,GArC9B,qBAqCvCkM,GArCuC,MAqCnBC,GArCmB,SAsCUnM,YAAwB,GAtClC,qBAsCvCoM,GAtCuC,MAsCjBC,GAtCiB,SAuCIrM,YAAwB,GAvC5B,qBAuCvCsM,GAvCuC,MAuCpBC,GAvCoB,SAwCFvM,YAAwB,GAxCtB,qBAwCvCwM,GAxCuC,MAwCvBC,GAxCuB,SAyCczM,YAC1D,GA1C4C,qBAyCvC0M,GAzCuC,MAyCfC,GAzCe,SA4Cc3M,YAC1D,GA7C4C,qBA4CvC4M,GA5CuC,MA4CfC,GA5Ce,SA+CU7M,YAAwB,GA/ClC,qBA+CvC8M,GA/CuC,MA+CjBC,GA/CiB,SAgDY/M,YACxD,GAjD4C,qBAgDvCgN,GAhDuC,MAgDhBC,GAhDgB,SAmDMjN,YAAwB,GAnD9B,qBAmDvCkN,GAnDuC,MAmDnBC,GAnDmB,SAuD1CnN,YAAwB,GAvDkB,qBAqD5CoN,GArD4C,MAsD5CC,GAtD4C,SA2D1CrN,YAAwB,GA3DkB,qBAyD5CsN,GAzD4C,MA0D5CC,GA1D4C,SA+D1CvN,YAAwB,GA/DkB,qBA6D5CwN,GA7D4C,MA8D5CC,GA9D4C,SAgEEzN,YAAwB,GAhE1B,qBAgEvC0N,GAhEuC,MAgErBC,GAhEqB,SAiEE3N,YAAwB,GAjE1B,qBAiEvC4N,GAjEuC,MAiErBC,GAjEqB,SAmEA7N,YAAwB,GAnExB,qBAmEvC8N,GAnEuC,MAmErBC,GAnEqB,SAoEI/N,WAAuB,IApE3B,qBAoEvCgO,GApEuC,MAoEpBC,GApEoB,SA4E1CC,YAAsB,CACxBC,eAAgB,GAGhBC,SAAU,MATVC,GAvE4C,GAuE5CA,MACA1M,GAxE4C,GAwE5CA,MAxE4C,MAyE5C2M,YAAeC,GAzE6B,GAyE7BA,OAAQ3N,GAzEqB,GAyErBA,KACvB4N,GA1E4C,GA0E5CA,SACAC,GA3E4C,GA2E5CA,iBA3E4C,GAmFflN,IAAvBtB,GAnFsC,GAmFtCA,OAAQE,GAnF8B,GAmF9BA,WAEhBkB,qBAAU,WACR,QAAiDmE,IAA7C7B,EAAMuC,oBAAoBwI,SAAS1F,MAAqB,CAC1D,IAAM2F,EAAoB1O,GAAO2O,QAC/B,SAACzJ,GAAD,OAAWA,EAAMc,KAAOtC,EAAMuC,oBAAoBwI,SAAS1F,SAE7D,GAAI2F,EAAkBvN,OAAS,EAAG,CAChCsH,EAAQiG,EAAkB,GAAGjI,MAC7BkC,EAAQ+F,EAAkB,GAAGE,MAC7BhG,EAAW8F,EAAkB,GAAGvJ,SAChC2D,EAAQ4F,EAAkB,GAAGtJ,MAC7B4D,EAAS0F,EAAkB,GAAGrJ,OAC9B6D,EAAWwF,EAAkB,GAAGG,SAChCzF,EAAasF,EAAkB,GAAGI,WAClCxF,EAAeoF,EAAkB,GAAGK,aACpCvF,EAAYkF,EAAkB,GAAG7H,UACjC6C,GAASgF,EAAkB,GAAGM,OAC9BpF,GAAW8E,EAAkB,GAAGO,SAGhC,IAAMC,EAAoBC,IAAOT,EAAkB,GAAG/H,cACtDuD,GAAiBgF,EAAkBE,OAAO,OAC1ChF,GAAe8E,EAAkBE,OAAO,OACxC9E,GAAgB4E,EAAkBE,OAAO,SACzC1E,GAAawE,EAAkBE,OAAO,WAAWC,eAGjD,IAAMC,EAAkBH,IAAOT,EAAkB,GAAGa,iBACpD3E,GAAoB0E,EAAgBF,OAAO,OAC3CtE,GAAkBwE,EAAgBF,OAAO,OACzCpE,GAAmBsE,EAAgBF,OAAO,SAC1ChE,GAAWkE,EAAgBF,OAAO,WAAWC,eAE7CrF,GAAiB0E,EAAkB,GAAGc,eACtC1F,GAAe4E,EAAkB,GAAG5H,iBAGvC,IAEH,IAAM2I,GAAMC,aAAkB,WAG5BlB,QAQImB,GAAe,SAAC,GAAD,IACnB9F,EADmB,EACnBA,YADmB,OAKf,WAGJ0E,GAAS1E,GAAa,GACtB2E,KAEA,IAAMxH,EAAU6C,EAAY5F,MAAM,KAC9B+C,EAAQ7F,OAAS,IAEnByH,EAAW5B,EAAQ,IACnB8B,EAAQ9B,EAAQ,IAChBgC,EAAShC,EAAQ,KAInB4I,YAAW,CAAE5I,QAAS6C,IACnBgG,MAAK,SAACC,GAAD,OAAaC,YAAWD,EAAQ,IAAI,MACzCD,MAAK,SAACG,GACO,OAARA,GACF9G,EAAW8G,QA0PnB,SAASC,KAuBLrC,MArBAvC,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,KAyEJ,SAASuC,KACPzH,EAAQ,IACRE,EAAQ,IACRC,EAAW,IACXE,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXE,EAAa,qBACbE,EAAe,uBACfE,EAAY,GACZE,GAAS,IACTQ,GAAiB,MACjBE,GAAe,MACfE,GAAgB,QAChBM,GAAoB,MACpBE,GAAkB,MAClBE,GAAmB,QACnBN,GAAa,eACbU,GAAW,eACXpB,GAAiB,kBAYnB,OATA9J,GAAWiQ,MAAK,SAAC5Q,EAAc6Q,GAC7B,YAAe7K,IAAXhG,EAAEkH,WAAiClB,IAAX6K,EAAE3J,MACxBlH,EAAEkH,KAAO2J,EAAE3J,KACN,GAIH,KAGR,eAACvC,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAWH,MAAO,CAAEI,gBAAiB,QAASH,UAAW,OAAzD,SACE,oBACEF,UAAU,cACVC,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,aAFlD,cAIgDW,IAA7C7B,EAAMuC,oBAAoBwI,SAAS1F,MAChC,eACA,iBAIR,eAACsH,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,sBACZC,SAvXV,SAAsBC,GACpBA,EAAEC,iBACFpI,EAAQmI,EAAEE,OAAOpP,YACJ6D,IAAT/B,IACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMrC,QAAS,GACjBmK,IAAiB,GAGrB2E,MAgXQvO,MAAO8B,OAGX,eAAC6M,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,qBACZC,SArXV,SAAsBC,GACpBA,EAAEC,iBACFlI,EAAQiI,EAAEE,OAAOpP,YAEJ6D,IAATmD,IACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMvH,QAAS,GACjBqK,IAAiB,GAGrByE,MA6WQvO,MAAOgH,OAGX,sBAAKpE,MAAO,CAAEmB,aAAc,QAAUgK,IAAKA,GAA3C,UACE,cAACY,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACL/O,MAAOA,GACPiP,SAzbU,SAACC,GAEnBrC,GAASqC,EAAEE,OAAOpP,OAAO,IAwbjBqP,UAAW3C,GACXsC,YAAY,uBACZpM,MAAO,CAAE0M,MAAO,UAGN,OAAX1C,IACC,oBAAIhK,MAAO,CAAE2M,cAAe,QAA5B,SA5ZRtQ,GAAKmH,KAAI,SAACoJ,GAAgB,IAEtBC,EAEED,EAFFC,SAFqB,EAInBD,EADFE,sBAAyBC,EAHJ,EAGIA,UAAWC,EAHf,EAGeA,eAEtC,OACE,qBAAmBxL,QAAS6J,GAAauB,GAAzC,0BACK,iCAASG,IADd,IACkC,gCAAQC,MADjCH,WAyZT,cAACI,EAAA,EAAD,UACE,eAAC/L,EAAA,EAAD,WACE,cAAC+L,EAAA,EAAUC,OAAX,CAAkBC,GAAIjM,IAAKkM,OAAQC,SAAS,IAA5C,0BAGA,cAACJ,EAAA,EAAUK,SAAX,CAAoBD,SAAS,IAA7B,SACE,eAACnM,EAAA,EAAKqM,KAAN,WACE,eAACxB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,sBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,aACZhP,MAAOsF,EACP2J,SAzYlB,SAAyBC,GACvBA,EAAEC,iBACFjI,EAAWgI,EAAEE,OAAOpP,YAEJ6D,IAAZyB,IACS,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAAS7F,QAAS,GACpBuK,IAAoB,GAGxBuE,WAmYY,eAACI,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,OACZhP,MAAOmH,EACP8H,SAtYlB,SAAsBC,GACpBA,EAAEC,iBACF/H,EAAQ8H,EAAEE,OAAOpP,YAEJ6D,IAATsD,IACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM1H,QAAS,GACjByK,IAAiB,GAGrBqE,WAgYY,eAACI,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,oBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,QACZhP,MAAOqH,EACP4H,SAnYlB,SAAuBC,GACrBA,EAAEC,iBACF7H,EAAS4H,EAAEE,OAAOpP,YAEJ6D,IAAVwD,IACO,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO5H,QAAS,GAClB2K,IAAkB,GAGtBmE,WA6XY,eAACI,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,sBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,QACZhP,MAAOuH,EACP0H,SAhYlB,SAAyBC,GACvBA,EAAEC,iBACF3H,EAAW0H,EAAEE,OAAOpP,YAEJ6D,IAAZ0D,IACS,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAAS9H,QAAS,GACpB6K,IAAoB,GAGxBiE,qBA8XI,eAACI,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,yBACA,eAACF,EAAA,EAAKG,QAAN,CAAciB,GAAG,SAASd,SA7XlC,SAA2BC,GACzBA,EAAEC,iBACFzH,EAAawH,EAAEE,OAAOpP,YAEJ6D,IAAd4D,IACW,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWhI,QAAS,GACtB+K,IAAsB,GAG1B+D,MAoX6DvO,MAAOyH,EAA9D,UACE,uDACCjJ,GAAW4H,KAAI,SAACqB,GACf,OAAO,iCAA4BA,EAAU1C,MAAzB0C,EAAUnD,aAIpC,eAACqK,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,2BACA,eAACF,EAAA,EAAKG,QAAN,CAAciB,GAAG,SAASd,SA1XlC,SAA6BC,GAC3BA,EAAEC,iBACFvH,EAAesH,EAAEE,OAAOpP,YAEJ6D,IAAhB8D,IACa,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAalI,QAAS,GACxBiL,IAAwB,GAG5B6D,MAiX+DvO,MAAO2H,EAAhE,UACE,yDACA,6CACA,6CACA,qDAGJ,eAACgH,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,uBACA,gCACE,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACL/O,MAAO6H,EACPmH,YAAY,IACZpM,MAAO,CAAE0M,MAAO,OAAQc,QAAS,YAEnC,cAACC,EAAA,EAAD,CACEzN,MAAO,CACLwN,QAAS,SACTzK,WAAY,MACZX,cAAe,MACfsL,WAAY,QAEdlM,QArYZ,SAAqB8K,GACnBA,EAAEC,iBACFrH,EAAYD,EAAW,QAENhE,IAAbgE,GACF+C,IAAqB,GAEvB2D,MAuXQ,eAWA,cAAC8B,EAAA,EAAD,CACEzN,MAAO,CACLwN,QAAS,SACTzK,WAAY,MACZX,cAAe,MACfsL,WAAY,QAEdlM,QAtYZ,SAAsB8K,GACpBA,EAAEC,iBACFrH,EAAYD,EAAW,QAENhE,IAAbgE,GACF+C,IAAqB,GAEvB2D,MAwXQ,qBAaJ,eAACI,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,oBACA,sBAAKlM,UAAU,cAAf,UACE,sBAAMA,UAAU,oBAAhB,eACA,cAACgM,EAAA,EAAKG,QAAN,CACEC,KAAK,SACLC,YAAY,QACZuB,IAAI,IACJC,KAAK,OACLxQ,MAAO+H,GACPkH,SA5YZ,SAAuBC,GACrBA,EAAEC,iBACFnH,GAASkH,EAAEE,OAAOpP,YAEJ6D,IAAVkE,IACF+C,IAAkB,GAEpByD,cAyYI,cAACI,EAAA,EAAKC,MAAN,CAAY6B,UAAU,oBAAtB,SACE,cAAC9B,EAAA,EAAK+B,MAAN,CACE3B,KAAK,WACL4B,MAAM,UACNC,eAAgB3I,GAChBgH,SAAU,kBAAM/G,IAAYD,SAGhC,cAAC0G,EAAA,EAAKE,MAAN,kCACA,eAACF,EAAA,EAAKC,MAAN,WACE,eAACD,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH/P,MAAOuI,GACP0G,SArYV,SAA+BC,GAC7BA,EAAEC,iBACF,IAAM0B,EAAU3B,EAAEE,OAAOpP,MACzBwI,GAAiB0G,EAAEE,OAAOpP,OAC1BkJ,GAAoBgG,EAAEE,OAAOpP,YACR6D,IAAjB8E,IACFG,GAAc/H,EAAc8P,EAASlI,KAEhB,OAAnBuG,EAAEE,OAAOpP,YAAqC6D,IAAnBqL,EAAEE,OAAOpP,OACtCkL,IAA0B,GAE5BqD,MA2XQ3L,MAAO,CAAE0M,MAAO,OAAQc,QAAS,UAJnC,UAME,wBAAQpQ,MAAM,KAAd,gBACC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMoG,KACxE,SAAC7F,GACC,OAAO,wBAAQP,MAAK,UAAKO,GAAlB,mBAA+CA,IAAjBe,OAAOf,UAIlD,eAACoO,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH1L,GAAG,SACHrE,MAAOyI,GACPwG,SArYV,SAA6BC,GAC3BA,EAAEC,iBACFzG,GAAewG,EAAEE,OAAOpP,OACxBoJ,GAAkB8F,EAAEE,OAAOpP,OACJ,OAAnBkP,EAAEE,OAAOpP,YAAqC6D,IAAnBqL,EAAEE,OAAOpP,OACtCoL,IAAwB,GAE1BmD,MA+XQ3L,MAAO,CAAE0M,MAAO,OAAQc,QAAS,SAAUzK,WAAY,OALzD,UAOE,wBAAQ3F,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAECiN,QAAO,SAAC6D,GACP,OAAOxP,OAAOwP,IAAiBjI,MAEhCzC,KAAI,SAAC7F,GACJ,OACE,wBAAQP,MAAK,UAAKO,GAAlB,mBAAwDA,IAAxD,cAAqCe,OAAOf,WAIpD,eAACoO,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH1L,GAAG,UACHrE,MAAO2I,GACPsG,SA7aV,SAA8BC,GAC5BA,EAAEC,iBACFvG,GAAgBsG,EAAEE,OAAOpP,OACzBsJ,GAAmB4F,EAAEE,OAAOpP,YACN6D,IAAlB0E,IACFO,GAAc/H,EAAcwH,GAAe2G,EAAEE,OAAOpP,QAE/B,SAAnBkP,EAAEE,OAAOpP,YAAuC6D,IAAnBqL,EAAEE,OAAOpP,OACxCsL,IAAyB,GAE3BiD,MAoaQ3L,MAAO,CAAEwN,QAAS,SAAUd,MAAO,QAAS3J,WAAY,OAL1D,UAOE,wBAAQ3F,MAAM,OAAd,kBACCwG,EAAMJ,KAAI,SAAC2K,EAAWnK,GACrB,IAAMoK,EAAWpK,EACjB,OACE,wBAAsC5G,MAAO+Q,EAA7C,SACGA,GADH,oBAA0BC,UAMhC,uBACA,cAACrC,EAAA,EAAKE,MAAN,CAAYjM,MAAO,CAAEC,UAAW,QAAhC,wBACA,eAAC8L,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH1L,GAAG,eACHrE,MAAO+I,GACPkG,SAnbV,SAA2BC,GACzBA,EAAEC,iBACFnG,GAAakG,EAAEE,OAAOpP,OACtB,IAAM+I,EAAoBmG,EAAEE,OAAOpP,MAAMiR,WAEvC3E,GADgB,kBAAdvD,EACmBA,EAEA,IAEA,gBAAnBmG,EAAEE,OAAOpP,OACXwL,IAAsB,IA0ahB5I,MAAO,CAAE0M,MAAO,OALlB,UAOE,iDACCzI,EAAMT,KAAI,SAACvF,EAAM+F,GAChB,IAAMoK,EAAWpK,EACjB,OACE,wBAAiC5G,MAAOa,EAAxC,SACGA,GADH,eAAqBmQ,aAO7B,uBACA,cAACrC,EAAA,EAAKE,MAAN,gCACA,eAACF,EAAA,EAAKC,MAAN,WACE,eAACD,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH/P,MAAOiJ,GACPgG,SAzbV,SAAkCC,GAChCA,EAAEC,iBACFjG,GAAoBgG,EAAEE,OAAOpP,YACL6D,IAApBwF,IACFG,GAAiBzI,EAAcmO,EAAEE,OAAOpP,MAAOqJ,KAE1B,OAAnB6F,EAAEE,OAAOpP,YAAqC6D,IAAnBqL,EAAEE,OAAOpP,OACtC0L,IAAiC,GAEnC6C,MAibQ3L,MAAO,CAAE0M,MAAO,OAAQc,QAAS,UAJnC,UAME,wBAAQpQ,MAAM,KAAd,gBACC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMoG,KACxE,SAAC7F,GACC,OAAO,wBAAQP,MAAK,UAAKO,GAAlB,mBAA+CA,IAAjBe,OAAOf,UAIlD,eAACoO,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH1L,GAAG,SACHrE,MAAOmJ,GACP8F,SA3bV,SAAgCC,GAC9BA,EAAEC,iBACF/F,GAAkB8F,EAAEE,OAAOpP,OACJ,OAAnBkP,EAAEE,OAAOpP,YAAqC6D,IAAnBqL,EAAEE,OAAOpP,OACtC4L,IAA+B,GAEjC2C,MAsbQ3L,MAAO,CAAE0M,MAAO,OAAQc,QAAS,SAAUzK,WAAY,OALzD,UAOE,wBAAQ3F,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAECiN,QAAO,SAAC6D,GACP,OAAOxP,OAAOwP,IAAiBvH,MAEhCnD,KAAI,SAAC7F,GACJ,OACE,wBAAQP,MAAK,UAAKO,GAAlB,mBAAwDA,IAAxD,cAAqCe,OAAOf,WAIpD,eAACoO,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH1L,GAAG,UACHrE,MAAOqJ,GACP4F,SA5dV,SAAiCC,GAC/BA,EAAEC,iBACF7F,GAAmB4F,EAAEE,OAAOpP,YACH6D,IAArBoF,IACFO,GAAiBzI,EAAckI,GAAkBiG,EAAEE,OAAOpP,QAErC,SAAnBkP,EAAEE,OAAOpP,YAAuC6D,IAAnBqL,EAAEE,OAAOpP,OACxC8L,IAAgC,GAElCyC,MAodQ3L,MAAO,CAAEwN,QAAS,SAAUd,MAAO,QAAS3J,WAAY,OAL1D,UAOE,wBAAQ3F,MAAM,OAAd,kBACCwG,EAAMJ,KAAI,SAAC2K,EAAWnK,GACrB,IAAMoK,EAAWpK,EACjB,OACE,wBAAsC5G,MAAO+Q,EAA7C,SACGA,GADH,oBAA0BC,UAMhC,uBACA,cAACrC,EAAA,EAAKE,MAAN,CAAYjM,MAAO,CAAEC,UAAW,QAAhC,sBACA,eAAC8L,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACH1L,GAAG,aACHrE,MAAOyJ,GACPwF,SAvfV,SAAyBC,GACvBA,EAAEC,iBACFzF,GAAWwF,EAAEE,OAAOpP,OACG,gBAAnBkP,EAAEE,OAAOpP,OACXgM,IAAoB,IAofdpJ,MAAO,CAAE0M,MAAO,OALlB,UAOE,iDACCjD,GAAkB5M,OAAS,EACxBoH,EACGoG,QAAO,SAACpM,GAAD,OAAUA,EAAOwL,MACxBjG,KAAI,SAACvF,EAAM+F,GACV,IAAMoK,EAAWpK,EACjB,OACE,wBAAiC5G,MAAOa,EAAxC,SACGA,GADH,eAAqBmQ,OAK3B,KAEHnK,EAAMT,KAAI,SAACvF,EAAM+F,GAChB,IAAMoK,EAAWpK,EACjB,OACE,wBAAiC5G,MAAOa,EAAxC,SACGA,GADH,eAAqBmQ,aAO7B,eAACrC,EAAA,EAAKC,MAAN,CAAYhM,MAAO,CAAEC,UAAW,OAAhC,UACE,cAAC8L,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACEiB,GAAG,WACHmB,KAAM,EACNlR,MAAOmI,GACP6G,YAAY,mBACZC,SA/mBV,SAA6BC,GAC3BA,EAAEC,iBACF/G,GAAe8G,EAAEE,OAAOpP,aAgnBpB,eAAC2O,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,gCACA,eAACF,EAAA,EAAKG,QAAN,CACEiB,GAAG,SACHd,SAjnBV,SAA+BC,GAC7BA,EAAEC,iBACF7G,GAAiB4G,EAAEE,OAAOpP,YACH6D,IAAnBqL,EAAEE,OAAOpP,OACXgL,IAA0B,GAE5BuD,MA4mBQvO,MAAOqI,GAHT,UAKE,oDACA,qDACA,4DACA,4DACA,8CACA,+CACA,iDAGJ,cAACgI,EAAA,EAAD,CAAQ3K,QAAQ,UAAUtB,QA3fhC,SAAqB8K,GACnBA,EAAEC,iBAEF,IAAMgC,EAAsB,CAC1B7M,QAC+CT,IAA7C7B,EAAMuC,oBAAoBwI,SAAS1F,MAC/B,EACA/F,OAAOU,EAAMuC,oBAAoBwI,SAAS1F,OAChDtC,KAAMjD,EACNoL,KAAMlG,EACNvD,QAAS6B,EACT5B,KAAMyD,EACNxD,MAAO0D,EACP8F,QAAS5F,EACT6F,UAAW3F,EACX4F,YAAa1F,EACbxC,SAAU0C,EACVyF,MAAOvF,GACP3C,YAAa+C,GACblD,aAAc,IAAI3E,KAAJ,UAAYiI,GAAZ,YAA6BE,GAA7B,YAA4CE,KAC1DkF,gBAAiB,IAAIvN,KAAJ,UACZ2I,GADY,YACQE,GADR,YAC0BE,KAE3C+H,UAAW,IAAI9Q,KACfiN,SAAS,EACTO,cAAezF,GACfgJ,KAAMrP,EAAMsP,KACZC,UAAWvP,EAAMsP,KACjB1N,SAAU,IAGZ1E,QAAQC,IAAI,UAAWgS,GAEvB,IAAMK,EAAU,IAAIC,SAEpBD,EAAQE,OAAO,eAAgBC,KAAKC,UAAUT,IAE9C,IAAMU,EAAS,CACb7S,OAAQ,OACRf,KAAMuT,GAGR,IAEE,IAAMzT,EAAWD,MAAM,qEAAD,OACiDiB,4DACrE8S,GAEFzF,IAAkB,GAElBrO,EAASoQ,MAAK,SAAC2D,GACO,MAAhBA,EAAKlF,OACPmF,YAAW,WACTvD,KACApC,IAAkB,KACjB,KAEH4F,MAAM,sDAAD,OAAuDF,EAAKlF,YAGrE,MAAOsC,GACPhQ,QAAQC,IAAR,sCAA2C+P,MA8bOG,SAAUpD,GAA1D,oBAGA,cAACoE,EAAA,EAAD,CAAQjM,QAASoK,GAAa5L,MAAO,CAAE+C,WAAY,OAAnD,mBAGCwG,GACC,cAACwC,EAAA,EAAKE,MAAN,CAAYjM,MAAO,CAAE+C,WAAY,OAAjC,iCACE,KACJ,8B,oBCh4BOsM,MA5Gf,SAAwBjQ,GAA4B,IAC1C1D,EAAWsB,IAAXtB,OADyC,EAEnBD,gBAAiCwF,GAFd,mBAE1CqO,EAF0C,KAE7BC,EAF6B,OAGvB9T,WAA8B,IAAIiC,MAHX,mBAG1CN,EAH0C,KAGnCiP,EAHmC,KAkCjD,OAAI3Q,EAAOmB,OAAS,EACX,6CAIP,eAAC+C,EAAA,EAAD,CAAWG,UAAU,cAAcC,MAAO,CAAEC,UAAW,OAAvD,UACE,cAACE,EAAA,EAAD,CAAWH,MAAO,CAAEI,gBAAiB,SAArC,SACE,oBAAIJ,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,aAApD,wBAEF,cAAC,IAAD,CACE+L,SAAU,SAACtI,GAAD,OAASsI,EAAStI,IAC5B3G,MAAOA,EACPoS,cAxCN,YAM8B,IAL5BlS,EAK2B,EAL3BA,KAOA,MAAa,UAFc,EAJ3BmS,MAQI/T,EAAOgU,MACL,SAACC,GAAD,OACE9E,IAAO8E,EAAEtN,cAAcyI,OAAO,gBAC9BD,IAAOvN,GAAMwN,OAAO,iBAGjB,YAIJ,MAqBH8E,WAlBN,SAAwBxS,GACtBmS,EAAOnS,IAkBH2C,UAAU,mBAEZ,cAACD,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,UACE,mBAAGH,UAAU,YAAb,SACE,oDAIWkB,IAAhBqO,EACG5T,EACG2O,QAAO,SAACwF,GAIP,GAHqBhF,IAAOgF,EAAcxN,cACtBwI,MAGlB,OAAOgF,KAGVrM,KAAI,SAAC5C,GACJ,IAAMD,EAAU,UAAMC,EAAMC,QAAZ,YAAuBD,EAAME,KAA7B,YAAqCF,EAAMG,OACrD0C,EAAiBC,UAAU/C,GAC3BgD,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEE9B,oBAAqBvC,EACrBwB,MAAOA,EACP8B,QAASiB,GAHJ/C,EAAMc,OAOnBhG,EACG2O,QAAO,SAAC1M,GACP,GAAI2R,GAEAzE,IAAOlN,EAAI0E,cAAcyI,OAAO,eAChCD,IAAOyE,GAAaxE,OAAO,cAE3B,OAAOnN,KAIZ6F,KAAI,SAAC5C,GACJ,IAAMD,EAAU,UAAMC,EAAMC,QAAZ,YAAuBD,EAAME,KAA7B,YAAqCF,EAAMG,OACrD0C,EAAiBC,UAAU/C,GAC3BgD,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEE9B,oBAAqBvC,EACrBwB,MAAOA,EACP8B,QAASiB,GAHJ/C,EAAMc,W,yCC1GvBoO,GAAS,6BACXC,GAAa,EA4EFC,OA1Ef,WACE,IACMC,EAAexU,IAAMyU,OADW,MADX,EAGOC,qBAHP,mBAGTC,GAHS,WAIvBC,OAAyCpP,EAE7CnE,qBAAU,WACR,IAAMwT,EAAkBC,SAASC,eAAe,gBADlC,4CAEd,8BAAAvV,EAAA,sEAEUgB,EAAY,IAAIC,QAAJ,4EACqDC,4DACrE,CACEC,OAAQ,QALhB,SASuBrB,EAAoBkB,GAT3C,QASUI,EATV,QAWaQ,OAAS,IAChBP,QAAQC,IAAI,WAAYF,GACxB+T,EAAa/T,GAEW,OAApBiU,IACFhU,QAAQC,IAAI,2BACZ8T,EAAYI,IACZC,EAAWrU,KAlBnB,gDAsBIC,QAAQC,IAAR,MAtBJ,0DAFc,0DA4BdP,KACC,IAGH,IAAMyU,EAAgB,WACpB,OAAO,IAAIE,OAAOC,KAAKC,IAAIZ,EAAaa,QAAwB,CAC9DC,OAAQ,CAAEC,IAAK,kBAAmBC,KAAM,YACxCC,KAAM,MAIV,SAASC,EAAUhH,EAAqC3G,GAGtD,IAAImN,OAAOC,KAAKQ,OAAO,CACrBC,UAAWV,OAAOC,KAAKU,UAAUC,KACjCC,SAAUrH,EACV4D,MAAO+B,GAAOC,KAAeD,GAAOjT,QACpC2G,IAAKA,IApDkB,SAwDZkN,EAxDY,8EAwD3B,WAA0Be,GAA1B,SAAAxW,EAAA,6DACEqB,QAAQC,IAAI,6BADd,kBAESkV,EAAaC,QAAb,iCAAAC,MAAqB,WAAO/Q,GAAP,uBAAA3F,EAAA,6DACpByH,EADoB,UACP9B,EAAMC,QADC,aACWD,EAAME,KADjB,aAC0BF,EAAMG,MADhC,YACyCH,EAAM2J,SACzEjO,QAAQC,IAAI,kBAAmBmG,GAFL,SAIJ4I,YAAW,CAAE5I,YAJT,cAIpB8I,EAJoB,gBAKCoG,YAAUpG,EAAQ,IALnB,gBAKlBwF,EALkB,EAKlBA,IAAKC,EALa,EAKbA,SAEKhQ,IAAdoP,GACFc,EAAU,CAAEH,MAAKC,OAAOZ,GARA,4CAArB,wDAFT,4CAxD2B,sBAuE3B,OAAO,qBAAKlF,IAAK8E,EAAcjQ,MAAO,CAAE0M,MAAO,IAAKmF,OAAQ,W,gBCoE/CC,I,GAAAA,GAnIf,SAAqB1S,GAAkD,IAC7D1D,EAAWsB,IAAXtB,OAD4D,EAExCD,YAAwB,GAFgB,mBAE7DsW,EAF6D,KAErDC,EAFqD,KAQpE,SAASC,IACPD,GAAWD,GAGb,GAAIrW,EAAOmB,OAAS,EAClB,OAAO,6CAGT,IAAMqV,EAAoBxW,EAAO2O,QAAO,SAACzJ,GAAD,OAAWA,EAAMc,KAAOtC,EAAM+K,SAAS1F,SAC3E0N,EAAgBD,EAAkB,GAAGlR,SAKzC,MAJsB,SAAlBmR,QAA8ClR,IAAlBkR,GAAiD,KAAlBA,IAC7DA,EACE,kGAGF,cAAC,WAAD,UACE,eAACvS,EAAA,EAAD,CAAWG,UAAU,cAAcC,MAAO,CAAEC,UAAW,OAAvD,UACE,cAACE,EAAA,EAAD,CAAWH,MAAO,CAAEI,gBAAiB,SAArC,SACE,oBAAIJ,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,aAApD,4BAIF,eAACR,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,UACGgS,EAAkB1O,KAAI,SAAC5C,GACtB,OACE,eAACM,EAAA,EAAD,CACEnB,UAAU,mDAEVC,MAAO,CACL6R,OAAQ,QACR5R,UAAW,MACXmB,QAAS,QANb,UASE,cAACF,EAAA,EAAKkM,OAAN,CAAapN,MAAO,CAAEM,SAAU,SAAUoN,WAAY,UAAtD,mBACM9M,EAAMuB,KADZ,cAGA,eAACjB,EAAA,EAAKoB,KAAN,yBACc,IACZ,qBAAKtC,MAAO,CAAEoS,UAAW,UAAzB,SAAsCxR,EAAM4J,eAE9C,eAACtJ,EAAA,EAAKoB,KAAN,CAAWtC,MAAO,CAAEmB,aAAc,OAAlC,uBACY,sBAAMnB,MAAO,CAAE0N,WAAY,QAA3B,SAAsC9M,EAAM2B,cAExD,cAACkL,EAAA,EAAD,CAAQ4E,KAAK,KAAK7Q,QAAS,kBAjDxBC,EAiDwCb,EAAMc,QAhD/DtC,EAAMwC,QAAQC,KAAd,UAA8BJ,GADhC,IAAmBA,GAiDH,oBAjBKb,EAAMc,SAwBnB,cAACxB,EAAA,EAAD,CAAKH,UAAU,mDAAf,SACE,cAACgC,EAAA,EAAD,CAAOC,IAAKmQ,EAAelQ,WAAS,EAACT,QAASyQ,MAE/CF,GACC,wBACEhS,UAAU,SACVC,MAAO,CAAEwR,SAAU,YACnBc,MAAI,EACJ9Q,QAASyQ,EAJX,SAME,qBACElS,UAAU,QACViC,IAAKmQ,EACL3Q,QAASyQ,EACTM,IAAI,kBAKZ,cAACzS,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,UACE,cAACsS,GAAA,EAAD,CAAWxS,MAAO,CAAEC,UAAW,OAA/B,SACGiS,EAAkB1O,KAAI,SAAC5C,GACtB,IAAMD,EAAU,UAAMC,EAAMC,QAAZ,YAAuBD,EAAME,KAA7B,YAAqCF,EAAMG,OACrD0C,EAAiBC,UAAU/C,GAC3BgD,EAAY,0DAAsDF,GACxE,OACE,eAAC,WAAD,WACE,eAAC+O,GAAA,EAAUC,KAAX,CAAgB1S,UAAU,4BAA1B,UACE,8CAAqB,IACrB,sBAAMC,MAAO,CAAE+C,WAAY,OAA3B,SACG1F,EAAWuD,EAAM4N,WAAW,GAAM,QAGvC,eAACgE,GAAA,EAAUC,KAAX,CAAgB1S,UAAU,4BAA1B,UACE,+CAAsB,IACtB,sBAAMC,MAAO,CAAE+C,WAAY,MAAO2P,YAAa,OAA/C,SACGrV,EAAWuD,EAAMyB,cAAc,GAAO,KAEzC,mCACA,sBAAMrC,MAAO,CAAE+C,WAAY,OAA3B,SACG1F,EAAWuD,EAAMqK,iBAAiB,GAAO,QAG9C,eAACuH,GAAA,EAAUC,KAAX,CAAgB1S,UAAU,4BAA1B,UACE,6CAAoB,IACpB,sBAAMC,MAAO,CAAE+C,WAAY,OAA3B,SAAqCnC,EAAM4B,iBAE7C,eAACgQ,GAAA,EAAUC,KAAX,CAAgB1S,UAAU,4BAA1B,UACE,mBAAGC,MAAO,CAAE0S,YAAa,OAAzB,sBAA+C,IAC/C,sBAAM3S,UAAU,aAAaC,MAAO,CAAEM,SAAU,SAAhD,SACE,mBAAGmC,KAAMkB,EAAT,SAAwBhD,SAG5B,eAAC6R,GAAA,EAAUC,KAAX,CAAgB1S,UAAU,4BAA1B,UACE,mBAAGC,MAAO,CAAE0S,YAAa,OAAzB,yBAAkD,IAClD,sBAAM3S,UAAU,aAAaC,MAAO,CAAEM,SAAU,SAAhD,SACGM,EAAM+N,iBA9BQ/N,EAAMc,mB,SCvG9B,OAA0B,8CCY5BiR,GAAuE,SAAC,GAE9E,IADLC,EACI,EADJA,aACI,EACkCzC,qBADlC,mBACG0C,EADH,KACgBC,EADhB,KAGJ,OACE,sBAAK/S,UAAU,mBAAmBC,MAAO,CAAEC,UAAW,SAAtD,UACE,oBACEF,UAAU,6BACVC,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,cAFlD,qBAMCuS,GACC,qBAAK7S,MAAO,CAAEM,SAAU,UAAxB,+CAEF,uBAAO0B,IAAK+Q,GAAQrG,MAAM,OAAOmF,OAAO,MAAMmB,UAAQ,EAACC,MAAI,EAACC,OAAK,IACjE,wBAAQlR,IAAK+Q,GAAQ5G,KAAK,cAC1B,mBAAGnM,MAAO,CAAEM,SAAU,UAAtB,qBACA,cAAC,eAAD,CACE6S,SAAQ,UAAKhX,4EACbiX,WAAW,SACXC,UAAWT,EACXU,UAAW,SAACnY,GACV2X,GAAe,IAEjBS,YAAY,EACZC,aAAc,qBACdC,aAAa,mB,oCCjCfC,GAAcC,aAAOC,aAAPD,CAAH,mRAuDFE,OApCf,SAAyBzU,GAAmC,IAAD,EAC9B+Q,oBAAS,GADqB,mBAClD2D,EADkD,KACrCC,EADqC,KAEnDC,EAASC,uBAAY,SAACC,GACG,IAAzBA,EAAcrX,QAKlBuC,EAAM+U,UAAUD,EAAeH,GAAI,MAClC,IATsD,EAUHK,aAAY,CAAEJ,WAA5DK,EAViD,EAUjDA,aAAcC,EAVmC,EAUnCA,cAAeC,EAVoB,EAUpBA,aAOrC,OACE,8CAAK9S,GAAG,aAAgB4S,KAAxB,cACE,qCAAWC,MACVC,EACC,wDAEA,eAAC,WAAD,WACE,cAAC9G,EAAA,EAAD,CAAQzN,MAAO,CAAE0M,MAAO,QAAUlL,QAZ1C,SAAqB8K,GACnBA,EAAEC,iBACFwH,GAAI,IAUE,6BAGiB,IAAhBD,EACC,cAACJ,GAAD,CAAa1T,MAAO,CAAEC,UAAW,OAASuU,cAAY,YACpD,aCmMCC,OApOf,SAAuBrV,GAAe,IAC5BxD,EAAeoB,IAAfpB,WAD2B,EAESH,YAAwB,GAFjC,mBAE5BiZ,EAF4B,KAEZC,EAFY,OAGflZ,WAAuB,GAHR,mBAG5BgG,EAH4B,KAGxBmT,EAHwB,OAIXnZ,gBAAmCwF,GAJxB,mBAI5B/B,EAJ4B,KAItB2V,EAJsB,OAKGpZ,gBAAmCwF,GALtC,mBAK5BsE,EAL4B,KAKfuP,EALe,OAMHrZ,gBAAmCwF,GANhC,mBAM5B8T,EAN4B,KAMlBC,EANkB,OAOGvZ,gBAAmCwF,GAPtC,mBAO5BgU,EAP4B,KAOfC,EAPe,OASGzZ,WAA4B,IAT/B,mBAS5B0Z,EAT4B,KASfC,EATe,KA0DnC,SAASxJ,IACPiJ,EAAQ,IACRD,EAAM,GACNE,EAAe,IACfE,EAAY,IAgDd,OAA0B,IAAtBpZ,EAAWiB,OACN,0DAGTjB,EAAWiQ,MAAK,SAAC5Q,EAAc6Q,GAC7B,YAAe7K,IAAXhG,EAAEkH,WAAiClB,IAAX6K,EAAE3J,MACxBlH,EAAEkH,KAAO2J,EAAE3J,KACN,GAIH,KAIR,eAACvC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAKH,UAAU,cAAf,SACE,cAACI,EAAA,EAAD,UACE,oBAAIH,MAAO,CAAEK,WAAY,gBAAiBC,SAAU,aAApD,mCAMN,cAACmN,EAAA,EAAD,CACEjM,QAnGN,SAA+B8K,GAC7BA,EAAEC,iBACFoI,GAAmBD,IAkGf1U,MAAO,CAAEmB,aAAc,OACvB2B,QAAQ,YAHV,8BAOC4R,EACC,cAAC,IAAD,CACE1R,SAAS,YACTC,kBAAkB,KAClBC,SAAU,IACVC,eAAe,WACfC,eAAe,WACfC,gBAAgB,WAChBC,yBAAyB,EACzBC,OAAO,qCART,SAUG3H,EAAW4H,KAAI,SAACqB,GACf,OACE,cAAC2N,GAAA,EAAUC,KAAX,CAEE4C,QAAM,EACN7T,QAAS,kBAnJvB,SAA0BC,GACxBkT,GAAmBD,GACnB,IAAMY,EAAoB1Z,EAAWyO,QAAO,SAACkL,GAAD,OAAQA,EAAG7T,KAAOD,KAC9DmT,EAAMU,EAAkB,GAAG5T,IAC3BmT,EAAQS,EAAkB,GAAGnT,MACY,OAArCmT,EAAkB,GAAG9S,YACvBsS,EAAe,IAEfA,EAAeQ,EAAkB,GAAG9S,aAGH,IAAjC8S,EAAkB,GAAGtU,eACaC,IAAlCqU,EAAkB,GAAGtU,UACa,OAAlCsU,EAAkB,GAAGtU,UACoB,IAAzCsU,EAAkB,GAAGtU,SAASnE,QAE9BP,QAAQC,IAAI,iCACZyY,EACE,oGAGF1Y,QAAQC,IAAI,+BAAgC+Y,EAAkB,IAC9DN,EAAYM,EAAkB,GAAGtU,WA6HRwU,CAAiB3Q,EAAUnD,KAH5C,SAKGmD,EAAU1C,MAJN0C,EAAUnD,SASrB,KACJ,eAACqK,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,2BACZC,SAlIV,SAAsBC,GACpBA,EAAEC,iBACFsI,EAAQvI,EAAEE,OAAOpP,QAiITA,MAAO8B,OAIX,eAAC6M,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,0BACA,cAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,kCACZC,SAvIV,SAA6BC,GAC3BA,EAAEC,iBACFuI,EAAexI,EAAEE,OAAOpP,QAsIhBA,MAAOmI,OAIX,eAACwG,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,2BACA,cAAC,GAAD,CAAiBkI,UAzIzB,SAAwBsB,GACtBL,EAAeK,GACf,IAAMC,EAAa,+EAA2ED,EAAM,GAAGvW,MACvG8V,EAAYU,WAuIWzU,IAAhBkU,EACC,oBAAInV,MAAO,CAAE2M,cAAe,OAAQgJ,YAAa,MAAO1V,UAAW,OAAnE,SACGkV,EAAY3R,KAAI,SAACoS,GAAD,OACf,+BACE,cAAC,KAAD,CAASC,MAAM,QAAQxD,KAAM,GAAIrS,MAAO,CAAEC,UAAW,UACrD,sBACED,MAAO,CACL6V,MAAO,UACP5V,UAAW,OACXmC,cAAe,UAEjBoS,cAAY,iBANd,SAQGoB,EAAK1W,SAVD0W,EAAK1W,WAehB,QAGN,eAAC6M,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKE,MAAN,oBACA,cAAClK,EAAA,EAAD,CAAOC,IAAK+S,EAAU9S,WAAS,OAGjC,eAAC8J,EAAA,EAAKC,MAAN,WACE,cAACyB,EAAA,EAAD,CAAQjM,QAxJhB,WACE,IAAMqD,EAAY,CAChBnD,GAAID,EACJU,KAAMjD,EACNsD,YAAa+C,EACbvE,SAAU+T,EACVtG,KAAMrP,EAAMsP,MAGRE,EAAU,IAAIC,SAEpBsG,EAAYzD,SAAQ,SAACkE,GACnBhH,EAAQE,OAAO,OAAQ8G,MAGzBhH,EAAQE,OAAO,YAAaC,KAAKC,UAAUnK,IAE3CvI,QAAQC,IAAI,iBAAkBsI,GAC9B,IACE3J,MAAK,wEAE8DiB,4DACjE,CACEC,OAAQ,OACRf,KAAMuT,IAERrD,MAAK,SAACpQ,GACN,IAAKA,EAAS2a,GACZ,MAAMC,MAAM,0BAUd,OAPAb,EAAe,qBAEf/F,YAAW,WACTvD,IACAsJ,EAAe,MACd,KAEI/Z,KAET,MAAO6a,GACP1Z,QAAQC,IAAI,mBAAoByZ,KA+G5B,kBACA,cAACvI,EAAA,EAAD,CAAQjM,QAASoK,EAAa5L,MAAO,CAAE+C,WAAY,OAAnD,mBAGA,cAACgJ,EAAA,EAAKE,MAAN,UAAagJ,eC3NjBgB,GAAa,kBACjB,gCACE,gDACA,4CACa,cAAC,IAAD,CAAMzV,GAAIrE,kBAAV,sBADb,WAME+Z,GAAkB,CACtB/U,aAAc,OACdf,gBAAiB,qBACjBoN,QAAS,cACT2I,WAAY,SACZN,MAAO,sBACPO,UAAW,2EACXhV,QAAS,MACTiV,aAAc,MACdhV,OAAQ,wBACRf,SAAU,OACVD,WAAY,qBACZiW,IAAK,MACLC,UAAW,mBACX/E,SAAU,QACVzO,WAAY,OAsLCyT,OAnLf,WAA6B,IAAD,EACwBrG,mBAAiB,IADzC,mBACnBsG,EADmB,KACAC,EADA,OAEwBvG,mBAAiB,IAFzC,mBAEnBwG,EAFmB,KAEAC,EAFA,OAGsBzG,mBAAiB,IAHvC,mBAGnB0G,EAHmB,KAGDC,EAHC,OAIc3G,mBAAiB,IAJ/B,mBAInB4G,EAJmB,KAILC,EAJK,KAMpBC,EACJ,cAAC,GAAD,CACErE,aAAc,SAACzX,GACT,YAAaA,IACfyb,EAAqBzb,EAAS+b,WAAWC,OACzCL,EAAoB3b,EAAS+b,WAAWhY,MACxC8X,EAAgB7b,EAAS+b,WAAWnC,UACpC2B,EAAqBvb,EAASic,aAMhCC,EAAgB,WACpBX,EAAqB,KAGvB,OACE,eAAC,WAAD,WACGD,IACwB,sBAAtBE,GACuB,yBAAtBA,GACsB,yBAAtBA,GACsB,wBAAtBA,GACsB,6BAAtBA,IACA,eAAC1Z,EAAD,WACE,eAAC,QAAD,WACE,oBAAGwE,GAAG,OAAO1B,UAAU,YAAY0C,KAAMtG,kBAAzC,UACE,cAAC,IAAD,CAAQ6D,MAAO,CAAE0S,YAAa,MAAOtQ,cAAe,YADtD,UAIA,oBACEX,GAAG,WACH1B,UAAU,YACV0C,KAAMtG,0BAHR,UAKE,cAAC,IAAD,CAAY6D,MAAO,CAAE0S,YAAa,SALpC,cAQA,oBACEjR,GAAG,SACH1B,UAAU,YACV0C,KAAMtG,wBAHR,UAKE,cAAC,IAAD,CAAe6D,MAAO,CAAE0S,YAAa,SALvC,kBAQA,oBACEjR,GAAG,SACH1B,UAAU,YACV0C,KAAMtG,wBAHR,UAKE,cAAC,IAAD,CAAU6D,MAAO,CAAE0S,YAAa,SALlC,YAQA,oBAAGjR,GAAG,SAAS1B,UAAU,YAAY0C,KAAMtG,qBAA3C,UACE,cAAC,KAAD,CAAO6D,MAAO,CAAE0S,YAAa,SAD/B,SAIA,uBACA,oBACEjR,GAAG,aACH1B,UAAU,YACV0C,KAAMtG,4BAHR,UAKE,cAAC,KAAD,CAAiB6D,MAAO,CAAE0S,YAAa,SALzC,oBASF,cAAC,IAAD,CAAe4E,SAAUnb,iBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEob,OAAK,EACLC,KAAK,IACLC,OAAQ,kBAAM,cAAC,EAAD,CAAW/X,SAAUmX,OAErC,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAACrY,GAAD,OAAW,cAAC,EAAD,eAAYA,OAC3D,cAAC,IAAD,CACEmY,OAAK,EACLC,KAAK,UACLC,OAAQ,SAACrY,GAAD,OACN,cAAC,EAAD,CAAasP,KAAMiI,EAAmBhV,oBAAqBvC,OAG/D,cAAC,IAAD,CACEmY,OAAK,EACLC,KAAK,YACLC,OAAQ,SAACrY,GAAD,OAAW,cAAC,EAAD,eAAoBA,OAEzC,cAAC,IAAD,CAAOmY,OAAK,EAACC,KAAK,OAAOC,OAAQ,kBAAM,cAAC,GAAD,OACvC,cAAC,IAAD,CACEF,OAAK,EACLC,KAAK,UACLC,OAAQ,SAACrY,GAAD,OAAW,cAAC,GAAD,eAAiBA,OAEtC,cAAC,IAAD,CACEmY,OAAK,EACLC,KAAK,cACLC,OAAQ,kBAAM,cAAC,GAAD,CAAe/I,KAAMiI,OAErC,cAAC,IAAD,CAAOe,UAAWzB,UAGrBY,EACC,sBACE7W,MAAO,CACLwR,SAAU,QACVmG,OAAQ,IACRjL,MAAO,MACPgG,YAAa,MACbb,OAAQ,QANZ,UASE,cAAC,gBAAD,CACE4F,OAAQ,SAACG,GAAD,OACN,yBAAQpW,QAASoW,EAAYpW,QAASxB,MAAOkW,GAA7C,UACE,qBACElW,MAAO,CACL0S,YAAa,OACbmF,WAAY,qBACZzW,QAAS,OACTiV,aAAc,OALlB,SAQE,cAAC,IAAD,CAAUhE,KAAM,OAElB,sBAAMrS,MAAO,CAAEoB,QAAS,qBAAsBsM,WAAY,KAA1D,wBAKJyF,SAAQ,UAAKhX,4EACbiX,WAAW,SACX0E,gBAAiBT,IAEnB,sBAAKtX,UAAU,aAAaC,MAAO,CAAEK,WAAY,YAAjD,UACE,uBAAML,MAAO,CAAE+C,WAAY,QAA3B,6BACmB8T,KAEnB,cAAC9U,EAAA,EAAD,CACEC,IAAK+U,EACL/W,MAAO,CAAE6R,OAAQ,OAAQ9O,WAAY,OACrCgV,eAAa,UAIjB,QAGTtB,EAAoB,KAAOQ,EAE3BR,GAEuB,sBAAtBE,GACsB,yBAAtBA,GACsB,yBAAtBA,GACsB,wBAAtBA,GAEFA,EAAkB9Z,OAAS,EACzB,qEACqC,IACnC,mBAAG4F,KAAK,0BAAR,+BACA,cAAC,gBAAD,CACE0Q,SAAQ,UAAKhX,4EACbiX,WAAW,SACX0E,gBAAiBT,OAGnB,SCnNKW,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3M,MAAK,YAAkD,IAA/C4M,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,GAAD,MAEFlI,SAASC,eAAe,SAM1BwH,O","file":"static/js/main.d406196a.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect } from 'react';\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: Date;\n  DeliveryDateEnd: Date;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n}\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  // console.log('isLeapYear', isLeapYearMade);\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport { useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const userNameString = props.userName.split(' ')[0];\n  return (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ fontSize: 'larger' }}>\n          {' '}\n          Total <Link to='/orders'>Orders</Link>: {orders.length}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { Card, Col, Row, Image } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Order, formatDate } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  console.log('order', props.order);\n  if (props.order.ImageUrl === 'NONE') {\n    console.log('found none');\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.ImageUrl !== undefined) {\n      OrderImageUrl = props.order.ImageUrl;\n    }\n  }\n  return (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n      onClick={() => selectOrder(props.order.Id)}\n    >\n      <Row>\n        <Col style={{ maxWidth: '108px' }}>\n          <Image src={OrderImageUrl} thumbnail />\n        </Col>\n        <Col>\n          <Card.Title>\n            {props.order.Name}{' '}\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              ({`${formatDate(props.order.DeliveryDate, false, true)}`})\n            </span>\n          </Card.Title>\n          <Card.Text>\n            Quantity: {props.order.Quantity}\n            <br></br>\n            Description: {props.order.Description}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <a href={props.address}>{mapAddress}</a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Row, Col, Badge, Jumbotron } from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {orders.length}\n              </Badge>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <FlipMove\n        typeName='div'\n        staggerDurationBy='22'\n        duration={500}\n        leaveAnimation='elevator'\n        enterAnimation='elevator'\n        appearAnimation='elevator'\n        maintainContainerHeight={true}\n        easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}\n      >\n        {orders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n            />\n          );\n        })}\n      </FlipMove>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Jumbotron, Form, Button, Accordion, Card } from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n} from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [areaValidated, setAreaValidated] = React.useState<boolean>(false);\n  const [addressValidated, setAddressValidated] = React.useState<boolean>(false);\n  const [cityValidated, setCityValidated] = React.useState<boolean>(false);\n  const [stateValidated, setStateValidated] = React.useState<boolean>(false);\n  const [zipCodeValidated, setZipCodeValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  const [\n    deliveryDateMonthEndValidated,\n    setDeliveryDateMonthEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateDayEndValidated,\n    setDeliveryDateDayEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateYearEndValidated,\n    setdeliveryDateYearEndValidated,\n  ] = React.useState<boolean>(false);\n  const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n      if (filteredEditOrder.length > 0) {\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('hh:mm a').toUpperCase());\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('hh:mm a').toUpperCase());\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n      }\n    }\n  }, []);\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    areaSet(e.target.value);\n\n    if (area !== undefined) {\n      if (area?.length > 0) {\n        setAreaValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n\n    if (address !== undefined) {\n      if (address?.length > 0) {\n        setAddressValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n\n    if (city !== undefined) {\n      if (city?.length > 0) {\n        setCityValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n\n    if (state !== undefined) {\n      if (state?.length > 0) {\n        setStateValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n\n    if (zipCode !== undefined) {\n      if (zipCode?.length > 0) {\n        setZipCodeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    beginTimeSet(e.target.value);\n    const beginTime: string = e.target.value.toString();\n    if (beginTime !== 'Select a Time') {\n      setFilteredBeginTime(beginTime);\n    } else {\n      setFilteredBeginTime('');\n    }\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYearEnd !== undefined) {\n      daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryDateMonthEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDateDayEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    endTimeSet(e.target.value);\n    if (e.target.value !== 'Select Time') {\n      setEndTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonthEnd !== undefined) {\n      daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setdeliveryDateYearEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      areaValidated &&\n      addressValidated &&\n      cityValidated &&\n      stateValidated &&\n      zipCodeValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      deliveryDateMonthEndValidated &&\n      deliveryDateDayEndValidated &&\n      deliveryDateYearEndValidated &&\n      endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name,\n      Area: area,\n      Address: address,\n      City: city,\n      State: state,\n      ZipCode: zipCode,\n      OrderType: orderType,\n      OrderStatus: orderStatus,\n      Quantity: quantity,\n      Price: price,\n      Description: description,\n      DeliveryDate: new Date(`${deliveryMonth}/${deliveryDay}/${deliveryYear}`),\n      DeliveryDateEnd: new Date(\n        `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd}`\n      ),\n      OrderDate: new Date(),\n      PrePaid: false,\n      TrafficSource: trafficSource,\n      User: props.user,\n      CreatedBy: props.user,\n      ImageUrl: '',\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n  return (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Area</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of Area'\n            onChange={onChangeArea}\n            value={area}\n          />\n        </Form.Group>\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span className='input-group-addon'>$</span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check\n            type='checkbox'\n            label='PrePaid'\n            defaultChecked={prepaid}\n            onChange={() => prepaidSet(!prepaid)}\n          />\n        </Form.Group>\n        <Form.Label>Delivery Begin Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Begin Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <hr></hr>\n        <Form.Label>Delivery End Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonthEnd}\n            onChange={onChangeDeliveryMonthEnd}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDayEnd}\n            onChange={onChangeDeliveryDayEnd}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLengthEnd;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYearEnd}\n            onChange={onChangeDeliveryYearEnd}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>End Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='endTimeCtl'\n            value={endTime}\n            onChange={onChangeEndTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {filteredBeginTime.length > 0\n              ? times\n                  .filter((time) => time > filteredBeginTime)\n                  .map((time, index) => {\n                    const keyIndex = index;\n                    return (\n                      <option key={`time-${keyIndex}`} value={time}>\n                        {time}\n                      </option>\n                    );\n                  })\n              : null}\n\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\n\ntype Props = RouteComponentProps;\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        orders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n      />\n      <Row>\n        <Col>\n          <p className='text-left'>\n            <u>Upcoming</u>\n          </p>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? orders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                />\n              );\n            })\n        : orders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                />\n              );\n            })}\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          console.log('data is ', data);\n          setOrdersMap(data);\n\n          if (googleMapScript !== null) {\n            console.log('found google map script');\n            googleMap = initGoogleMap();\n            setMarkers(data);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(location: google.maps.LatLngLiteral, map: google.maps.Map): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: labels[labelIndex++ % labels.length],\n      map: map,\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    console.log('setMarkers call just made');\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n      console.log('creating marker', address);\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap);\n      }\n    });\n  }\n\n  return <div ref={googleMapRef} style={{ width: 600, height: '100%' }} />;\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport OrderTypeImage from './images/Erotic1.jpg';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].ImageUrl;\n  if (orderImageUrl === 'NONE' || orderImageUrl === undefined || orderImageUrl === '') {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  }\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    Order Type:{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    Quantity: <span style={{ fontWeight: 'bold' }}>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Description:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span className='text-right' style={{ fontSize: 'small' }}>\n                        <a href={addressToUse}>{mapAddress}</a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span className='text-right' style={{ fontSize: 'small' }}>\n                        {order.CreatedBy}\n                      </span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '230px' }}>\n      <h1\n        className='h3 mb-3 font-weight-normal'\n        style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-larger' }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      console.log('found no image, using default');\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      console.log('should be value for imageurl', selectedOrderType[0]);\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { slide as Menu } from 'react-burger-menu';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcHome, FcGoogle } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <Menu>\n              <a id='home' className='menu-item' href={process.env.PUBLIC_URL + '/'}>\n                <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n                Home\n              </a>\n              <a\n                id='calendar'\n                className='menu-item'\n                href={process.env.PUBLIC_URL + '/calendar'}\n              >\n                <FcCalendar style={{ marginRight: '5px' }} />\n                Calendar\n              </a>\n              <a\n                id='create'\n                className='menu-item'\n                href={process.env.PUBLIC_URL + '/create'}\n              >\n                <AiOutlineForm style={{ marginRight: '5px' }} />\n                Create Order\n              </a>\n              <a\n                id='orders'\n                className='menu-item'\n                href={process.env.PUBLIC_URL + '/orders'}\n              >\n                <BiCookie style={{ marginRight: '5px' }} />\n                Orders\n              </a>\n              <a id='orders' className='menu-item' href={process.env.PUBLIC_URL + '/map'}>\n                <FaMap style={{ marginRight: '5px' }} />\n                Map\n              </a>\n              <hr />\n              <a\n                id='ordertypes'\n                className='menu-item'\n                href={process.env.PUBLIC_URL + '/ordertypes'}\n              >\n                <FaClipboardList style={{ marginRight: '5px' }} />\n                Order Types\n              </a>\n            </Menu>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <Switch>\n                <Route\n                  exact\n                  path='/'\n                  render={() => <Dashboard userName={loggedInUserName} />}\n                />\n                <Route exact path='/orders' render={(props) => <Orders {...props} />} />\n                <Route\n                  exact\n                  path='/create'\n                  render={(props) => (\n                    <CreateOrder user={loggedInUserEmail} routeComponentProps={props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path='/calendar'\n                  render={(props) => <CalendarOrders {...props} />}\n                />\n                <Route exact path='/map' render={() => <GMap />} />\n                <Route\n                  exact\n                  path='/detail'\n                  render={(props) => <OrderDetail {...props} />}\n                />\n                <Route\n                  exact\n                  path='/ordertypes'\n                  render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                />\n                <Route component={FourOhFour} />\n              </Switch>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}