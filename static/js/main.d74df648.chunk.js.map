{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","Object","freeze","motivationalQuotes","quote","name","Dashboard","props","randNumber","Math","floor","random","userNameString","userName","split","Container","fluid","Row","className","style","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","to","OrderCard","uploadFiles","setUploadFiles","message","setMessage","path","fileName","document","createElement","toDataURL","href","download","appendChild","click","removeChild","url","then","blob","theBlob","b","lastModifiedDate","newFileArray","f","File","push","blobToFile","URL","createObjectURL","updateBakeryOrder","e","orderStatus","preventDefault","orderContent","Id","order","Name","Area","Address","City","State","ZipCode","OrderType","OrderStatus","Quantity","Price","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","undefined","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","marginBottom","padding","border","borderWidth","borderStyle","parent","Img","as","Image","src","Title","fontWeight","verticalAlign","timeStyle","Text","marginLeft","Button","size","onClick","id","routeComponentProps","history","variant","Form","Label","color","address","sectionStyle","Orders","Badge","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","useState","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","width","data-testid","years","Array","from","val","index","times","CreateOrder","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","daysLengthEnd","daysLengthEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","deliveryDateMonthEndValidated","setDeliveryDateMonthEndValidated","deliveryDateDayEndValidated","setDeliveryDateDayEndValidated","deliveryDateYearEndValidated","setdeliveryDateYearEndValidated","endTimeValidated","setEndTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","filteredBeginTime","setFilteredBeginTime","imageUrl","setImageUrl","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","setValue","clearSuggestions","location","filteredEditOrder","filter","deliveryDateStart","moment","format","toUpperCase","deliveryDateEnd","ref","useOnclickOutside","handleSelect","getGeocode","results","getZipCode","zip","isFormValidated","clearFields","sort","Group","Control","type","placeholder","onChange","target","files","imageUrlAzure","listStyleType","paddingLeft","disabled","suggestion","place_id","structured_formatting","main_text","secondary_text","Accordion","Toggle","Header","eventKey","Collapse","Body","display","min","step","controlId","Check","label","defaultChecked","newDate","numberOfDays","everyYear","keyIndex","toString","rows","trim","user","alert","CalendarOrders","selectedDay","daySet","tileClassName","view","find","x","onClickDay","background","upcomingOrder","statusOrder","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","height","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","fontStyle","thumbnail","alt","ListGroup","Item","marginRight","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","alignItems","boxShadow","borderRadius","top","transform","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d74df648.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect } from 'react';\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: Date;\n  DeliveryDateEnd: Date;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n}\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  // console.log('isLeapYear', isLeapYearMade);\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport { useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const userNameString = props.userName.split(' ')[0];\n  return (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ fontSize: 'larger' }}>\n          {' '}\n          Total <Link to='/orders'>Orders</Link>: {orders.length}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      console.log('Downloading file here.', fileName);\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        console.log('about to get the blob');\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    console.log('object', f, newFileArray);\n    setUploadFiles(newFileArray);\n    console.log('files', uploadFiles);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    console.log('found none');\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n  // console.log('order selected', props.order);\n  return (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Row, Col, Badge, Jumbotron } from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {orders.length}\n              </Badge>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <FlipMove\n        typeName='div'\n        staggerDurationBy='22'\n        duration={500}\n        leaveAnimation='elevator'\n        enterAnimation='elevator'\n        appearAnimation='elevator'\n        maintainContainerHeight={true}\n        easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}\n      >\n        {orders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </FlipMove>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Jumbotron, Form, Button, Accordion, Card } from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n} from '../Interfaces/EmeraldTypes';\nimport { BiDownload } from 'react-icons/bi';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  const [\n    deliveryDateMonthEndValidated,\n    setDeliveryDateMonthEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateDayEndValidated,\n    setDeliveryDateDayEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateYearEndValidated,\n    setdeliveryDateYearEndValidated,\n  ] = React.useState<boolean>(false);\n  const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n      console.log('order selected', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm a').toUpperCase());\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm a').toUpperCase());\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        console.log('about to get the blob');\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    console.log('object', f);\n    setUploadFiles(newFileArray);\n    console.log('files', uploadFiles);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    areaSet(e.target.value);\n  }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    beginTimeSet(e.target.value);\n    const beginTime: string = e.target.value.toString();\n    if (beginTime !== 'Select a Time') {\n      setFilteredBeginTime(beginTime);\n    } else {\n      setFilteredBeginTime('');\n    }\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYearEnd !== undefined) {\n      daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryDateMonthEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDateDayEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    endTimeSet(e.target.value);\n    if (e.target.value !== 'Select Time') {\n      setEndTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonthEnd !== undefined) {\n      daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setdeliveryDateYearEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      deliveryDateMonthEndValidated &&\n      deliveryDateDayEndValidated &&\n      deliveryDateYearEndValidated &&\n      endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name,\n      Area: area === undefined ? ' ' : area,\n      Address: address === undefined ? ' ' : address,\n      City: city === undefined ? ' ' : city,\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode,\n      OrderType: orderType === undefined ? ' ' : orderType,\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus,\n      Quantity: quantity,\n      Price: price === undefined ? ' ' : price,\n      Description: description === undefined ? ' ' : description,\n      DeliveryDate: new Date(\n        `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`\n      ),\n      DeliveryDateEnd: new Date(\n        `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`\n      ),\n      OrderDate: new Date(),\n      PrePaid: false,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource,\n      User: props.user === undefined ? ' ' : props.user,\n      CreatedBy: props.user === undefined ? ' ' : props.user,\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Area</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of Area'\n            onChange={onChangeArea}\n            value={area}\n          />\n        </Form.Group>\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span className='input-group-addon'>$</span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check\n            type='checkbox'\n            label='PrePaid'\n            defaultChecked={prepaid}\n            onChange={() => prepaidSet(!prepaid)}\n          />\n        </Form.Group>\n        <Form.Label>Delivery Begin Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Begin Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <hr></hr>\n        <Form.Label>Delivery End Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonthEnd}\n            onChange={onChangeDeliveryMonthEnd}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDayEnd}\n            onChange={onChangeDeliveryDayEnd}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLengthEnd;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYearEnd}\n            onChange={onChangeDeliveryYearEnd}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>End Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='endTimeCtl'\n            value={endTime}\n            onChange={onChangeEndTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {filteredBeginTime.length > 0\n              ? times\n                  .filter((time) => time > filteredBeginTime)\n                  .map((time, index) => {\n                    const keyIndex = index;\n                    return (\n                      <option key={`time-${keyIndex}`} value={time}>\n                        {time}\n                      </option>\n                    );\n                  })\n              : null}\n\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\n\ntype Props = RouteComponentProps;\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        orders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  orders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? orders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : orders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .filter((statusOrder) => statusOrder.OrderStatus !== 'Delivered')\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          console.log('current day orders', currentDayOrders);\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    console.log('setMarkers call just made');\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n  console.log(orderImageUrl);\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                console.log('addr ', addressToUse);\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      console.log('found no image, using default');\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      console.log('should be value for imageurl', selectedOrderType[0]);\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  console.log('public url', process.env.PUBLIC_URL, process.env.NODE_ENV);\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => <CalendarOrders {...props} />}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}