{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AtTheBoothBakery_Type","emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","Object","freeze","motivationalQuotes","quote","name","formatter","Intl","NumberFormat","style","currency","Dashboard","props","randNumber","Math","floor","random","deliveredOrders","filter","order","OrderStatus","sumCost","reduce","cost","entry","parseFloat","Price","orderedButNotDeliveredandNotCancelled","format","userNameString","userName","split","Container","fluid","Row","className","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","fontWeight","fontStyle","textDecoration","to","color","marginLeft","OrderCard","uploadFiles","setUploadFiles","message","setMessage","path","fileName","document","createElement","toDataURL","href","download","appendChild","removeChild","url","then","blob","theBlob","b","lastModifiedDate","newFileArray","f","File","push","blobToFile","URL","createObjectURL","updateBakeryOrder","e","orderStatus","preventDefault","orderContent","Id","Name","Area","Address","City","State","ZipCode","OrderType","Quantity","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","PorchDropoff","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","undefined","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","marginBottom","padding","border","borderWidth","borderStyle","parent","Img","as","Image","src","Title","verticalAlign","role","aria-label","timeStyle","Text","Button","size","onClick","id","routeComponentProps","history","variant","Form","Label","address","sectionStyle","Orders","useState","displayOrders","setDisplayOrders","filterType","setFilterType","setOrderSearch","Badge","Dropdown","DropdownButton","title","onSelect","atbOrders","Delivered","Ordered","Today","today","moment","statusOrder","Item","eventKey","placeholder","onChange","target","regExOrder","RegExp","toString","searchedOrders","match","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","width","data-testid","years","Array","from","val","index","times","CreateOrder","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","porchDropoff","setPorchDropoff","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","daysLengthEnd","daysLengthEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","deliveryDateMonthEndValidated","setDeliveryDateMonthEndValidated","deliveryDateDayEndValidated","setDeliveryDateDayEndValidated","deliveryDateYearEndValidated","setdeliveryDateYearEndValidated","endTimeValidated","setEndTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","filteredBeginTime","setFilteredBeginTime","imageUrl","setImageUrl","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","setValue","clearSuggestions","location","filteredEditOrder","deliveryDateStart","deliveryDateEnd","ref","useOnclickOutside","handleSelect","getGeocode","results","getZipCode","zip","isFormValidated","clearFields","sort","Group","Control","type","files","imageUrlAzure","listStyleType","paddingLeft","disabled","suggestion","place_id","structured_formatting","main_text","secondary_text","Accordion","Toggle","Header","Collapse","Body","display","min","step","controlId","Check","label","checked","newDate","numberOfDays","everyYear","keyIndex","rows","trim","user","alert","CalendarOrders","selectedDay","daySet","tileClassName","view","find","x","onClickDay","calendarType","background","upcomingOrder","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","height","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","thumbnail","alt","ListGroup","marginRight","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","alignItems","boxShadow","borderRadius","top","transform","window","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","welcomeNotification","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6da0e6b1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    OneSignal: any;\n  }\n}\n\nexport enum AtTheBoothBakery_Type {\n  Delivered = 'Delivered',\n  Ordered = 'ordered',\n  Today = 'Today',\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n  PorchDropoff: boolean;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport { Order, useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const deliveredOrders = orders.filter((order: Order) => {\n    return order.OrderStatus === 'Delivered';\n  });\n\n  const sumCost = deliveredOrders.reduce(\n    (cost: number, entry: any) => cost + (parseFloat(entry.Price) || 0),\n    0\n  );\n\n  const orderedButNotDeliveredandNotCancelled = orders.filter((order: Order) => {\n    return order.OrderStatus === 'Ordered';\n  });\n\n  console.log('Price of all Delivered is: ', formatter.format(sumCost));\n\n  const userNameString = props.userName.split(' ')[0];\n  return (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{orders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    //a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n      PorchDropoff: props.order.PorchDropoff,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n\n  // console.log('prepaid: ', props.order);\n  return (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        {/* <Col\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '210px',\n          }}\n        >\n          <Card.Img\n            as={Image}\n            src={`https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/At%20The%20Booth%20Logo%20Transparent%20Image%20only.png`}\n            // fluid={true}\n            style={{ width: '50%', height: '50%' }}\n            // thumbnail\n          />\n        </Col> */}\n\n        <Col>\n          <Card.Title>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Jumbotron,\n  Dropdown,\n  DropdownButton,\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext, AtTheBoothBakery_Type } from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [displayOrders, setDisplayOrders] = useState(orders);\n  const [filterType, setFilterType] = useState<string>('Delivered');\n  const [orderSearch, setOrderSearch] = useState<string>('');\n\n  const handleSelect = (e: any) => {\n    setFilterType(e);\n\n    let atbOrders = [];\n    console.log('current order type:', e);\n    switch (e) {\n      case AtTheBoothBakery_Type.Delivered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Delivered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Ordered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Ordered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Today:\n        // eslint-disable-next-line no-case-declarations\n        const today = new Date();\n\n        atbOrders = orders\n          .filter((day) => {\n            if (today) {\n              if (\n                moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                moment(today).format('MM-DD-YYYY')\n              ) {\n                return day;\n              }\n            }\n          })\n          .filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          );\n        break;\n      default:\n        atbOrders = orders;\n    }\n\n    setDisplayOrders(atbOrders);\n    setOrderSearch('');\n  };\n\n  const onSearchKey = (e: any) => {\n    // console.log('onsearch', e.target.value, orders);\n    setOrderSearch(e.target.value);\n    const regExOrder = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return (\n        (order.Name && order.Name.match(regExOrder)) ||\n        (order.Address && order.Address.match(regExOrder))\n      );\n    });\n    // console.log('filtered orders key', searchedOrders, regExOrder);\n    setDisplayOrders(searchedOrders);\n  };\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown style={{ marginBottom: '5px' }}>\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            style={{ marginTop: '5px' }}\n            placeholder='Search'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Jumbotron, Form, Button, Accordion, Card } from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n} from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [porchDropoff, setPorchDropoff] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  const [\n    deliveryDateMonthEndValidated,\n    setDeliveryDateMonthEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateDayEndValidated,\n    setDeliveryDateDayEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateYearEndValidated,\n    setdeliveryDateYearEndValidated,\n  ] = React.useState<boolean>(false);\n  const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n\n      console.log('order editing', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        setIsSubmitDisabled(false);\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n        setPorchDropoff(filteredEditOrder[0].PorchDropoff);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        console.log('start time', deliveryDateStart.format('HH:mm A'));\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm A'));\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm A'));\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    // a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    areaSet(e.target.value);\n  }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n\n    beginTimeSet(e.target.value);\n    // console.log(\n    //   'onChange begin time',\n    //   e.target.value,\n    //   moment(e.target.value, 'HH:mm').format('hh:mm a').toString()\n    // );\n    const beginTime: string = moment(e.target.value, 'HH:mm')\n      .format('hh:mm a')\n      .toString();\n    if (beginTime !== 'Select a Time') {\n      setFilteredBeginTime(beginTime);\n    } else {\n      setFilteredBeginTime('');\n    }\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYearEnd !== undefined) {\n      daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryDateMonthEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDateDayEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    endTimeSet(e.target.value);\n    if (e.target.value !== 'Select Time') {\n      setEndTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonthEnd !== undefined) {\n      daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setdeliveryDateYearEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      deliveryDateMonthEndValidated &&\n      deliveryDateDayEndValidated &&\n      deliveryDateYearEndValidated &&\n      endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name.trim(),\n      Area: area === undefined ? ' ' : area.trim(),\n      Address: address === undefined ? ' ' : address.trim(),\n      City: city === undefined ? ' ' : city.trim(),\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode.trim(),\n      OrderType: orderType === undefined ? ' ' : orderType.trim(),\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus.trim(),\n      Quantity: quantity,\n      Price: price === undefined ? '0' : price,\n      Description: description === undefined ? ' ' : description.trim(),\n      DeliveryDate: `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`,\n      DeliveryDateEnd: `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`,\n      OrderDate: new Date(),\n      PrePaid: prepaid,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource.trim(),\n      User: props.user === undefined ? ' ' : props.user.trim(),\n      CreatedBy: props.user === undefined ? ' ' : props.user.trim(),\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl.trim(),\n      PorchDropoff: porchDropoff,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n    setValue('');\n    setPorchDropoff(false);\n    prepaidSet(false);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Area</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of Area'\n            onChange={onChangeArea}\n            value={area}\n          />\n        </Form.Group>\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span className='input-group-addon'>$</span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check\n            type='checkbox'\n            label='PrePaid'\n            name='prepaid'\n            checked={prepaid}\n            onChange={() => prepaidSet(!prepaid)}\n          />\n          <Form.Check\n            type='checkbox'\n            label='Porch Dropoff?'\n            checked={porchDropoff}\n            onChange={() => setPorchDropoff(!porchDropoff)}\n          />\n        </Form.Group>\n        <Form.Label>Delivery Begin Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Begin Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <hr></hr>\n        <Form.Label>Delivery End Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonthEnd}\n            onChange={onChangeDeliveryMonthEnd}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDayEnd}\n            onChange={onChangeDeliveryDayEnd}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLengthEnd;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYearEnd}\n            onChange={onChangeDeliveryYearEnd}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>End Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='endTimeCtl'\n            value={endTime}\n            onChange={onChangeEndTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {filteredBeginTime.length > 0\n              ? times\n                  .filter((time) => time > filteredBeginTime)\n                  .map((time, index) => {\n                    const keyIndex = index;\n                    return (\n                      <option key={`time-${keyIndex}`} value={time}>\n                        {time}\n                      </option>\n                    );\n                  })\n              : null}\n\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Friend-Relatives</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\n\ntype Props = RouteComponentProps;\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders, fetchEmeraldOrders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n\n  useEffect(() => {\n    fetchEmeraldOrders();\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        orders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n        calendarType='US'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  orders\n                    .filter((day) => {\n                      if (selectedDay) {\n                        if (\n                          moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                          moment(selectedDay).format('MM-DD-YYYY')\n                        ) {\n                          return day;\n                        }\n                      }\n                    })\n                    .filter(\n                      (statusOrder) =>\n                        statusOrder.OrderStatus !== 'Delivered' &&\n                        statusOrder.OrderStatus !== 'Cancelled'\n                    ).length\n                }\n              </Badge>\n            </h5>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? orders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : orders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n  console.log(orderImageUrl);\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      console.log('appid', `${process.env.REACT_APP_ONESIGNAL}`);\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n      //Automatically subscribe to the new_app_version tag\n      // OneSignal.sendTag('new_app_version', 'new_app_version', (tagsSent) => {\n      //   // Callback called when tag has finished sending\n      //   console.log('new_app_version TAG SENT', tagsSent);\n      // })\n      // );\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  console.log('public url', process.env.PUBLIC_URL, process.env.NODE_ENV);\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => <CalendarOrders {...props} />}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}