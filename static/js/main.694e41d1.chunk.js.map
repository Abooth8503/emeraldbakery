{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","Object","freeze","motivationalQuotes","quote","name","Dashboard","props","randNumber","Math","floor","random","userNameString","userName","split","Container","fluid","Row","className","style","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","to","OrderCard","OrderImageUrl","mapAddress","order","Address","City","State","undefined","Card","marginBottom","padding","border","borderWidth","borderStyle","onClick","id","Id","routeComponentProps","history","push","maxWidth","Image","src","thumbnail","Title","Name","verticalAlign","DeliveryDate","Text","Quantity","Description","href","address","sectionStyle","Orders","Badge","variant","marginLeft","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","useState","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","Button","width","e","preventDefault","data-testid","years","Array","from","val","index","times","CreateOrder","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatus","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","daysLengthEnd","daysLengthEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","deliveryDateMonthEndValidated","setDeliveryDateMonthEndValidated","deliveryDateDayEndValidated","setDeliveryDateDayEndValidated","deliveryDateYearEndValidated","setdeliveryDateYearEndValidated","endTimeValidated","setEndTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","filteredBeginTime","setFilteredBeginTime","uploadFiles","setUploadFiles","imageUrl","setImageUrl","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","status","setValue","clearSuggestions","location","filteredEditOrder","filter","Area","ZipCode","OrderType","OrderStatus","Price","PrePaid","deliveryDateStart","moment","format","toUpperCase","deliveryDateEnd","DeliveryDateEnd","TrafficSource","ref","useOnclickOutside","handleSelect","getGeocode","then","results","getZipCode","zip","isFormValidated","clearFields","sort","b","Form","Group","Label","Control","type","placeholder","onChange","target","files","imageUrlAzure","listStyleType","paddingLeft","file","color","size","disabled","suggestion","place_id","structured_formatting","main_text","secondary_text","Accordion","Toggle","as","Header","eventKey","Collapse","Body","display","fontWeight","min","step","controlId","Check","label","defaultChecked","newDate","numberOfDays","everyYear","keyIndex","toString","rows","orderContent","OrderDate","User","user","CreatedBy","ImageUrl","payload","FormData","forEach","append","JSON","stringify","myInit","resp","setTimeout","alert","CalendarOrders","selectedDay","daySet","tileClassName","view","find","x","onClickDay","upcomingOrder","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","document","getElementById","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","Marker","animation","Animation","DROP","position","markerOrders","mark","getLatLng","height","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","fontStyle","open","alt","ListGroup","Item","marginRight","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","publicUrl","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","alignItems","boxShadow","borderRadius","top","transform","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","path","render","component","bottom","renderProps","background","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.694e41d1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect } from 'react';\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: Date;\n  DeliveryDateEnd: Date;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n}\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  // console.log('isLeapYear', isLeapYearMade);\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport { useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const userNameString = props.userName.split(' ')[0];\n  return (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ fontSize: 'larger' }}>\n          {' '}\n          Total <Link to='/orders'>Orders</Link>: {orders.length}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { Card, Col, Row, Image } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Order, formatDate } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  console.log('order', props.order);\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    console.log('found none');\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  return (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n      onClick={() => selectOrder(props.order.Id)}\n    >\n      <Row>\n        <Col style={{ maxWidth: '108px' }}>\n          <Image src={OrderImageUrl} thumbnail />\n        </Col>\n        <Col>\n          <Card.Title>\n            {props.order.Name}{' '}\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              ({`${formatDate(props.order.DeliveryDate, false, true)}`})\n            </span>\n          </Card.Title>\n          <Card.Text>\n            Quantity: {props.order.Quantity}\n            <br></br>\n            Description: {props.order.Description}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <a href={props.address}>{mapAddress}</a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Row, Col, Badge, Jumbotron } from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {orders.length}\n              </Badge>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <FlipMove\n        typeName='div'\n        staggerDurationBy='22'\n        duration={500}\n        leaveAnimation='elevator'\n        enterAnimation='elevator'\n        appearAnimation='elevator'\n        maintainContainerHeight={true}\n        easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}\n      >\n        {orders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n            />\n          );\n        })}\n      </FlipMove>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Jumbotron, Form, Button, Accordion, Card } from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n} from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  const [\n    deliveryDateMonthEndValidated,\n    setDeliveryDateMonthEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateDayEndValidated,\n    setDeliveryDateDayEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateYearEndValidated,\n    setdeliveryDateYearEndValidated,\n  ] = React.useState<boolean>(false);\n  const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n      if (filteredEditOrder.length > 0) {\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('hh:mm a').toUpperCase());\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('hh:mm a').toUpperCase());\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n      }\n    }\n  }, []);\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    areaSet(e.target.value);\n  }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    beginTimeSet(e.target.value);\n    const beginTime: string = e.target.value.toString();\n    if (beginTime !== 'Select a Time') {\n      setFilteredBeginTime(beginTime);\n    } else {\n      setFilteredBeginTime('');\n    }\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYearEnd !== undefined) {\n      daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryDateMonthEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDateDayEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    endTimeSet(e.target.value);\n    if (e.target.value !== 'Select Time') {\n      setEndTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonthEnd !== undefined) {\n      daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setdeliveryDateYearEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      deliveryDateMonthEndValidated &&\n      deliveryDateDayEndValidated &&\n      deliveryDateYearEndValidated &&\n      endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name,\n      Area: area === undefined ? ' ' : area,\n      Address: address === undefined ? ' ' : address,\n      City: city === undefined ? ' ' : city,\n      State: state === undefined ? ' ' : state,\n      ZipCode: zipCode === undefined ? ' ' : zipCode,\n      OrderType: orderType === undefined ? ' ' : orderType,\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus,\n      Quantity: quantity,\n      Price: price === undefined ? ' ' : price,\n      Description: description === undefined ? ' ' : description,\n      DeliveryDate: new Date(`${deliveryMonth}/${deliveryDay}/${deliveryYear}`),\n      DeliveryDateEnd: new Date(\n        `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd}`\n      ),\n      OrderDate: new Date(),\n      PrePaid: false,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource,\n      User: props.user === undefined ? ' ' : props.user,\n      CreatedBy: props.user === undefined ? ' ' : props.user,\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ': imageUrl,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n  return (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Area</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of Area'\n            onChange={onChangeArea}\n            value={area}\n          />\n        </Form.Group>\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span className='input-group-addon'>$</span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check\n            type='checkbox'\n            label='PrePaid'\n            defaultChecked={prepaid}\n            onChange={() => prepaidSet(!prepaid)}\n          />\n        </Form.Group>\n        <Form.Label>Delivery Begin Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Begin Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <hr></hr>\n        <Form.Label>Delivery End Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonthEnd}\n            onChange={onChangeDeliveryMonthEnd}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDayEnd}\n            onChange={onChangeDeliveryDayEnd}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLengthEnd;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYearEnd}\n            onChange={onChangeDeliveryYearEnd}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>End Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='endTimeCtl'\n            value={endTime}\n            onChange={onChangeEndTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {filteredBeginTime.length > 0\n              ? times\n                  .filter((time) => time > filteredBeginTime)\n                  .map((time, index) => {\n                    const keyIndex = index;\n                    return (\n                      <option key={`time-${keyIndex}`} value={time}>\n                        {time}\n                      </option>\n                    );\n                  })\n              : null}\n\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\n\ntype Props = RouteComponentProps;\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        orders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n      />\n      <Row>\n        <Col>\n          <p className='text-left'>\n            <u>Upcoming</u>\n          </p>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? orders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                />\n              );\n            })\n        : orders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                />\n              );\n            })}\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          setOrdersMap(data);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(data);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(location: google.maps.LatLngLiteral, map: google.maps.Map): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: labels[labelIndex++ % labels.length],\n      map: map,\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    console.log('setMarkers call just made');\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (orderImageUrl === 'NONE' || orderImageUrl === undefined || orderImageUrl === '') {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    Order Type:{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    Quantity: <span style={{ fontWeight: 'bold' }}>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Description:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span className='text-right' style={{ fontSize: 'small' }}>\n                        <a href={addressToUse}>{mapAddress}</a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span className='text-right' style={{ fontSize: 'small' }}>\n                        {order.CreatedBy}\n                      </span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      console.log('found no image, using default');\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      console.log('should be value for imageurl', selectedOrderType[0]);\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  const publicUrl = process.env.NODE_ENV === 'development' ? '' : process.env.PUBLIC_URL;\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to={publicUrl + '/'}\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to={publicUrl + '/calendar'}\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to={publicUrl + '/create'}\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to={publicUrl + '/orders'}\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to={publicUrl + '/map'}\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to={publicUrl + '/ordertypes'}\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  console.log('public url', process.env.PUBLIC_URL, process.env.NODE_ENV);\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => <CalendarOrders {...props} />}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}