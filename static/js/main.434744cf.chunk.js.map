{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","Object","freeze","motivationalQuotes","quote","name","formatter","Intl","NumberFormat","style","currency","Dashboard","props","randNumber","Math","floor","random","deliveredOrders","filter","order","OrderStatus","sumCost","reduce","cost","entry","parseFloat","Price","orderedButNotDeliveredandNotCancelled","format","userNameString","userName","split","Container","fluid","Row","className","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","fontWeight","fontStyle","textDecoration","to","color","marginLeft","OrderCard","uploadFiles","setUploadFiles","message","setMessage","path","fileName","document","createElement","toDataURL","href","download","appendChild","removeChild","url","then","blob","theBlob","b","lastModifiedDate","newFileArray","f","File","push","blobToFile","URL","createObjectURL","updateBakeryOrder","e","orderStatus","preventDefault","orderContent","Id","Name","Area","Address","City","State","ZipCode","OrderType","Quantity","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","undefined","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","marginBottom","padding","border","borderWidth","borderStyle","parent","Img","as","Image","src","Title","verticalAlign","timeStyle","Text","Button","size","onClick","id","routeComponentProps","history","variant","Form","Label","address","sectionStyle","Orders","Badge","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","useState","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","width","data-testid","years","Array","from","val","index","times","CreateOrder","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","daysLengthEnd","daysLengthEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","deliveryDateMonthEndValidated","setDeliveryDateMonthEndValidated","deliveryDateDayEndValidated","setDeliveryDateDayEndValidated","deliveryDateYearEndValidated","setdeliveryDateYearEndValidated","endTimeValidated","setEndTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","filteredBeginTime","setFilteredBeginTime","imageUrl","setImageUrl","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","setValue","clearSuggestions","location","filteredEditOrder","deliveryDateStart","moment","deliveryDateEnd","ref","useOnclickOutside","handleSelect","getGeocode","results","getZipCode","zip","isFormValidated","clearFields","sort","Group","Control","type","placeholder","onChange","target","files","imageUrlAzure","listStyleType","paddingLeft","disabled","suggestion","place_id","structured_formatting","main_text","secondary_text","Accordion","Toggle","Header","eventKey","Collapse","Body","display","min","step","controlId","Check","label","defaultChecked","newDate","numberOfDays","everyYear","keyIndex","toString","rows","trim","user","alert","CalendarOrders","selectedDay","daySet","tileClassName","view","find","x","onClickDay","background","statusOrder","upcomingOrder","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","height","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","thumbnail","alt","ListGroup","Item","marginRight","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","alignItems","boxShadow","borderRadius","top","transform","window","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","welcomeNotification","title","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.434744cf.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    OneSignal: any;\n  }\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron, Badge } from 'react-bootstrap';\nimport { Order, Orders, useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const deliveredOrders = orders.filter((order: Order) => {\n    return order.OrderStatus === 'Delivered';\n  });\n\n  const sumCost = deliveredOrders.reduce(\n    (cost: number, entry: any) => cost + (parseFloat(entry.Price) || 0),\n    0\n  );\n\n  const orderedButNotDeliveredandNotCancelled = orders.filter((order: Order) => {\n    return order.OrderStatus === 'Ordered';\n  });\n\n  console.log('Price of all Delivered is: ', formatter.format(sumCost));\n\n  const userNameString = props.userName.split(' ')[0];\n  return (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{orders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    //a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n\n  return (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Row, Col, Badge, Jumbotron } from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {orders.length}\n              </Badge>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <FlipMove\n        typeName='div'\n        staggerDurationBy='22'\n        duration={500}\n        leaveAnimation='elevator'\n        enterAnimation='elevator'\n        appearAnimation='elevator'\n        maintainContainerHeight={true}\n        easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}\n      >\n        {orders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </FlipMove>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Jumbotron, Form, Button, Accordion, Card } from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n} from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  const [\n    deliveryDateMonthEndValidated,\n    setDeliveryDateMonthEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateDayEndValidated,\n    setDeliveryDateDayEndValidated,\n  ] = React.useState<boolean>(false);\n  const [\n    deliveryDateYearEndValidated,\n    setdeliveryDateYearEndValidated,\n  ] = React.useState<boolean>(false);\n  const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n\n      console.log('order editing', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        setIsSubmitDisabled(false);\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        console.log('start time', deliveryDateStart.format('HH:mm A'));\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm A'));\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm A'));\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    // a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    areaSet(e.target.value);\n  }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n\n    beginTimeSet(e.target.value);\n    // console.log(\n    //   'onChange begin time',\n    //   e.target.value,\n    //   moment(e.target.value, 'HH:mm').format('hh:mm a').toString()\n    // );\n    const beginTime: string = moment(e.target.value, 'HH:mm')\n      .format('hh:mm a')\n      .toString();\n    if (beginTime !== 'Select a Time') {\n      setFilteredBeginTime(beginTime);\n    } else {\n      setFilteredBeginTime('');\n    }\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYearEnd !== undefined) {\n      daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryDateMonthEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDateDayEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    endTimeSet(e.target.value);\n    if (e.target.value !== 'Select Time') {\n      setEndTimeValidated(true);\n    }\n  }\n\n  function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonthEnd !== undefined) {\n      daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setdeliveryDateYearEndValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      deliveryDateMonthEndValidated &&\n      deliveryDateDayEndValidated &&\n      deliveryDateYearEndValidated &&\n      endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name.trim(),\n      Area: area === undefined ? ' ' : area.trim(),\n      Address: address === undefined ? ' ' : address.trim(),\n      City: city === undefined ? ' ' : city.trim(),\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode.trim(),\n      OrderType: orderType === undefined ? ' ' : orderType.trim(),\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus.trim(),\n      Quantity: quantity,\n      Price: price === undefined ? '0' : price,\n      Description: description === undefined ? ' ' : description.trim(),\n      DeliveryDate: `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`,\n      DeliveryDateEnd: `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`,\n      OrderDate: new Date(),\n      PrePaid: false,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource.trim(),\n      User: props.user === undefined ? ' ' : props.user.trim(),\n      CreatedBy: props.user === undefined ? ' ' : props.user.trim(),\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl.trim(),\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n    setValue('');\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Area</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of Area'\n            onChange={onChangeArea}\n            value={area}\n          />\n        </Form.Group>\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span className='input-group-addon'>$</span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check\n            type='checkbox'\n            label='PrePaid'\n            defaultChecked={prepaid}\n            onChange={() => prepaidSet(!prepaid)}\n          />\n        </Form.Group>\n        <Form.Label>Delivery Begin Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Begin Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <hr></hr>\n        <Form.Label>Delivery End Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonthEnd}\n            onChange={onChangeDeliveryMonthEnd}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDayEnd}\n            onChange={onChangeDeliveryDayEnd}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLengthEnd;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYearEnd}\n            onChange={onChangeDeliveryYearEnd}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>End Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='endTimeCtl'\n            value={endTime}\n            onChange={onChangeEndTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {filteredBeginTime.length > 0\n              ? times\n                  .filter((time) => time > filteredBeginTime)\n                  .map((time, index) => {\n                    const keyIndex = index;\n                    return (\n                      <option key={`time-${keyIndex}`} value={time}>\n                        {time}\n                      </option>\n                    );\n                  })\n              : null}\n\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Friend-Relatives</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext } from './Interfaces/EmeraldTypes';\n\ntype Props = RouteComponentProps;\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders, fetchEmeraldOrders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n\n  useEffect(() => {\n    fetchEmeraldOrders();\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        orders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  orders\n                    .filter((day) => {\n                      if (selectedDay) {\n                        if (\n                          moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                          moment(selectedDay).format('MM-DD-YYYY')\n                        ) {\n                          return day;\n                        }\n                      }\n                    })\n                    .filter(\n                      (statusOrder) =>\n                        statusOrder.OrderStatus !== 'Delivered' &&\n                        statusOrder.OrderStatus !== 'Cancelled'\n                    ).length\n                }\n              </Badge>\n            </h5>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? orders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : orders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n  console.log(orderImageUrl);\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      console.log('appid', `${process.env.REACT_APP_ONESIGNAL}`);\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n      //Automatically subscribe to the new_app_version tag\n      // OneSignal.sendTag('new_app_version', 'new_app_version', (tagsSent) => {\n      //   // Callback called when tag has finished sending\n      //   console.log('new_app_version TAG SENT', tagsSent);\n      // })\n      // );\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  console.log('public url', process.env.PUBLIC_URL, process.env.NODE_ENV);\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => <CalendarOrders {...props} />}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}