{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AtTheBoothBakery_Type","emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","useMediaQuery","useState","screenSize","setScreenSize","useLayoutEffect","updateScreenSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Object","freeze","motivationalQuotes","quote","name","formatter","Intl","NumberFormat","style","currency","Dashboard","props","employee","setEmployee","dashboardOrders","setDashboardOrders","width","onChangeEmployee","e","preventDefault","target","filter","empOrder","EmployeeName","userName","randNumber","Math","floor","random","deliveredOrders","order","OrderStatus","sumCost","reduce","cost","entry","parseFloat","undefined","Price","orderedButNotDeliveredandNotCancelled","userNameString","split","Container","fluid","Row","className","marginTop","Col","Jumbotron","backgroundColor","fontFamily","fontSize","textAlign","fontWeight","fontStyle","textDecoration","Form","Control","as","onChange","marginBottom","to","color","marginLeft","format","ListGroup","Item","size","marginRight","margin","OrderCard","uploadFiles","setUploadFiles","message","setMessage","selectOrder","id","routeComponentProps","history","push","path","fileName","document","createElement","toDataURL","href","download","appendChild","removeChild","url","then","blob","theBlob","b","lastModifiedDate","newFileArray","f","File","blobToFile","URL","createObjectURL","updateBakeryOrder","orderStatus","orderContent","Id","Name","Area","Address","City","State","ZipCode","OrderType","Quantity","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","PorchDropoff","Employee","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","padding","border","borderWidth","borderStyle","parent","Img","Image","src","Title","verticalAlign","role","aria-label","timeStyle","Text","Button","onClick","variant","Label","address","height","sectionStyle","Orders","displayOrders","setDisplayOrders","filterType","setFilterType","handleSelect","atbOrders","Delivered","Ordered","Today","today","moment","statusOrder","onSearchKey","regExOrder","RegExp","toString","searchedOrders","match","Badge","Dropdown","DropdownButton","title","onSelect","eventKey","placeholder","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","data-testid","years","Array","from","val","index","times","CreateOrder","nameOrders","setNameOrders","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","porchDropoff","setPorchDropoff","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","imageUrl","setImageUrl","isPickupClicked","setIsPickupClicked","usePlacesAutocomplete","requestOptions","debounce","suggestions","setValue","clearSuggestions","location","filteredEditOrder","deliveryDateStart","deliveryDateEnd","user","ref","useOnclickOutside","handleInput","getGeocode","results","getZipCode","zip","renderSuggestions","suggestion","place_id","structured_formatting","main_text","secondary_text","renderNameSuggestions","handleNameSelect","onChangeName","regExName","isFormValidated","onChangeAddress","onChangeCity","onChangeState","onChangeZipCode","onChangeOrderType","onChangeOrderStatus","onClickPickup","onClickPlus","onClickMinus","onChangeQuantity","onChangePrice","onChangeDescription","onChangeTrafficSource","onChangeDeliveryMonth","newDate","onChangeDeliveryDay","onChangeDeliveryYear","onChangeBeginTime","insertOrder","trim","clearFields","alert","GetUploadImage","files","imageUrlAzure","sort","Group","type","listStyleType","paddingLeft","disabled","Accordion","Toggle","Header","Collapse","Body","display","alignItems","min","step","controlId","Check","Input","isValid","checked","numberOfDays","everyYear","keyIndex","rows","CalendarOrders","selectedDay","daySet","calenderOrders","setCalenderOrders","showAllOrders","setShowAllOrders","tileClassName","view","find","x","onClickDayDate","onChangeShowAllOrders","onClickDay","calendarType","background","upcomingOrder","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","label","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","thumbnail","alt","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","boxShadow","borderRadius","top","transform","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","welcomeNotification","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.89833c79.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect, useLayoutEffect, useState } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    OneSignal: any;\n  }\n}\n\nexport enum AtTheBoothBakery_Type {\n  Delivered = 'Delivered',\n  Ordered = 'ordered',\n  Today = 'Today',\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n  PorchDropoff: boolean;\n  Employee: number;\n  EmployeeName: string | undefined;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\n\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\n\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nexport function useMediaQuery(): number[] {\n  const [screenSize, setScreenSize] = useState([0, 0]);\n\n  useLayoutEffect(() => {\n    function updateScreenSize(): void {\n      setScreenSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateScreenSize);\n    updateScreenSize();\n    return () => window.removeEventListener('resize', updateScreenSize);\n  }, []);\n\n  return screenSize;\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron, Form, ListGroup } from 'react-bootstrap';\nimport {\n  Order,\n  useEmeraldContext,\n  Orders,\n  useMediaQuery,\n} from '../Interfaces/EmeraldTypes';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap } from 'react-icons/fa';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [dashboardOrders, setDashboardOrders] = React.useState<Orders>(orders);\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    console.log('render happened.');\n    if (orders && orders.length > 0) {\n      switch (props.userName) {\n        case 'Ariel Castillo':\n          setDashboardOrders(\n            orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          );\n          break;\n        case 'Paul Castillo':\n          setDashboardOrders(\n            orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          );\n          break;\n        case 'Jordan Hebert':\n          setDashboardOrders(\n            orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n          );\n          break;\n        default:\n          console.log('default');\n      }\n    }\n  }, []);\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n    if (e.target.value === 'Ariel') {\n      setDashboardOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel'));\n    } else if (e.target.value === 'Jordan') {\n      setDashboardOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan'));\n    } else if (e.target.value === 'All') {\n      setDashboardOrders(orders);\n    } else {\n      setDashboardOrders([]);\n    }\n  }\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const deliveredOrders = dashboardOrders.filter((order: Order) => {\n    return order.OrderStatus === 'Delivered';\n  });\n\n  // console.log('delivered orders', deliveredOrders);\n  const sumCost = dashboardOrders.reduce((cost: number, entry: Order) => {\n    return cost + (parseFloat(entry.Price !== undefined ? entry.Price : '0') || 0);\n  }, 0 as number);\n\n  const orderedButNotDeliveredandNotCancelled = dashboardOrders.filter((order: Order) => {\n    return order.OrderStatus === 'Ordered';\n  });\n\n  const userNameString = props.userName.split(' ')[0];\n  console.log('width: ', width);\n\n  return width < 769 ? (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              style={{ marginBottom: '10px' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{dashboardOrders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  ) : (\n    <Container>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <h3>Motivational Quote!</h3>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n          <br></br>\n          <h3>Links</h3>\n          <ListGroup>\n            <ListGroup.Item>\n              <Link to='/Calendar'>\n                <FcCalendar size={32} style={{ marginRight: '5px' }} />\n                Calender\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Link to='/Orders'>\n                <BiCookie size={32} color='Pink' style={{ marginRight: '5px' }} />\n                Orders\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Link to='/Create'>\n                <AiOutlineForm size={32} color='Black' style={{ marginRight: '5px' }} />\n                Create Order\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Link to='/Gmap'>\n                <FaMap size={32} style={{ marginRight: '5px' }} />\n                Map\n              </Link>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white', width: '400px', margin: 'auto' }}>\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              style={{ marginBottom: '10px' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{dashboardOrders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext, useMediaQuery } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    //a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n      PorchDropoff: props.order.PorchDropoff,\n      Employee: props.order.Employee,\n      EmployeeName: props.order.EmployeeName,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n\n  // console.log('prepaid: ', props.order);\n  return width < 769 ? (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ marginRight: '5px' }}>\n              {props.order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n            </span>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  ) : (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n        height: props.parent === 'calender' ? '186px' : '253px',\n        width: props.parent === 'calender' ? '430px' : '790px',\n        marginTop: 'auto',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n      }}\n      className='text-center'\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ marginRight: '5px' }}>\n              {props.order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n            </span>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Jumbotron,\n  Dropdown,\n  DropdownButton,\n} from 'react-bootstrap';\nimport moment from 'moment';\n// import FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport {\n  useEmeraldContext,\n  AtTheBoothBakery_Type,\n  useMediaQuery,\n} from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [displayOrders, setDisplayOrders] = useState(orders);\n  const [filterType, setFilterType] = useState<string>('Delivered');\n  const [width] = useMediaQuery();\n\n  const handleSelect = (e: any) => {\n    setFilterType(e);\n\n    let atbOrders = [];\n\n    switch (e) {\n      case AtTheBoothBakery_Type.Delivered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Delivered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Ordered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Ordered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Today:\n        // eslint-disable-next-line no-case-declarations\n        const today = new Date();\n\n        atbOrders = orders\n          .filter((day) => {\n            if (today) {\n              if (\n                moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                moment(today).format('MM-DD-YYYY')\n              ) {\n                return day;\n              }\n            }\n          })\n          .filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          );\n        break;\n      default:\n        atbOrders = orders;\n    }\n\n    setDisplayOrders(atbOrders);\n  };\n\n  const onSearchKey = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const regExOrder = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return (\n        (order.Name && order.Name.match(regExOrder)) ||\n        (order.Address && order.Address.match(regExOrder))\n      );\n    });\n\n    setDisplayOrders(searchedOrders);\n  };\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return width < 769 ? (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown style={{ marginBottom: '5px' }}>\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            style={{ marginTop: '5px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  ) : (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown\n            className='text-right'\n            style={{ marginBottom: '5px', marginRight: '250px' }}\n          >\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            className='float-left'\n            style={{ marginTop: '5px', marginLeft: '173px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Jumbotron,\n  Form,\n  Button,\n  Accordion,\n  Card,\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n  Orders,\n  useMediaQuery,\n} from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [nameOrders, setNameOrders] = React.useState<Orders>([]);\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [porchDropoff, setPorchDropoff] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  // const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateMonthEndValidated,\n  //   setDeliveryDateMonthEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateDayEndValidated,\n  //   setDeliveryDateDayEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateYearEndValidated,\n  //   setdeliveryDateYearEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  // const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [isPickupClicked, setIsPickupClicked] = React.useState<boolean>(false);\n  const [width] = useMediaQuery();\n\n  const {\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n\n      console.log('order editing', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        setIsSubmitDisabled(false);\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n        setPorchDropoff(filteredEditOrder[0].PorchDropoff);\n        setEmployee(filteredEditOrder[0].EmployeeName);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        // console.log('start time', deliveryDateStart.format('HH:mm A'));\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm A'));\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm A'));\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      setEmployee('Ariel');\n    } else {\n      setEmployee('Jordan');\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    // a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  const renderNameSuggestions = (): JSX.Element[] =>\n    nameOrders.map((suggestion) => {\n      return (\n        <li key={suggestion.Id} onClick={(e) => handleNameSelect(e, suggestion)}>\n          🍪<strong>{suggestion.Name}</strong> - <small>{suggestion.Address}</small>\n        </li>\n      );\n    });\n\n  const handleNameSelect = (e: React.MouseEvent, order: Order): void => {\n    e.preventDefault();\n    nameSet(order.Name);\n    addressSet(order.Address);\n    citySet(order.City);\n    stateSet(order.State);\n    zipCodeSet(order.ZipCode);\n\n    setValue(`${order.Address} ${order.City},${order.State} ${order.ZipCode}`);\n    setNameOrders([]);\n  };\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n\n    const regExName = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return order.Name && order.Name.match(regExName);\n    });\n\n    setNameOrders(searchedOrders);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  // function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n  //   e.preventDefault();\n  //   areaSet(e.target.value);\n  // }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPickup(e: React.MouseEvent): void {\n    e.preventDefault();\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      addressSet('13819 Wood Breeze');\n      citySet('San Antonio');\n      stateSet('Texas');\n      zipCodeSet('78217');\n    } else if (props.user === 'jbooth6985@gmail.com') {\n      addressSet('2633 Gallant Fox Drive');\n      citySet('Schertz');\n      stateSet('Texas');\n      zipCodeSet('78108');\n    }\n\n    setIsPickupClicked(!isPickupClicked);\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeQuantity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    quantitySet(Number(e.target.value));\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n\n    beginTimeSet(e.target.value);\n    endTimeSet(e.target.value);\n\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  // function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryMonthEndSet(e.target.value);\n  //   if (deliveryYearEnd !== undefined) {\n  //     daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n  //   }\n  //   if (e.target.value !== 'MM' && e.target.value !== undefined) {\n  //     setDeliveryDateMonthEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  // function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryDayEndSet(e.target.value);\n  //   if (e.target.value !== 'DD' && e.target.value !== undefined) {\n  //     setDeliveryDateDayEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  // function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   endTimeSet(e.target.value);\n  //   if (e.target.value !== 'Select Time') {\n  //     setEndTimeValidated(true);\n  //   }\n  // }\n\n  // function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryYearEndSet(e.target.value);\n  //   if (deliveryMonthEnd !== undefined) {\n  //     daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n  //   }\n  //   if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n  //     setdeliveryDateYearEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      // deliveryDateMonthEndValidated &&\n      // deliveryDateDayEndValidated &&\n      // deliveryDateYearEndValidated &&\n      // endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name.trim(),\n      Area: area === undefined ? ' ' : area.trim(),\n      Address: address === undefined ? ' ' : address.trim(),\n      City: city === undefined ? ' ' : city.trim(),\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode.trim(),\n      OrderType: orderType === undefined ? ' ' : orderType.trim(),\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus.trim(),\n      Quantity: quantity,\n      Price: price === undefined ? '0' : price,\n      Description: description === undefined ? ' ' : description.trim(),\n      DeliveryDate: `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`,\n      DeliveryDateEnd: `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`,\n      OrderDate: new Date(),\n      PrePaid: prepaid,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource.trim(),\n      User: props.user === undefined ? ' ' : props.user.trim(),\n      CreatedBy: props.user === undefined ? ' ' : props.user.trim(),\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl.trim(),\n      PorchDropoff: porchDropoff,\n      Employee: 1,\n      EmployeeName: employee,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n    setValue('');\n    setPorchDropoff(false);\n    prepaidSet(false);\n    setEmployee('Select Employee');\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return width < 769 ? (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {name && name.length > 0 && (\n            <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n          )}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Button\n            variant={isPickupClicked ? `primary` : 'secondary'}\n            size='sm'\n            style={{ marginLeft: '5px' }}\n            onClick={onClickPickup}\n          >\n            {isPickupClicked ? `Enter Address` : 'Pickup'}\n          </Button>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={isPickupClicked}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              onChange={onChangeQuantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span\n              className='input-group-addon'\n              style={{\n                display: 'inline-flex',\n                verticalAlign: 'middle',\n                alignItems: 'center',\n              }}\n            >\n              💲\n            </span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check type='checkbox' id='prepaidCheckbox'>\n            <Form.Check.Input\n              type='checkbox'\n              isValid\n              checked={prepaid}\n              onChange={() => prepaidSet(!prepaid)}\n            />\n            <span>💵</span>\n            <Form.Check.Label style={{ color: 'black' }}>PrePaid</Form.Check.Label>\n          </Form.Check>\n\n          <Form.Check type='checkbox' id='porchDropOff'>\n            <Form.Check.Input\n              type='checkbox'\n              isValid\n              checked={porchDropoff}\n              onChange={() => setPorchDropoff(!porchDropoff)}\n            />\n            <span>🚪</span>\n            <Form.Check.Label style={{ color: 'black' }}>Porch Dropoff</Form.Check.Label>\n          </Form.Check>\n        </Form.Group>\n        <Form.Label>Delivery Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Friend-Relatives</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Employee</Form.Label>\n          <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n            <option>Select Employee</option>\n            <option>Ariel</option>\n            <option>Jordan</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  ) : (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter name of order'\n                onChange={onChangeName}\n                value={name}\n              />\n              {name && name.length > 0 && (\n                <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n              )}\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Upload Image</Form.Label>\n              <EmeraldDropzone uploadDoc={GetUploadImage} />\n              {uploadFiles !== undefined ? (\n                <ul\n                  style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}\n                >\n                  {uploadFiles.map((file: File) => (\n                    <li key={file.name}>\n                      <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                      <span\n                        style={{\n                          color: '#005ea2',\n                          marginTop: '10px',\n                          verticalAlign: 'bottom',\n                        }}\n                        data-testid='uploadfilename'\n                      >\n                        {file.name}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              ) : null}\n            </Form.Group>\n\n            <div style={{ marginBottom: '10px' }} ref={ref}>\n              <Form.Label>Search Address</Form.Label>\n              <Button\n                variant={isPickupClicked ? `primary` : 'secondary'}\n                size='sm'\n                style={{ marginLeft: '5px' }}\n                onClick={onClickPickup}\n              >\n                {isPickupClicked ? `Enter Address` : 'Pickup'}\n              </Button>\n              <Form.Control\n                type='text'\n                value={value}\n                onChange={handleInput}\n                disabled={isPickupClicked}\n                placeholder='Where are you going?'\n                style={{ width: '100%' }}\n              />\n              {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n              {status === 'OK' && (\n                <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n              )}\n            </div>\n            <Accordion>\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey='0'>\n                  Address Info\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey='0'>\n                  <Card.Body>\n                    <Form.Group>\n                      <Form.Label>Address</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='123 Street'\n                        value={address}\n                        onChange={onChangeAddress}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>City</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='City'\n                        value={city}\n                        onChange={onChangeCity}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>State</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='State'\n                        value={state}\n                        onChange={onChangeState}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>ZipCode</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='12345'\n                        value={zipCode}\n                        onChange={onChangeZipCode}\n                      />\n                    </Form.Group>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <Form.Group>\n              <Form.Label>Order Type</Form.Label>\n              <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n                <option>Select Order Type</option>\n                {orderTypes.map((orderType) => {\n                  return <option key={orderType.Id}>{orderType.Name}</option>;\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Order Status</Form.Label>\n              <Form.Control\n                as='select'\n                onChange={onChangeOrderStatus}\n                value={orderStatus}\n              >\n                <option>Select Order Status</option>\n                <option>Pending</option>\n                <option>Ordered</option>\n                <option>Delivered</option>\n                <option>Cancelled</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quantity</Form.Label>\n              <div>\n                <Form.Control\n                  type='text'\n                  value={quantity}\n                  onChange={onChangeQuantity}\n                  placeholder='1'\n                  style={{ width: '50px', display: 'inline' }}\n                />\n                <Button\n                  style={{\n                    display: 'inline',\n                    marginLeft: '5px',\n                    verticalAlign: 'top',\n                    fontWeight: 'bold',\n                  }}\n                  onClick={onClickPlus}\n                >\n                  +\n                </Button>\n                <Button\n                  style={{\n                    display: 'inline',\n                    marginLeft: '5px',\n                    verticalAlign: 'top',\n                    fontWeight: 'bold',\n                  }}\n                  onClick={onClickMinus}\n                >\n                  -\n                </Button>\n              </div>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>Price</Form.Label>\n              <div className='input-group'>\n                <span\n                  className='input-group-addon'\n                  style={{\n                    display: 'inline-flex',\n                    verticalAlign: 'middle',\n                    alignItems: 'center',\n                  }}\n                >\n                  💲\n                </span>\n                <Form.Control\n                  type='number'\n                  placeholder='10.00'\n                  min='1'\n                  step='0.01'\n                  value={price}\n                  onChange={onChangePrice}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={prepaid}\n                  onChange={() => prepaidSet(!prepaid)}\n                />\n                <span>💵</span>\n                <Form.Check.Label style={{ color: 'black' }}>PrePaid</Form.Check.Label>\n              </Form.Check>\n\n              <Form.Check type='checkbox' id='porchDropOff'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={porchDropoff}\n                  onChange={() => setPorchDropoff(!porchDropoff)}\n                />\n                <span>🚪</span>\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Porch Dropoff\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n            <Form.Label>Delivery Date</Form.Label>\n            <Form.Group>\n              <Form.Control\n                as='select'\n                value={deliveryMonth}\n                onChange={onChangeDeliveryMonth}\n                style={{ width: '78px', display: 'inline' }}\n              >\n                <option value='MM'>MM</option>\n                {[\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                ].map((day) => {\n                  return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n                })}\n              </Form.Control>\n              <Form.Control\n                as='select'\n                id='addDay'\n                value={deliveryDay}\n                onChange={onChangeDeliveryDay}\n                style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n              >\n                <option value='DD'>DD</option>\n                {[\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                  '13',\n                  '14',\n                  '15',\n                  '16',\n                  '17',\n                  '18',\n                  '19',\n                  '20',\n                  '21',\n                  '22',\n                  '23',\n                  '24',\n                  '25',\n                  '26',\n                  '27',\n                  '28',\n                  '29',\n                  '30',\n                  '31',\n                ]\n                  .filter((numberOfDays) => {\n                    return Number(numberOfDays) <= daysLength;\n                  })\n                  .map((day) => {\n                    return (\n                      <option\n                        value={`${day}`}\n                        key={`day-${Number(day)}`}\n                      >{`${day}`}</option>\n                    );\n                  })}\n              </Form.Control>\n              <Form.Control\n                as='select'\n                id='addYear'\n                value={deliveryYear}\n                onChange={onChangeDeliveryYear}\n                style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n              >\n                <option value='YYYY'>YYYY</option>\n                {years.map((everyYear, index) => {\n                  const keyIndex = index;\n                  return (\n                    <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                      {everyYear}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n              <br></br>\n              <Form.Label style={{ marginTop: '10px' }}>Time</Form.Label>\n              <Form.Control\n                as='select'\n                id='beginTimeCtl'\n                value={beginTime}\n                onChange={onChangeBeginTime}\n                style={{ width: '40%' }}\n              >\n                <option>Select Time</option>\n                {times.map((time, index) => {\n                  const keyIndex = index;\n                  return (\n                    <option key={`time-${keyIndex}`} value={time}>\n                      {time}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group style={{ marginTop: '5px' }}>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as='textarea'\n                rows={4}\n                value={description}\n                placeholder='Description here'\n                onChange={onChangeDescription}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Source of Traffic</Form.Label>\n              <Form.Control\n                as='select'\n                onChange={onChangeTrafficSource}\n                value={trafficSource}\n              >\n                <option>Select Traffic</option>\n                <option>3009 Moms group</option>\n                <option>San Antonio Moms group</option>\n                <option>Grocery Facebook Group</option>\n                <option>Facebook</option>\n                <option>Instagram</option>\n                <option>Friend-Relatives</option>\n                <option>Other</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Employee</Form.Label>\n              <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n                <option>Select Employee</option>\n                <option>Ariel</option>\n                <option>Jordan</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n              Submit\n            </Button>\n            <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n              Clear\n            </Button>\n            {isOrderSubmitted ? (\n              <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n            ) : null}\n            <br></br>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge, Form } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order, Orders } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext, useMediaQuery } from './Interfaces/EmeraldTypes';\n\ninterface Props {\n  routeComponentProps: RouteComponentProps;\n  userName: string;\n}\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders, fetchEmeraldOrders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [calenderOrders, setCalenderOrders] = React.useState<Orders>(orders);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [showAllOrders, setShowAllOrders] = React.useState<boolean>(false);\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    fetchEmeraldOrders();\n    // console.log('emerald orders', orders);\n\n    if (orders && orders.length > 0) {\n      switch (props.userName) {\n        case 'Ariel Castillo':\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Ariel');\n          break;\n        case 'Paul Castillo':\n          // console.log(\n          //   'found Paul',\n          //   orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          // );\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Ariel');\n          break;\n        case 'Jordan Hebert':\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Jordan');\n          break;\n        default:\n          setCalenderOrders(\n            orders.filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n          );\n          setEmployee('All');\n      }\n    }\n\n    // console.log('cal orders', calenderOrders);\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        calenderOrders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n\n    if (e.target.value === 'All') {\n      if (showAllOrders) {\n        setCalenderOrders(orders);\n      } else {\n        setCalenderOrders(\n          orders.filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          )\n        );\n      }\n    } else {\n      if (showAllOrders) {\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === e.target.value)\n        );\n      } else {\n        setCalenderOrders(\n          orders\n            .filter((empOrder) => empOrder.EmployeeName === e.target.value)\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n        );\n      }\n    }\n  }\n\n  async function onChangeShowAllOrders(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): Promise<void> {\n    await setShowAllOrders(!showAllOrders);\n    // console.log('checkbox', e.target.value, employee, showAllOrders);\n\n    if (employee === 'All') {\n      if (showAllOrders) {\n        setCalenderOrders(orders);\n      } else {\n        setCalenderOrders(\n          orders.filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          )\n        );\n      }\n    } else {\n      if (showAllOrders) {\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === employee)\n        );\n      } else {\n        setCalenderOrders(\n          orders\n            .filter((empOrder) => empOrder.EmployeeName === employee)\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n        );\n      }\n    }\n  }\n\n  if (orders && orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return width < 769 ? (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calender</h2>\n      </Jumbotron>\n      <Form.Group>\n        <Form.Control\n          as='select'\n          onChange={onChangeEmployee}\n          value={employee}\n          title='Select Employee view.'\n        >\n          <option>Select Employee</option>\n          <option>Ariel</option>\n          <option>Jordan</option>\n          <option>All</option>\n        </Form.Control>\n      </Form.Group>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n        calendarType='US'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={showAllOrders}\n                  onChange={onChangeShowAllOrders}\n                />\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Show all Orders\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? calenderOrders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : calenderOrders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  ) : (\n    <Container style={{ marginTop: '5px' }}>\n      <Jumbotron className='text-center' style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calender</h2>\n      </Jumbotron>\n\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              title='Select Employee view.'\n              style={{ width: '193px', margin: 'auto' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n          </Form.Group>\n          <Calendar\n            onChange={(val) => onChange(val)}\n            value={value}\n            tileClassName={tileClassName}\n            onClickDay={onClickDayDate}\n            calendarType='US'\n            className='centercalendar'\n          />\n        </Col>\n\n        <Col>\n          <span className='text-center'>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={showAllOrders}\n                  onChange={onChangeShowAllOrders}\n                />\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Show all Orders\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </span>\n          {selectedDay === undefined\n            ? calenderOrders\n                .filter((upcomingOrder) => {\n                  const deliveryDate = moment(upcomingOrder.DeliveryDate);\n                  const currentDate = moment();\n\n                  if (deliveryDate > currentDate) {\n                    return upcomingOrder;\n                  }\n                })\n                .map((order: Order) => {\n                  const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                  const encodedAddress = encodeURI(mapAddress);\n                  const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                  return (\n                    <OrderCard\n                      key={order.Id}\n                      routeComponentProps={props.routeComponentProps}\n                      order={order}\n                      address={addressToUse}\n                      parent='calender'\n                    />\n                  );\n                })\n            : calenderOrders\n                .filter((day) => {\n                  if (selectedDay) {\n                    if (\n                      moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                      moment(selectedDay).format('MM-DD-YYYY')\n                    ) {\n                      return day;\n                    }\n                  }\n                })\n                .sort((a: Order, b: Order) => {\n                  if (a.DeliveryDate > b.DeliveryDate) {\n                    return 1;\n                  }\n\n                  return -1;\n                })\n                .map((order: Order) => {\n                  const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                  const encodedAddress = encodeURI(mapAddress);\n                  const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                  return (\n                    <OrderCard\n                      key={order.Id}\n                      routeComponentProps={props.routeComponentProps}\n                      order={order}\n                      address={addressToUse}\n                      parent='calender'\n                    />\n                  );\n                })}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Employee:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n                      </span>\n                      <span style={{ marginLeft: '6px' }}>{order.EmployeeName}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      // console.log('appid', `${process.env.REACT_APP_ONESIGNAL}`);\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n      //Automatically subscribe to the new_app_version tag\n      // OneSignal.sendTag('new_app_version', 'new_app_version', (tagsSent) => {\n      //   // Callback called when tag has finished sending\n      //   console.log('new_app_version TAG SENT', tagsSent);\n      // })\n      // );\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => (\n                        <CalendarOrders\n                          routeComponentProps={props}\n                          userName={loggedInUserName}\n                        />\n                      )}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}