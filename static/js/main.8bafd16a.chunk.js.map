{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/BoothNavbar.tsx","Common/Dashboard.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","videos/AtTheBoothHeading.mp4","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AtTheBoothBakery_Type","emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","useMediaQuery","useState","screenSize","setScreenSize","useLayoutEffect","updateScreenSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Object","freeze","BoothNavbar","Navbar","bg","variant","Brand","href","className","to","Link","size","style","marginBottom","marginRight","color","motivationalQuotes","quote","name","formatter","Intl","NumberFormat","currency","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Dashboard","props","employee","setEmployee","dashboardOrders","setDashboardOrders","width","onChangeEmployee","e","preventDefault","target","filter","empOrder","EmployeeName","userName","randNumber","Math","floor","random","deliveredOrders","order","OrderStatus","sumCost","reduce","cost","entry","parseFloat","undefined","Price","orderedButNotDeliveredandNotCancelled","userNameString","split","Container","fluid","Row","marginTop","Col","Jumbotron","fontFamily","fontSize","textAlign","fontWeight","fontStyle","textDecoration","Form","Control","as","onChange","marginLeft","format","ListGroup","Item","margin","type","OrderCard","uploadFiles","setUploadFiles","message","setMessage","selectOrder","id","routeComponentProps","history","push","path","fileName","document","createElement","toDataURL","download","appendChild","removeChild","url","then","blob","theBlob","b","lastModifiedDate","newFileArray","f","File","blobToFile","URL","createObjectURL","updateBakeryOrder","orderStatus","orderContent","Id","Name","Area","Address","City","State","ZipCode","OrderType","Quantity","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","PorchDropoff","Employee","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","padding","border","borderWidth","borderStyle","parent","Img","Image","src","Title","verticalAlign","role","aria-label","timeStyle","Text","Button","onClick","Label","address","height","sectionStyle","Orders","displayOrders","setDisplayOrders","filterType","setFilterType","handleSelect","atbOrders","Delivered","Ordered","Today","today","moment","statusOrder","onSearchKey","regExOrder","RegExp","toString","searchedOrders","match","Badge","Dropdown","DropdownButton","title","onSelect","eventKey","placeholder","map","encodedAddress","encodeURI","addressToUse","SpinSpinner","styled","FaSpinner","EmeraldDropzone","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","data-testid","years","Array","from","val","index","times","CreateOrder","nameOrders","setNameOrders","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","porchDropoff","setPorchDropoff","description","descriptionSet","trafficSource","trafficSourceSet","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","imageUrl","setImageUrl","isPickupClicked","setIsPickupClicked","usePlacesAutocomplete","requestOptions","debounce","suggestions","setValue","clearSuggestions","location","filteredEditOrder","deliveryDateStart","deliveryDateEnd","user","ref","useOnclickOutside","handleInput","getGeocode","results","getZipCode","zip","renderSuggestions","suggestion","place_id","structured_formatting","main_text","secondary_text","renderNameSuggestions","handleNameSelect","onChangeName","regExName","isFormValidated","onChangeAddress","onChangeCity","onChangeState","onChangeZipCode","onChangeOrderType","onChangeOrderStatus","onClickPickup","onClickPlus","onClickMinus","onChangeQuantity","onChangePrice","onChangeDescription","onChangeTrafficSource","onChangeDeliveryMonth","newDate","onChangeDeliveryDay","onChangeDeliveryYear","onChangeBeginTime","insertOrder","trim","clearFields","alert","GetUploadImage","files","imageUrlAzure","sort","Group","listStyleType","paddingLeft","disabled","Accordion","Toggle","Header","Collapse","Body","display","alignItems","min","step","controlId","Check","Input","isValid","checked","numberOfDays","everyYear","keyIndex","rows","CalendarOrders","selectedDay","daySet","calenderOrders","setCalenderOrders","showAllOrders","setShowAllOrders","tileClassName","view","find","x","onClickDayDate","onChangeShowAllOrders","onClickDay","calendarType","background","upcomingOrder","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","thumbnail","alt","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","video1","autoPlay","loop","muted","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","FourOhFour","logoutBtnStyles","boxShadow","borderRadius","top","transform","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","welcomeNotification","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8bafd16a.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect, useLayoutEffect, useState } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    OneSignal: any;\n  }\n}\n\nexport enum AtTheBoothBakery_Type {\n  Delivered = 'Delivered',\n  Ordered = 'ordered',\n  Today = 'Today',\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n  PorchDropoff: boolean;\n  Employee: number;\n  EmployeeName: string | undefined;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\n\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\n\nexport function isValidDate(day: any, month: any, year: any): boolean {\n  return day <= calculateDays(month, year);\n}\n\nexport function useMediaQuery(): number[] {\n  const [screenSize, setScreenSize] = useState([0, 0]);\n\n  useLayoutEffect(() => {\n    function updateScreenSize(): void {\n      setScreenSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateScreenSize);\n    updateScreenSize();\n    return () => window.removeEventListener('resize', updateScreenSize);\n  }, []);\n\n  return screenSize;\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\n\nconst BoothNavbar = (): JSX.Element => (\n  <Navbar bg='dark' variant='dark'>\n    <Navbar.Brand href='#home'>At The Booth Admin</Navbar.Brand>\n    <Nav className='mr-auto'>\n      <Link to='/'>\n        <Nav.Link href='#home'>\n          <FcHome size={28} style={{ marginBottom: '3px', marginRight: '4px' }} />\n          Home\n        </Nav.Link>\n      </Link>\n      <Link to='/Calendar'>\n        <Nav.Link href='#features'>\n          <FcCalendar size={28} style={{ marginBottom: '3px', marginRight: '4px' }} />\n          Calender\n        </Nav.Link>\n      </Link>\n      <Link to='/Create'>\n        <Nav.Link href='#pricing'>\n          <AiOutlineForm\n            size={28}\n            color='Black'\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />\n          Create Order\n        </Nav.Link>\n      </Link>\n      <Link to='/Orders'>\n        <Nav.Link href='#orders'>\n          <BiCookie\n            size={28}\n            color='#ef89bb'\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />\n          Orders\n        </Nav.Link>\n      </Link>\n      <Link to='/Map'>\n        <Nav.Link href='#orders'>\n          <FaMap\n            size={28}\n            color='Blue'\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />\n          Map\n        </Nav.Link>\n      </Link>\n      <Link to='/ordertypes'>\n        <Nav.Link href='#orders'>\n          <FaClipboardList\n            size={28}\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />{' '}\n          Order Types\n        </Nav.Link>\n      </Link>\n    </Nav>\n  </Navbar>\n);\n\nexport default BoothNavbar;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Jumbotron, Form, ListGroup } from 'react-bootstrap';\nimport {\n  Order,\n  useEmeraldContext,\n  Orders,\n  useMediaQuery,\n} from '../Interfaces/EmeraldTypes';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap } from 'react-icons/fa';\nimport { Line } from 'react-chartjs-2';\nimport BoothNavbar from '../Common/BoothNavbar';\n\nconst motivationalQuotes = [\n  {\n    quote: 'The hard days are what make you stronger.',\n    name: 'Aly Raisman',\n  },\n  {\n    quote: 'Keep your eyes on the stars, and your feet on the ground.',\n    name: 'Theodore Roosevelt',\n  },\n  {\n    quote:\n      'You can waste your lives drawing lines. Or you can live your life crossing them',\n    name: 'Shonda Rhimes',\n  },\n  {\n    quote: 'All our dreams can come true, if we have the courage to pursue them.',\n    name: 'Walt Disney',\n  },\n  {\n    quote: 'The secret of getting ahead is getting started.',\n    name: 'Mark Twain',\n  },\n  {\n    quote:\n      'I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.',\n    name: 'Michael Jordan',\n  },\n  {\n    quote:\n      'Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.',\n    name: 'Mary Kay Ash',\n  },\n  { quote: 'It’s hard to beat a person who never gives up.', name: 'Babe Ruth' },\n  { quote: 'If opportunity doesn’t knock, build a door.', name: 'Kurt Cobain' },\n  { quote: 'Work hard in silence, let your success be the noise.', name: 'Frank Ocean' },\n  { quote: 'Hard work beats talent when talent doesn’t work hard.', name: 'Tim Notke' },\n  { quote: 'Don’t limit your challenges. Challenge your limits.', name: 'Unknown' },\n  {\n    quote: 'Start where you are. Use what you have. Do what you can.',\n    name: 'Arthur Ashe',\n  },\n];\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nconst data = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n  datasets: [\n    {\n      label: '# of Orders',\n      data: [0, 1, 16, 31, 19, 4],\n      fill: false,\n      backgroundColor: 'rgb(0, 123, 255)',\n      borderColor: 'rgba(0, 123, 255, 0.2)',\n    },\n  ],\n};\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\ninterface Props {\n  userName: string;\n}\n\nfunction Dashboard(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [dashboardOrders, setDashboardOrders] = React.useState<Orders>(orders);\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    if (orders && orders.length > 0) {\n      switch (props.userName) {\n        case 'Ariel Castillo':\n          setDashboardOrders(\n            orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          );\n          break;\n        case 'Paul Castillo':\n          setDashboardOrders(\n            orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          );\n          break;\n        case 'Jordan Hebert':\n          setDashboardOrders(\n            orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n          );\n          break;\n        default:\n          setDashboardOrders(orders);\n      }\n    }\n  }, []);\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n    if (e.target.value === 'Ariel') {\n      setDashboardOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel'));\n    } else if (e.target.value === 'Jordan') {\n      setDashboardOrders(orders.filter((empOrder) => empOrder.EmployeeName === 'Jordan'));\n    } else if (e.target.value === 'All') {\n      setDashboardOrders(orders);\n    } else {\n      setDashboardOrders([]);\n    }\n  }\n\n  const randNumber = Math.floor(Math.random() * motivationalQuotes.length);\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const deliveredOrders = dashboardOrders.filter((order: Order) => {\n    return order.OrderStatus === 'Delivered';\n  });\n\n  // console.log('delivered orders', deliveredOrders);\n  const sumCost = dashboardOrders.reduce((cost: number, entry: Order) => {\n    return cost + (parseFloat(entry.Price !== undefined ? entry.Price : '0') || 0);\n  }, 0 as number);\n\n  const orderedButNotDeliveredandNotCancelled = dashboardOrders.filter((order: Order) => {\n    return order.OrderStatus === 'Ordered';\n  });\n\n  const userNameString = props.userName.split(' ')[0];\n\n  return width < 769 ? (\n    <Container fluid>\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              style={{ marginBottom: '10px' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{dashboardOrders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  ) : (\n    <Container>\n      <BoothNavbar />\n      <Row className='justify-content-center h-100' style={{ marginTop: '5px' }}>\n        <Col>\n          <Jumbotron style={{ backgroundColor: 'white' }}>\n            <h2\n              className='text-center'\n              style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n            >\n              Welcome {userNameString}!\n            </h2>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className='justify-content-center'>\n        <Col>\n          <h3>Motivational Quote!</h3>\n          <figure className='quote'>\n            <blockquote\n              style={{ fontSize: 'large' }}\n            >{`\"${motivationalQuotes[randNumber].quote}\"`}</blockquote>\n            <figcaption\n              style={{\n                textAlign: 'right',\n                fontSize: 'larger',\n              }}\n            >\n              <cite>{`- ${motivationalQuotes[randNumber].name} `}</cite>\n            </figcaption>\n          </figure>\n          <br></br>\n          <h3>Links</h3>\n          <ListGroup style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xx-large' }}>\n            <ListGroup.Item>\n              <Link to='/Calendar'>\n                <FcCalendar size={32} style={{ marginRight: '5px' }} />\n                Calender\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Link to='/Orders'>\n                <BiCookie size={32} color='#ef89bb' style={{ marginRight: '5px' }} />\n                Orders\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Link to='/Create'>\n                <AiOutlineForm size={32} color='Black' style={{ marginRight: '5px' }} />\n                Create Order\n              </Link>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Link to='/Gmap'>\n                <FaMap size={32} style={{ marginRight: '5px' }} />\n                Map\n              </Link>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col>\n          <Jumbotron\n            style={{\n              backgroundColor: 'white',\n              width: '400px',\n              margin: 'auto',\n              marginTop: '40px',\n            }}\n          >\n            <h5\n              style={{\n                fontWeight: 'bold',\n                fontStyle: 'oblique',\n                textDecoration: 'underline',\n              }}\n            >\n              At The Booth Bakery - Dashboard\n            </h5>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              style={{ marginBottom: '10px' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n            <span>\n              Total <Link to='/orders'>Orders</Link>: 📝{dashboardOrders.length}\n            </span>\n            <br />\n            <span>\n              Total Paid:\n              <span style={{ color: 'green', marginLeft: '5px', fontWeight: 'bold' }}>\n                💰{formatter.format(sumCost)}\n              </span>\n            </span>\n            <br></br>\n            Total Deliveries: 🚚<span>{deliveredOrders.length}</span>\n            <br />\n            <hr />\n            <span>\n              Currently Ordered:\n              <span style={{ marginLeft: '5px' }}>\n                ✔️{orderedButNotDeliveredandNotCancelled.length}\n              </span>\n            </span>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '5px' }}>\n        <Col style={{ fontSize: 'larger' }}>\n          <h3>At The Booth - Orders</h3>\n          <Line data={data} options={options} type='line' className='orderslinechart' />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext, useMediaQuery } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    //a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n      PorchDropoff: props.order.PorchDropoff,\n      Employee: props.order.Employee,\n      EmployeeName: props.order.EmployeeName,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n\n  return width < 769 ? (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ marginRight: '5px' }}>\n              {props.order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n            </span>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  ) : (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n        height: props.parent === 'calender' ? '186px' : '253px',\n        width: props.parent === 'calender' ? '430px' : '790px',\n        marginTop: 'auto',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n      }}\n      className='text-center'\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ marginRight: '5px' }}>\n              {props.order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n            </span>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Jumbotron,\n  Dropdown,\n  DropdownButton,\n} from 'react-bootstrap';\nimport moment from 'moment';\n// import FlipMove from 'react-flip-move';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport {\n  useEmeraldContext,\n  AtTheBoothBakery_Type,\n  useMediaQuery,\n} from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\nimport BoothNavbar from './Common/BoothNavbar';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [displayOrders, setDisplayOrders] = useState(orders);\n  const [filterType, setFilterType] = useState<string>('Delivered');\n  const [width] = useMediaQuery();\n\n  const handleSelect = (e: any) => {\n    setFilterType(e);\n\n    let atbOrders = [];\n\n    switch (e) {\n      case AtTheBoothBakery_Type.Delivered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Delivered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Ordered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Ordered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Today:\n        // eslint-disable-next-line no-case-declarations\n        const today = new Date();\n\n        atbOrders = orders\n          .filter((day) => {\n            if (today) {\n              if (\n                moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                moment(today).format('MM-DD-YYYY')\n              ) {\n                return day;\n              }\n            }\n          })\n          .filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          );\n        break;\n      default:\n        atbOrders = orders;\n    }\n\n    setDisplayOrders(atbOrders);\n  };\n\n  const onSearchKey = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const regExOrder = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return (\n        (order.Name && order.Name.match(regExOrder)) ||\n        (order.Address && order.Address.match(regExOrder))\n      );\n    });\n\n    setDisplayOrders(searchedOrders);\n  };\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  return width < 769 ? (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown style={{ marginBottom: '5px' }}>\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            style={{ marginTop: '5px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  ) : (\n    <Container style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <BoothNavbar />\n          <Jumbotron style={{ marginTop: '5px' }}>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown\n            className='text-right'\n            style={{ marginBottom: '5px', marginRight: '250px' }}\n          >\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            className='float-left'\n            style={{ marginTop: '5px', marginLeft: '173px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Jumbotron,\n  Form,\n  Button,\n  Accordion,\n  Card,\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n  Orders,\n  useMediaQuery,\n} from '../Interfaces/EmeraldTypes';\nimport BoothNavbar from '../Common/BoothNavbar';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [nameOrders, setNameOrders] = React.useState<Orders>([]);\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [porchDropoff, setPorchDropoff] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  // const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateMonthEndValidated,\n  //   setDeliveryDateMonthEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateDayEndValidated,\n  //   setDeliveryDateDayEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateYearEndValidated,\n  //   setdeliveryDateYearEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  // const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [isPickupClicked, setIsPickupClicked] = React.useState<boolean>(false);\n  const [width] = useMediaQuery();\n\n  const {\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n\n      console.log('order editing', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        setIsSubmitDisabled(false);\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n        setPorchDropoff(filteredEditOrder[0].PorchDropoff);\n        setEmployee(filteredEditOrder[0].EmployeeName);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        // console.log('start time', deliveryDateStart.format('HH:mm A'));\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm A'));\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm A'));\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      setEmployee('Ariel');\n    } else {\n      setEmployee('Jordan');\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    // a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  const renderNameSuggestions = (): JSX.Element[] =>\n    nameOrders.map((suggestion) => {\n      return (\n        <li key={suggestion.Id} onClick={(e) => handleNameSelect(e, suggestion)}>\n          🍪<strong>{suggestion.Name}</strong> - <small>{suggestion.Address}</small>\n        </li>\n      );\n    });\n\n  const handleNameSelect = (e: React.MouseEvent, order: Order): void => {\n    e.preventDefault();\n    nameSet(order.Name);\n    addressSet(order.Address);\n    citySet(order.City);\n    stateSet(order.State);\n    zipCodeSet(order.ZipCode);\n\n    setValue(`${order.Address} ${order.City},${order.State} ${order.ZipCode}`);\n    setNameOrders([]);\n  };\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n\n    const regExName = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return order.Name && order.Name.match(regExName);\n    });\n\n    setNameOrders(searchedOrders);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  // function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n  //   e.preventDefault();\n  //   areaSet(e.target.value);\n  // }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPickup(e: React.MouseEvent): void {\n    e.preventDefault();\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      addressSet('13819 Wood Breeze');\n      citySet('San Antonio');\n      stateSet('Texas');\n      zipCodeSet('78217');\n    } else if (props.user === 'jbooth6985@gmail.com') {\n      addressSet('2633 Gallant Fox Drive');\n      citySet('Schertz');\n      stateSet('Texas');\n      zipCodeSet('78108');\n    }\n\n    setIsPickupClicked(!isPickupClicked);\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeQuantity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    quantitySet(Number(e.target.value));\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n\n    beginTimeSet(e.target.value);\n    endTimeSet(e.target.value);\n\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  // function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryMonthEndSet(e.target.value);\n  //   if (deliveryYearEnd !== undefined) {\n  //     daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n  //   }\n  //   if (e.target.value !== 'MM' && e.target.value !== undefined) {\n  //     setDeliveryDateMonthEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  // function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryDayEndSet(e.target.value);\n  //   if (e.target.value !== 'DD' && e.target.value !== undefined) {\n  //     setDeliveryDateDayEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  // function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   endTimeSet(e.target.value);\n  //   if (e.target.value !== 'Select Time') {\n  //     setEndTimeValidated(true);\n  //   }\n  // }\n\n  // function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryYearEndSet(e.target.value);\n  //   if (deliveryMonthEnd !== undefined) {\n  //     daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n  //   }\n  //   if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n  //     setdeliveryDateYearEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      // deliveryDateMonthEndValidated &&\n      // deliveryDateDayEndValidated &&\n      // deliveryDateYearEndValidated &&\n      // endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name.trim(),\n      Area: area === undefined ? ' ' : area.trim(),\n      Address: address === undefined ? ' ' : address.trim(),\n      City: city === undefined ? ' ' : city.trim(),\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode.trim(),\n      OrderType: orderType === undefined ? ' ' : orderType.trim(),\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus.trim(),\n      Quantity: quantity,\n      Price: price === undefined ? '0' : price,\n      Description: description === undefined ? ' ' : description.trim(),\n      DeliveryDate: `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`,\n      DeliveryDateEnd: `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`,\n      OrderDate: new Date(),\n      PrePaid: prepaid,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource.trim(),\n      User: props.user === undefined ? ' ' : props.user.trim(),\n      CreatedBy: props.user === undefined ? ' ' : props.user.trim(),\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl.trim(),\n      PorchDropoff: porchDropoff,\n      Employee: 1,\n      EmployeeName: employee,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n    setValue('');\n    setPorchDropoff(false);\n    prepaidSet(false);\n    setEmployee('Select Employee');\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return width < 769 ? (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {name && name.length > 0 && (\n            <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n          )}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Button\n            variant={isPickupClicked ? `primary` : 'secondary'}\n            size='sm'\n            style={{ marginLeft: '5px' }}\n            onClick={onClickPickup}\n          >\n            {isPickupClicked ? `Enter Address` : 'Pickup'}\n          </Button>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={isPickupClicked}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              onChange={onChangeQuantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span\n              className='input-group-addon'\n              style={{\n                display: 'inline-flex',\n                verticalAlign: 'middle',\n                alignItems: 'center',\n              }}\n            >\n              💲\n            </span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check type='checkbox' id='prepaidCheckbox'>\n            <Form.Check.Input\n              type='checkbox'\n              isValid\n              checked={prepaid}\n              onChange={() => prepaidSet(!prepaid)}\n            />\n            <span>💵</span>\n            <Form.Check.Label style={{ color: 'black' }}>PrePaid</Form.Check.Label>\n          </Form.Check>\n\n          <Form.Check type='checkbox' id='porchDropOff'>\n            <Form.Check.Input\n              type='checkbox'\n              isValid\n              checked={porchDropoff}\n              onChange={() => setPorchDropoff(!porchDropoff)}\n            />\n            <span>🚪</span>\n            <Form.Check.Label style={{ color: 'black' }}>Porch Dropoff</Form.Check.Label>\n          </Form.Check>\n        </Form.Group>\n        <Form.Label>Delivery Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Friend-Relatives</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Employee</Form.Label>\n          <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n            <option>Select Employee</option>\n            <option>Ariel</option>\n            <option>Jordan</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  ) : (\n    <Container>\n      <BoothNavbar />\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter name of order'\n                onChange={onChangeName}\n                value={name}\n              />\n              {name && name.length > 0 && (\n                <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n              )}\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Upload Image</Form.Label>\n              <EmeraldDropzone uploadDoc={GetUploadImage} />\n              {uploadFiles !== undefined ? (\n                <ul\n                  style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}\n                >\n                  {uploadFiles.map((file: File) => (\n                    <li key={file.name}>\n                      <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                      <span\n                        style={{\n                          color: '#005ea2',\n                          marginTop: '10px',\n                          verticalAlign: 'bottom',\n                        }}\n                        data-testid='uploadfilename'\n                      >\n                        {file.name}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              ) : null}\n            </Form.Group>\n\n            <div style={{ marginBottom: '10px' }} ref={ref}>\n              <Form.Label>Search Address</Form.Label>\n              <Button\n                variant={isPickupClicked ? `primary` : 'secondary'}\n                size='sm'\n                style={{ marginLeft: '5px' }}\n                onClick={onClickPickup}\n              >\n                {isPickupClicked ? `Enter Address` : 'Pickup'}\n              </Button>\n              <Form.Control\n                type='text'\n                value={value}\n                onChange={handleInput}\n                disabled={isPickupClicked}\n                placeholder='Where are you going?'\n                style={{ width: '100%' }}\n              />\n              {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n              {status === 'OK' && (\n                <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n              )}\n            </div>\n            <Accordion>\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey='0'>\n                  Address Info\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey='0'>\n                  <Card.Body>\n                    <Form.Group>\n                      <Form.Label>Address</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='123 Street'\n                        value={address}\n                        onChange={onChangeAddress}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>City</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='City'\n                        value={city}\n                        onChange={onChangeCity}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>State</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='State'\n                        value={state}\n                        onChange={onChangeState}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>ZipCode</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='12345'\n                        value={zipCode}\n                        onChange={onChangeZipCode}\n                      />\n                    </Form.Group>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <Form.Group>\n              <Form.Label>Order Type</Form.Label>\n              <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n                <option>Select Order Type</option>\n                {orderTypes.map((orderType) => {\n                  return <option key={orderType.Id}>{orderType.Name}</option>;\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Order Status</Form.Label>\n              <Form.Control\n                as='select'\n                onChange={onChangeOrderStatus}\n                value={orderStatus}\n              >\n                <option>Select Order Status</option>\n                <option>Pending</option>\n                <option>Ordered</option>\n                <option>Delivered</option>\n                <option>Cancelled</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quantity</Form.Label>\n              <div>\n                <Form.Control\n                  type='text'\n                  value={quantity}\n                  onChange={onChangeQuantity}\n                  placeholder='1'\n                  style={{ width: '50px', display: 'inline' }}\n                />\n                <Button\n                  style={{\n                    display: 'inline',\n                    marginLeft: '5px',\n                    verticalAlign: 'top',\n                    fontWeight: 'bold',\n                  }}\n                  onClick={onClickPlus}\n                >\n                  +\n                </Button>\n                <Button\n                  style={{\n                    display: 'inline',\n                    marginLeft: '5px',\n                    verticalAlign: 'top',\n                    fontWeight: 'bold',\n                  }}\n                  onClick={onClickMinus}\n                >\n                  -\n                </Button>\n              </div>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>Price</Form.Label>\n              <div className='input-group'>\n                <span\n                  className='input-group-addon'\n                  style={{\n                    display: 'inline-flex',\n                    verticalAlign: 'middle',\n                    alignItems: 'center',\n                  }}\n                >\n                  💲\n                </span>\n                <Form.Control\n                  type='number'\n                  placeholder='10.00'\n                  min='1'\n                  step='0.01'\n                  value={price}\n                  onChange={onChangePrice}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={prepaid}\n                  onChange={() => prepaidSet(!prepaid)}\n                />\n                <span>💵</span>\n                <Form.Check.Label style={{ color: 'black' }}>PrePaid</Form.Check.Label>\n              </Form.Check>\n\n              <Form.Check type='checkbox' id='porchDropOff'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={porchDropoff}\n                  onChange={() => setPorchDropoff(!porchDropoff)}\n                />\n                <span>🚪</span>\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Porch Dropoff\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n            <Form.Label>Delivery Date</Form.Label>\n            <Form.Group>\n              <Form.Control\n                as='select'\n                value={deliveryMonth}\n                onChange={onChangeDeliveryMonth}\n                style={{ width: '78px', display: 'inline' }}\n              >\n                <option value='MM'>MM</option>\n                {[\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                ].map((day) => {\n                  return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n                })}\n              </Form.Control>\n              <Form.Control\n                as='select'\n                id='addDay'\n                value={deliveryDay}\n                onChange={onChangeDeliveryDay}\n                style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n              >\n                <option value='DD'>DD</option>\n                {[\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                  '13',\n                  '14',\n                  '15',\n                  '16',\n                  '17',\n                  '18',\n                  '19',\n                  '20',\n                  '21',\n                  '22',\n                  '23',\n                  '24',\n                  '25',\n                  '26',\n                  '27',\n                  '28',\n                  '29',\n                  '30',\n                  '31',\n                ]\n                  .filter((numberOfDays) => {\n                    return Number(numberOfDays) <= daysLength;\n                  })\n                  .map((day) => {\n                    return (\n                      <option\n                        value={`${day}`}\n                        key={`day-${Number(day)}`}\n                      >{`${day}`}</option>\n                    );\n                  })}\n              </Form.Control>\n              <Form.Control\n                as='select'\n                id='addYear'\n                value={deliveryYear}\n                onChange={onChangeDeliveryYear}\n                style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n              >\n                <option value='YYYY'>YYYY</option>\n                {years.map((everyYear, index) => {\n                  const keyIndex = index;\n                  return (\n                    <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                      {everyYear}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n              <br></br>\n              <Form.Label style={{ marginTop: '10px' }}>Time</Form.Label>\n              <Form.Control\n                as='select'\n                id='beginTimeCtl'\n                value={beginTime}\n                onChange={onChangeBeginTime}\n                style={{ width: '40%' }}\n              >\n                <option>Select Time</option>\n                {times.map((time, index) => {\n                  const keyIndex = index;\n                  return (\n                    <option key={`time-${keyIndex}`} value={time}>\n                      {time}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group style={{ marginTop: '5px' }}>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as='textarea'\n                rows={4}\n                value={description}\n                placeholder='Description here'\n                onChange={onChangeDescription}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Source of Traffic</Form.Label>\n              <Form.Control\n                as='select'\n                onChange={onChangeTrafficSource}\n                value={trafficSource}\n              >\n                <option>Select Traffic</option>\n                <option>3009 Moms group</option>\n                <option>San Antonio Moms group</option>\n                <option>Grocery Facebook Group</option>\n                <option>Facebook</option>\n                <option>Instagram</option>\n                <option>Friend-Relatives</option>\n                <option>Other</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Employee</Form.Label>\n              <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n                <option>Select Employee</option>\n                <option>Ariel</option>\n                <option>Jordan</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n              Submit\n            </Button>\n            <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n              Clear\n            </Button>\n            {isOrderSubmitted ? (\n              <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n            ) : null}\n            <br></br>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge, Form } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order, Orders } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext, useMediaQuery } from './Interfaces/EmeraldTypes';\nimport BoothNavbar from './Common/BoothNavbar';\n\ninterface Props {\n  routeComponentProps: RouteComponentProps;\n  userName: string;\n}\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders, fetchEmeraldOrders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [calenderOrders, setCalenderOrders] = React.useState<Orders>(orders);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [showAllOrders, setShowAllOrders] = React.useState<boolean>(false);\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    fetchEmeraldOrders();\n    // console.log('emerald orders', orders);\n\n    if (orders && orders.length > 0) {\n      switch (props.userName) {\n        case 'Ariel Castillo':\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Ariel');\n          break;\n        case 'Paul Castillo':\n          // console.log(\n          //   'found Paul',\n          //   orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          // );\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Ariel');\n          break;\n        case 'Jordan Hebert':\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Jordan');\n          break;\n        default:\n          setCalenderOrders(\n            orders.filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n          );\n          setEmployee('All');\n      }\n    }\n\n    // console.log('cal orders', calenderOrders);\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        calenderOrders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n\n    if (e.target.value === 'All') {\n      if (showAllOrders) {\n        setCalenderOrders(orders);\n      } else {\n        setCalenderOrders(\n          orders.filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          )\n        );\n      }\n    } else {\n      if (showAllOrders) {\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === e.target.value)\n        );\n      } else {\n        setCalenderOrders(\n          orders\n            .filter((empOrder) => empOrder.EmployeeName === e.target.value)\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n        );\n      }\n    }\n  }\n\n  async function onChangeShowAllOrders(\n    e: React.ChangeEvent<HTMLInputElement>\n  ): Promise<void> {\n    await setShowAllOrders(!showAllOrders);\n    // console.log('checkbox', e.target.value, employee, showAllOrders);\n\n    if (employee === 'All') {\n      if (showAllOrders) {\n        setCalenderOrders(orders);\n      } else {\n        setCalenderOrders(\n          orders.filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          )\n        );\n      }\n    } else {\n      if (showAllOrders) {\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === employee)\n        );\n      } else {\n        setCalenderOrders(\n          orders\n            .filter((empOrder) => empOrder.EmployeeName === employee)\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n        );\n      }\n    }\n  }\n\n  if (orders && orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return width < 769 ? (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calender</h2>\n      </Jumbotron>\n      <Form.Group>\n        <Form.Control\n          as='select'\n          onChange={onChangeEmployee}\n          value={employee}\n          title='Select Employee view.'\n        >\n          <option>Select Employee</option>\n          <option>Ariel</option>\n          <option>Jordan</option>\n          <option>All</option>\n        </Form.Control>\n      </Form.Group>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n        calendarType='US'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={showAllOrders}\n                  onChange={onChangeShowAllOrders}\n                />\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Show all Orders\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? calenderOrders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : calenderOrders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  ) : (\n    <Container style={{ marginTop: '5px' }}>\n      <BoothNavbar />\n      <Jumbotron\n        className='text-center'\n        style={{ backgroundColor: 'white', marginTop: '5px' }}\n      >\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calender</h2>\n      </Jumbotron>\n\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              title='Select Employee view.'\n              style={{ width: '193px', margin: 'auto' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n          </Form.Group>\n          <Calendar\n            onChange={(val) => onChange(val)}\n            value={value}\n            tileClassName={tileClassName}\n            onClickDay={onClickDayDate}\n            calendarType='US'\n            className='centercalendar'\n          />\n        </Col>\n\n        <Col>\n          <span className='text-center'>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={showAllOrders}\n                  onChange={onChangeShowAllOrders}\n                />\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Show all Orders\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </span>\n          {selectedDay === undefined\n            ? calenderOrders\n                .filter((upcomingOrder) => {\n                  const deliveryDate = moment(upcomingOrder.DeliveryDate);\n                  const currentDate = moment();\n\n                  if (deliveryDate > currentDate) {\n                    return upcomingOrder;\n                  }\n                })\n                .map((order: Order) => {\n                  const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                  const encodedAddress = encodeURI(mapAddress);\n                  const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                  return (\n                    <OrderCard\n                      key={order.Id}\n                      routeComponentProps={props.routeComponentProps}\n                      order={order}\n                      address={addressToUse}\n                      parent='calender'\n                    />\n                  );\n                })\n            : calenderOrders\n                .filter((day) => {\n                  if (selectedDay) {\n                    if (\n                      moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                      moment(selectedDay).format('MM-DD-YYYY')\n                    ) {\n                      return day;\n                    }\n                  }\n                })\n                .sort((a: Order, b: Order) => {\n                  if (a.DeliveryDate > b.DeliveryDate) {\n                    return 1;\n                  }\n\n                  return -1;\n                })\n                .map((order: Order) => {\n                  const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                  const encodedAddress = encodeURI(mapAddress);\n                  const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                  return (\n                    <OrderCard\n                      key={order.Id}\n                      routeComponentProps={props.routeComponentProps}\n                      order={order}\n                      address={addressToUse}\n                      parent='calender'\n                    />\n                  );\n                })}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Employee:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n                      </span>\n                      <span style={{ marginLeft: '6px' }}>{order.EmployeeName}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","export default __webpack_public_path__ + \"static/media/AtTheBoothHeading.bb8687eb.mp4\";","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' />\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\nimport Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      // console.log('appid', `${process.env.REACT_APP_ONESIGNAL}`);\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n      //Automatically subscribe to the new_app_version tag\n      // OneSignal.sendTag('new_app_version', 'new_app_version', (tagsSent) => {\n      //   // Callback called when tag has finished sending\n      //   console.log('new_app_version TAG SENT', tagsSent);\n      // })\n      // );\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => (\n                        <CalendarOrders\n                          routeComponentProps={props}\n                          userName={loggedInUserName}\n                        />\n                      )}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}