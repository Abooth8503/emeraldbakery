{"version":3,"sources":["Interfaces/EmeraldTypes.tsx","Common/OrderCard.tsx","Orders.tsx","Common/EmeraldDropzone.tsx","Forms/CreateOrder.tsx","CalendarOrders.tsx","Gmap.tsx","OrderDetail.tsx","GoogleSignInComponent.tsx","Admin/OrderTypeForm.tsx","Nav.tsx","App.tsx","Common/BoothNavbar.tsx"],"names":["AtTheBoothBakery_Type","emeraldGet","request","a","fetch","response","json","body","useOrders","initial","emeraldOrderTypes","React","orders","setOrders","orderTypes","setOrderType","newOrder","setNewOrder","fetchEmeraldOrders","getOrders","Request","process","method","data","console","log","fetchEmeraldOrderTypes","getOrderTypes","getEmeraldOrders","Promise","resolve","length","useEffect","EmeraldContext","useEmeraldContext","EmeraldProvider","children","Provider","value","formatDate","date","withTime","withSlashes","dateF","Date","day","getDate","monthIndex","getMonth","year","getFullYear","time","toLocaleTimeString","calculateDays","month","yearSelected","daysArrayLength","MonthDays","FullMonth","isLeapYear","Number","LeapYear","NonLeapYear","Thirty","useMediaQuery","useState","screenSize","setScreenSize","useLayoutEffect","updateScreenSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Object","freeze","OrderCard","props","uploadFiles","setUploadFiles","message","setMessage","width","selectOrder","id","routeComponentProps","history","push","path","fileName","document","createElement","toDataURL","href","download","appendChild","removeChild","url","then","blob","theBlob","b","lastModifiedDate","name","newFileArray","f","File","blobToFile","URL","createObjectURL","updateBakeryOrder","e","orderStatus","preventDefault","orderContent","Id","order","Name","Area","Address","City","State","ZipCode","OrderType","OrderStatus","Quantity","Price","Description","DeliveryDate","DeliveryDateEnd","OrderDate","PrePaid","TrafficSource","User","CreatedBy","ImageUrl","OrderImageUrl","PorchDropoff","Employee","EmployeeName","payload","FormData","forEach","file","append","JSON","stringify","myInit","resp","status","setTimeout","undefined","replace","Download","mapAddress","beginDeliveryDate","endDeliveryDate","Card","style","marginBottom","padding","border","borderWidth","borderStyle","fontFamily","Row","parent","Col","Img","as","Image","src","fluid","Title","marginRight","fontSize","fontWeight","verticalAlign","role","timeStyle","Text","marginLeft","Button","size","onClick","variant","Form","Label","color","address","height","marginTop","className","sectionStyle","Orders","displayOrders","setDisplayOrders","filterType","setFilterType","handleSelect","atbOrders","Delivered","filter","Ordered","Today","today","moment","format","statusOrder","onSearchKey","regExOrder","RegExp","target","toString","searchedOrders","match","Container","Jumbotron","Badge","Dropdown","DropdownButton","title","onSelect","Item","eventKey","placeholder","onChange","textAlign","map","encodedAddress","encodeURI","addressToUse","BoothNavbar","SpinSpinner","styled","FaSpinner","EmeraldDropzone","isUploading","set","onDrop","useCallback","acceptedFiles","uploadDoc","useDropzone","accept","getRootProps","getInputProps","isDragActive","years","Array","from","val","index","times","CreateOrder","nameOrders","setNameOrders","nameSet","area","areaSet","addressSet","city","citySet","state","stateSet","zipCode","zipCodeSet","orderType","orderTypeSet","orderStatusSet","quantity","quantitySet","price","priceSet","prepaid","prepaidSet","porchDropoff","setPorchDropoff","description","descriptionSet","trafficSource","trafficSourceSet","employee","setEmployee","deliveryMonth","deliveryMonthSet","deliveryDay","deliveryDaySet","deliveryYear","deliveryYearSet","daysLength","daysLengthSet","beginTime","beginTimeSet","deliveryMonthEnd","deliveryMonthEndSet","deliveryDayEnd","deliveryDayEndSet","deliveryYearEnd","deliveryYearEndSet","endTime","endTimeSet","nameValidated","setNameValidated","orderTypeValidated","setOrderTypeValidated","orderStatusValidated","setOrderStatusValidated","quantityValidated","setQuantityValidated","priceValidated","setPriceValidated","trafficSourceValidated","setTrafficSourceValidated","deliveryMonthValidated","setDeliveryMonthValidated","deliveryDayValidated","setDeliveryDayValidated","deliveryYearValidated","setDeliveryYearValidated","beginTimeValidated","setBeginTimeValidated","isSubmitDisabled","setIsSubmitDisabled","isOrderSubmitted","setOrderSubmitted","imageUrl","setImageUrl","isPickupClicked","setIsPickupClicked","usePlacesAutocomplete","requestOptions","debounce","suggestions","setValue","clearSuggestions","location","filteredEditOrder","deliveryDateStart","deliveryDateEnd","user","ref","useOnclickOutside","handleInput","split","getGeocode","results","getZipCode","zip","renderSuggestions","suggestion","place_id","structured_formatting","main_text","secondary_text","renderNameSuggestions","handleNameSelect","onChangeName","regExName","isFormValidated","onChangeAddress","onChangeCity","onChangeState","onChangeZipCode","onChangeOrderType","onChangeOrderStatus","onClickPickup","onClickPlus","onClickMinus","onChangeQuantity","onChangePrice","onChangeDescription","onChangeTrafficSource","onChangeEmployee","onChangeDeliveryMonth","newDate","onChangeDeliveryDay","onChangeDeliveryYear","onChangeBeginTime","insertOrder","trim","clearFields","alert","GetUploadImage","files","imageUrlAzure","sort","backgroundColor","Group","Control","type","listStyleType","paddingLeft","disabled","Accordion","Toggle","Header","Collapse","Body","display","alignItems","min","step","controlId","Check","Input","isValid","checked","numberOfDays","everyYear","keyIndex","rows","CalendarOrders","selectedDay","daySet","calenderOrders","setCalenderOrders","showAllOrders","setShowAllOrders","tileClassName","view","find","x","onClickDayDate","empOrder","onChangeShowAllOrders","userName","onClickDay","calendarType","background","upcomingOrder","margin","labels","labelIndex","GMap","googleMapRef","useRef","setOrdersMap","googleMap","googleMapScript","getElementById","currentDayOrders","initGoogleMap","setMarkers","google","maps","Map","current","center","lat","lng","zoom","addMarker","newMarker","Marker","animation","Animation","DROP","position","label","contentString","infowindow","InfoWindow","content","addListener","open","markerOrders","mark","getLatLng","OrderDetail","isOpen","setIsOpen","handleShowDialog","filteredOrderProp","orderImageUrl","fontStyle","thumbnail","alt","ListGroup","GoogleSignInComponent","loginSuccess","loginFailed","setLoginFailed","WebkitTextStroke","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","responseType","OrderTypeForm","showOrderTypes","setShowOrderTypes","setId","setName","setDescription","saveMessage","setSaveMessage","typeName","staggerDurationBy","duration","leaveAnimation","enterAnimation","appearAnimation","maintainContainerHeight","easing","action","selectedOrderType","ot","orderTypeClicked","ok","Error","error","Nav","closeMenu","onStateChange","handleStateChange","pageWrapId","outerContainerId","to","Dashboard","loadable","FourOhFour","logoutBtnStyles","boxShadow","borderRadius","top","transform","OneSignal","App","googleAccessToken","setGoogleAccessToken","loggedInUserEmail","setLoggedInUserEmail","loggedInUserName","setLoggedInUserName","profileImage","setProfileImage","initConfig","appId","allowLocalhostAsSecureOrigin","promptOptions","slidedown","enabled","actionMessage","acceptButtonText","cancelButtonText","categories","tags","tag","welcomeNotification","SERVICE_WORKER_PARAM","scope","SERVICE_WORKER_PATH","SERVICE_WORKER_UPDATER_PATH","init","componentToDisplay","profileObj","email","tokenId","logoutSuccess","basename","exact","render","component","bottom","renderProps","onLogoutSuccess","roundedCircle","bg","Brand","Link"],"mappings":"ybAaYA,E,+CA0DL,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,iBAAAC,EAAA,sEACkBC,MAAMF,GADxB,cACCG,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,gCA1DKP,K,sBAAAA,E,kBAAAA,E,eAAAA,M,KAiEZ,IAAMQ,EAAY,WAAiE,IAAhEC,EAA+D,uDAA5C,GAAIC,EAAwC,uDAAP,GACzE,EAA4BC,WAAwBF,GAApD,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAmCF,WAA4BD,GAA/D,mBAAOI,EAAP,KAAmBC,EAAnB,KAEA,EAAgCJ,WAAuB,IAAvD,mBAAOK,EAAP,KAAiBC,EAAjB,KAJgF,SAYjEC,IAZiE,2EAYhF,8BAAAf,EAAA,sEAEUgB,EAAY,IAAIC,QAAJ,4EACqDC,4DACrE,CACEC,OAAQ,QALhB,SASuBrB,EAAoBkB,GAT3C,OASUI,EATV,OAWIV,EAAUU,GAXd,gDAaIC,QAAQC,IAAR,MAbJ,0DAZgF,+BA6BjEC,IA7BiE,2EA6BhF,8BAAAvB,EAAA,sEAEUwB,EAAgB,IAAIP,QAAJ,wEAC6CC,4DACjE,CACEC,OAAQ,QALhB,SASuBrB,EAAoB0B,GAT3C,OASUJ,EATV,OAWIR,EAAaQ,GAXjB,gDAaIC,QAAQC,IAAR,MAbJ,0DA7BgF,sBA8ChF,SAASG,IACP,OAAO,IAAIC,SAAQ,SAACC,GACdlB,EAAOmB,OAAS,GAClBD,EAAQlB,MAKd,OAjDAoB,qBAAU,WAGRd,IACAQ,MACC,IA4CI,CACLd,SACAE,aACAE,WACAC,cACAJ,YACAe,mBACAV,uBAIEe,EAAiBtB,gBAAyD,MAEnEuB,EAAoB,kBAAMvB,aAAiBsB,IAEjD,SAASE,EAAT,GAIU,IAHfC,EAGc,EAHdA,SAIA,OACE,cAACH,EAAeI,SAAhB,CAAyBC,MAAO9B,EAAU,IAA1C,SAAgD4B,IAM7C,SAASG,EACdC,EACAC,EACAC,GAEA,IAcMC,EAAQ,IAAIC,KAAKJ,GACjBK,EAAMF,EAAMG,UACZC,EAAaJ,EAAMK,WACnBC,EAAON,EAAMO,cACbC,EAAOR,EAAMS,qBACnB,OAAIX,EAAgB,GAAN,OAAUM,EAAa,EAAvB,YAA4BF,EAA5B,YAAmCI,EAAnC,YAA2CE,GACrDT,EAAmB,GAAN,OAAUK,EAAa,EAAvB,YAA4BF,EAA5B,YAAmCI,GAE9C,GAAN,OAAUJ,EAAV,YAtBmB,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAU0BE,GAA5B,YAA2CE,GA4BtC,SAASI,EAAcC,EAAeC,GAC3C,IAAIC,EAAkB,GACtB,MAAc,KAAVF,GAAiC,KAAjBC,IAIR,OAAVD,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,GACU,OAAVA,EAGAE,EAAkBC,EAAUC,UACT,OAAVJ,IAAuD,IAxB7D,SAAoBC,GAKzB,OAJuBA,EAAe,IAAM,GACnBA,EAAe,MAAQ,GAC3BA,EAAe,MAAQ,EAqBfI,CAAWC,OAAOL,IAC7CC,EAAkBC,EAAUI,SACT,OAAVP,EACTE,EAAkBC,EAAUK,YACT,OAAVR,GAA4B,OAAVA,GAA4B,OAAVA,GAA4B,OAAVA,IAC/DE,EAAkBC,EAAUM,SAlBrBP,EA2BJ,SAASQ,IACd,MAAoCC,mBAAS,CAAC,EAAG,IAAjD,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OATAC,2BAAgB,WACd,SAASC,IACPF,EAAc,CAACG,OAAOC,WAAYD,OAAOE,cAI3C,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIH,EAGT,IAAMT,EAAY,CAAEC,UAAW,GAAIK,OAAQ,GAAID,YAAa,GAAID,SAAU,IAC1Ec,OAAOC,OAAOnB,I,uQCkHCoB,MAvWf,SAAmBC,GACjB,MAAsCnE,WAA4B,IAAlE,mBAAOoE,EAAP,KAAoBC,EAApB,KACA,EAA8BrE,WAAuB,IAArD,mBAAOsE,EAAP,KAAgBC,EAAhB,KACQhE,EAAuBgB,cAAvBhB,mBACR,EAAgB8C,cAATmB,EAAP,oBAUA,SAASC,EAAYC,GACnBP,EAAMQ,oBAAoBC,QAAQC,KAAlC,UAAkDH,GAfR,4CAkB5C,WAAwBI,EAAcC,GAAtC,IAAAvF,EAAA,SAAAA,EAAA,6DACQA,EAAIwF,SAASC,cAAc,KADnC,SAEiBC,EAAUJ,EAAMC,GAFjC,OAEEvF,EAAE2F,KAFJ,OAGE3F,EAAE4F,SAAWL,EACbC,SAASpF,KAAKyF,YAAY7F,GAE1BwF,SAASpF,KAAK0F,YAAY9F,GAN5B,4CAlB4C,sBA2B5C,SAAS0F,EAAUK,EAAaR,GAC9B,OAAOtF,MAAM8F,GACVC,MAAK,SAAC9F,GACL,OAAOA,EAAS+F,UAEjBD,MAAK,SAACC,GAEL,OAKN,SAAoBC,EAAeX,GAEjC,IAAMY,EAASD,EAEfC,EAAEC,iBAAmB,IAAI3D,KACzB0D,EAAEE,KAAOd,EACT,IAAMe,EAAe,GAEfC,EAAI,IAAIC,KAAK,CAACL,GAAIZ,GACxBe,EAAajB,KAAKkB,GAClB1B,EAAeyB,GAhBXG,CAAWR,EAAMV,GACVmB,IAAIC,gBAAgBV,MAkBjC,SAASW,EACPC,EACAC,GAEAD,EAAEE,iBAEF,IAAMC,EAAsB,CAC1BC,GAAItC,EAAMuC,MAAMD,GAChBE,KAAMxC,EAAMuC,MAAMC,KAClBC,KAAMzC,EAAMuC,MAAME,KAClBC,QAAS1C,EAAMuC,MAAMG,QACrBC,KAAM3C,EAAMuC,MAAMI,KAClBC,MAAO5C,EAAMuC,MAAMK,MACnBC,QAAS7C,EAAMuC,MAAMM,QACrBC,UAAW9C,EAAMuC,MAAMO,UACvBC,YAAaZ,EACba,SAAUhD,EAAMuC,MAAMS,SACtBC,MAAOjD,EAAMuC,MAAMU,MACnBC,YAAalD,EAAMuC,MAAMW,YACzBC,aAAcnD,EAAMuC,MAAMY,aAC1BC,gBAAiBpD,EAAMuC,MAAMa,gBAC7BC,UAAWrD,EAAMuC,MAAMc,UACvBC,QAAStD,EAAMuC,MAAMe,QACrBC,cAAevD,EAAMuC,MAAMgB,cAC3BC,KAAMxD,EAAMuC,MAAMkB,UAClBA,UAAWzD,EAAMuC,MAAMkB,UACvBC,SAAU1D,EAAMuC,MAAMmB,SACtBC,cAAe3D,EAAMuC,MAAMoB,cAC3BC,aAAc5D,EAAMuC,MAAMqB,aAC1BC,SAAU7D,EAAMuC,MAAMsB,SACtBC,aAAc9D,EAAMuC,MAAMuB,cAG5BpH,QAAQC,IAAI,UAAW0F,EAAcpC,GAErC,IAAM8D,EAAU,IAAIC,SAEpB/D,EAAYgE,SAAQ,SAACC,GACnBH,EAAQI,OAAO,OAAQD,MAGzBH,EAAQI,OAAO,eAAgBC,KAAKC,UAAUhC,IAE9C,IAAMiC,EAAS,CACb9H,OAAQ,OACRf,KAAMsI,GAGR,IAEmBzI,MAAM,qEAAD,OACiDiB,4DACrE+H,GAGOjD,MAAK,SAACkD,GACO,MAAhBA,EAAKC,QACPpE,EAAW,aAAD,OAAc+B,IACxBsC,YAAW,WACTrI,IACAgE,EAAW,MACV,OAEHA,EAAW,kCACXqE,YAAW,WACTrE,EAAW,MACV,SAGP,MAAO8B,GACPxF,QAAQC,IAAR,sCAA2CuF,KApH/ChF,qBAAU,WACR,IAAMyD,EAAOX,EAAMuC,MAAMoB,cACzB,QAAae,IAAT/D,GAA+B,OAATA,EAAe,CACvC,IAAMC,EAAWD,EAAKgE,QAAQ,WAAY,KATF,sCAUxCC,CAASjE,EAAMC,MAEhB,IAkHH,IAAI+C,EAAgB,GAEdkB,EAAU,UAAM7E,EAAMuC,MAAMG,QAAlB,YAA6B1C,EAAMuC,MAAMI,KAAzC,YAAiD3C,EAAMuC,MAAMK,OAE7C,SAA9B5C,EAAMuC,MAAMoB,eACkB,OAA9B3D,EAAMuC,MAAMoB,oBACkBe,IAA9B1E,EAAMuC,MAAMoB,cAEZA,EACE,sGAEgCe,IAA9B1E,EAAMuC,MAAMoB,gBACdA,EAAgB3D,EAAMuC,MAAMoB,eAGhC,IAAMmB,EAAoB,IAAIhH,KAAKkC,EAAMuC,MAAMY,cACzC4B,EAAkB,IAAIjH,KAAKkC,EAAMuC,MAAMa,iBAE7C,OAAO/C,EAAQ,IACb,cAAC2E,EAAA,EAAD,CAEEC,MAAO,CACLC,aAAc,MACdC,QAAS,MACTC,OAAQ,QACRC,YAAa,MACbC,YAAa,QACbC,WAAY,YARhB,SAWE,eAACC,EAAA,EAAD,WACoB,UAAjBxF,EAAMyF,OACL,cAACC,EAAA,EAAD,UACE,cAACV,EAAA,EAAKW,IAAN,CAAUC,GAAIC,IAAOC,IAAKnC,EAAeoC,OAAO,MAEhD,KAEJ,eAACL,EAAA,EAAD,WACE,eAACV,EAAA,EAAKgB,MAAN,WACE,sBAAMf,MAAO,CAAEgB,YAAa,OAA5B,SAC4B,IAAzBjG,EAAMuC,MAAMsB,SAAiB,kFAAe,sDAE/C,sBAAMoB,MAAO,CAAEiB,SAAU,QAASC,WAAY,QAA9C,SACGnG,EAAMuC,MAAMC,OAEf,uBACA,uBAAMyC,MAAO,CAAEiB,SAAU,QAASE,cAAe,YAAjD,UACGpG,EAAMuC,MAAMqB,aACX,sBAAMyC,KAAK,MAAM,aAAW,OAAOpB,MAAO,CAAEiB,SAAU,QAAtD,0BAGE,KACHlG,EAAMuC,MAAMe,QACX,sBAAM+C,KAAK,MAAM,aAAW,QAAQpB,MAAO,CAAEiB,SAAU,QAAvD,0BAGE,KAVN,UAYMpB,EAAkBxG,mBAAmB,QAAS,CAChDgI,UAAW,cAGf,sBAAMrB,MAAO,CAAEiB,SAAU,WAAzB,kBACA,sBAAMjB,MAAO,CAAEiB,SAAU,QAASE,cAAe,YAAjD,mBACMrB,EAAgBzG,mBAAmB,QAAS,CAC9CgI,UAAW,gBAIjB,eAACtB,EAAA,EAAKuB,KAAN,WACE,sBAAMtB,MAAO,CAAEkB,WAAY,QAA3B,uBACA,sBAAMlB,MAAO,CAAEuB,WAAY,OAA3B,SAAqCxG,EAAMuC,MAAMS,WAC/B,UAAjBhD,EAAMyF,OACL,qCACE,4BAC6Bf,IAA5B1E,EAAMuC,MAAMW,aACblD,EAAMuC,MAAMW,YAAYjG,OAAS,EAC/B,qCACE,sBAAMgI,MAAO,CAAEkB,WAAY,QAA3B,2BACA,+BAAOnG,EAAMuC,MAAMW,iBAEnB,QAEJ,KACJ,uBACA,cAACuD,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAS,kBAAMrG,EAAYN,EAAMuC,MAAMD,KAAzD,kBAGA,cAACmE,EAAA,EAAD,CACEC,KAAK,KACLE,QAAQ,UACR3B,MAAO,CAAEuB,WAAY,OACrBG,QAAS,SAACzE,GAAD,OAAOD,EAAkBC,EAAG,cAJvC,uBAQA,cAACuE,EAAA,EAAD,CACEG,QAAQ,SACRF,KAAK,KACLzB,MAAO,CAAEuB,WAAY,OACrBG,QAAS,SAACzE,GAAD,OAAOD,EAAkBC,EAAG,cAJvC,oBAQC/B,EAAQlD,OAAS,EAChB,cAAC4J,EAAA,EAAKC,MAAN,CACE7B,MAAO,CAAEuB,WAAY,MAAOO,MAAO,UAAWb,SAAU,WAD1D,SAGG/F,IAED,QAEN,eAAC6E,EAAA,EAAKuB,KAAN,CAAWtB,MAAO,CAAEiB,SAAU,UAA9B,UACE,cAAC,IAAD,IACA,mBAAGlF,KAAMhB,EAAMgH,QAAS/B,MAAO,CAAEuB,WAAY,OAA7C,SACG3B,cA/FJ7E,EAAMuC,MAAMD,IAsGnB,cAAC0C,EAAA,EAAD,CAEEC,MAAO,CACLC,aAAc,MACdC,QAAS,MACTC,OAAQ,QACRC,YAAa,MACbC,YAAa,QACbC,WAAY,WACZ0B,OAAyB,aAAjBjH,EAAMyF,OAAwB,QAAU,QAChDpF,MAAwB,aAAjBL,EAAMyF,OAAwB,QAAU,QAC/CyB,UAAW,OACXjB,YAAa,OACbO,WAAY,QAEdW,UAAU,cAfZ,SAiBE,eAAC3B,EAAA,EAAD,WACoB,UAAjBxF,EAAMyF,OACL,cAACC,EAAA,EAAD,UACE,cAACV,EAAA,EAAKW,IAAN,CAAUC,GAAIC,IAAOC,IAAKnC,EAAeoC,OAAO,MAEhD,KAEJ,eAACL,EAAA,EAAD,WACE,eAACV,EAAA,EAAKgB,MAAN,WACE,sBAAMf,MAAO,CAAEgB,YAAa,OAA5B,SAC4B,IAAzBjG,EAAMuC,MAAMsB,SAAiB,kFAAe,sDAE/C,sBAAMoB,MAAO,CAAEiB,SAAU,QAASC,WAAY,QAA9C,SACGnG,EAAMuC,MAAMC,OAEf,uBACA,uBAAMyC,MAAO,CAAEiB,SAAU,QAASE,cAAe,YAAjD,UACGpG,EAAMuC,MAAMqB,aACX,sBAAMyC,KAAK,MAAM,aAAW,OAAOpB,MAAO,CAAEiB,SAAU,QAAtD,0BAGE,KACHlG,EAAMuC,MAAMe,QACX,sBAAM+C,KAAK,MAAM,aAAW,QAAQpB,MAAO,CAAEiB,SAAU,QAAvD,0BAGE,KAVN,UAYMpB,EAAkBxG,mBAAmB,QAAS,CAChDgI,UAAW,cAGf,sBAAMrB,MAAO,CAAEiB,SAAU,WAAzB,kBACA,sBAAMjB,MAAO,CAAEiB,SAAU,QAASE,cAAe,YAAjD,mBACMrB,EAAgBzG,mBAAmB,QAAS,CAC9CgI,UAAW,gBAIjB,eAACtB,EAAA,EAAKuB,KAAN,WACE,sBAAMtB,MAAO,CAAEkB,WAAY,QAA3B,uBACA,sBAAMlB,MAAO,CAAEuB,WAAY,OAA3B,SAAqCxG,EAAMuC,MAAMS,WAC/B,UAAjBhD,EAAMyF,OACL,qCACE,4BAC6Bf,IAA5B1E,EAAMuC,MAAMW,aACblD,EAAMuC,MAAMW,YAAYjG,OAAS,EAC/B,qCACE,sBAAMgI,MAAO,CAAEkB,WAAY,QAA3B,2BACA,+BAAOnG,EAAMuC,MAAMW,iBAEnB,QAEJ,KACJ,uBACA,cAACuD,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAS,kBAAMrG,EAAYN,EAAMuC,MAAMD,KAAzD,kBAGA,cAACmE,EAAA,EAAD,CACEC,KAAK,KACLE,QAAQ,UACR3B,MAAO,CAAEuB,WAAY,OACrBG,QAAS,SAACzE,GAAD,OAAOD,EAAkBC,EAAG,cAJvC,uBAQA,cAACuE,EAAA,EAAD,CACEG,QAAQ,SACRF,KAAK,KACLzB,MAAO,CAAEuB,WAAY,OACrBG,QAAS,SAACzE,GAAD,OAAOD,EAAkBC,EAAG,cAJvC,oBAQC/B,EAAQlD,OAAS,EAChB,cAAC4J,EAAA,EAAKC,MAAN,CACE7B,MAAO,CAAEuB,WAAY,MAAOO,MAAO,UAAWb,SAAU,WAD1D,SAGG/F,IAED,QAEN,eAAC6E,EAAA,EAAKuB,KAAN,CAAWtB,MAAO,CAAEiB,SAAU,UAA9B,UACE,cAAC,IAAD,IACA,mBAAGlF,KAAMhB,EAAMgH,QAAS/B,MAAO,CAAEuB,WAAY,OAA7C,SACG3B,cArGJ7E,EAAMuC,MAAMD,K,QCjPjB8E,EAAe,CACnBF,UAAW,MACX3B,WAAY,YA6LC8B,I,EAAAA,EAxLf,SAAgBrH,GACd,IAAQlE,EAAWsB,cAAXtB,OACR,EAA0CqD,mBAASrD,GAAnD,mBAAOwL,EAAP,KAAsBC,EAAtB,KACA,EAAoCpI,mBAAiB,aAArD,mBAAOqI,EAAP,KAAmBC,EAAnB,KACA,EAAgBvI,cAATmB,EAAP,oBAGMqH,EAAe,SAACxF,GACpBuF,EAAcvF,GAEd,IAAIyF,EAA0B,GAE9B,OAAQzF,GACN,KAAKhH,IAAsB0M,UACzBD,EAAY7L,EAAO+L,QAAO,SAACtF,GACzB,MAA6B,cAAtBA,EAAMQ,eAEf,MACF,KAAK7H,IAAsB4M,QACzBH,EAAY7L,EAAO+L,QAAO,SAACtF,GACzB,MAA6B,YAAtBA,EAAMQ,eAEf,MACF,KAAK7H,IAAsB6M,MAEzB,IAAMC,EAAQ,IAAIlK,KAElB6J,EAAY7L,EACT+L,QAAO,SAAC9J,GACP,GAAIiK,GAEAC,IAAOlK,EAAIoF,cAAc+E,OAAO,eAChCD,IAAOD,GAAOE,OAAO,cAErB,OAAOnK,KAIZ8J,QACC,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,eAElB,MACF,QACE4E,EAAY7L,EAGhByL,EAAiBI,IAGbS,EAAc,SAAClG,GACnB,IAAMmG,EAAa,IAAIC,OAAJ,UAAcpG,EAAEqG,OAAO/K,MAAMgL,YAAc,KACxDC,EAAiB3M,EAAO+L,QAAO,SAACtF,GACpC,OACGA,EAAMC,MAAQD,EAAMC,KAAKkG,MAAML,IAC/B9F,EAAMG,SAAWH,EAAMG,QAAQgG,MAAML,MAI1Cd,EAAiBkB,IAGnB,OAAsB,IAAlB3M,EAAOmB,OACF,oDAIFoD,EAAQ,IACb,eAACsI,EAAA,EAAD,CAAW5C,OAAK,EAACd,MAAOmC,EAAxB,UACE,cAAC5B,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAKyB,UAAU,cAAf,SACE,eAACyB,EAAA,EAAD,WACE,qBAAI3D,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAApD,mBAEE,cAAC2C,EAAA,EAAD,CAAOjC,QAAQ,UAAU3B,MAAO,CAAEuB,WAAY,OAA9C,SACGc,EAAcrK,YAGnB,gCACkB,cAAfuK,EAA6B,gDAASA,KAAqBA,WAMpE,eAAChC,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UACE,cAACoD,EAAA,EAAD,CAAU7D,MAAO,CAAEC,aAAc,OAAjC,SACE,eAAC6D,EAAA,EAAD,CAAgBC,MAAM,gBAAgBC,SAAUvB,EAAhD,UACE,cAACoB,EAAA,EAASI,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACL,EAAA,EAASI,KAAV,CAAeC,SAAS,YAAxB,uBACA,cAACL,EAAA,EAASI,KAAV,CAAeC,SAAS,UAAxB,4BAIN,cAACzD,EAAA,EAAD,UACE,uBACET,MAAO,CAAEiC,UAAW,OACpBkC,YAAY,yBACZC,SAAUjB,SAKhB,qBAAKnD,MAAO,CAAEqE,UAAW,OAAQ/D,WAAY,oBAA7C,SACG+B,EAAciC,KAAI,SAAChH,GAClB,IAAMsC,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEhJ,oBAAqBR,EACrBuC,MAAOA,EACPyE,QAAS0C,EACTjE,OAAO,SAJFlD,EAAMD,YAWrB,eAACqG,EAAA,EAAD,CAAW1D,MAAOmC,EAAlB,UACE,cAAC5B,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,CAAKyB,UAAU,cAAf,UACE,cAACwC,EAAA,EAAD,IACA,eAACf,EAAA,EAAD,CAAW3D,MAAO,CAAEiC,UAAW,OAA/B,UACE,qBAAIjC,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAApD,mBAEE,cAAC2C,EAAA,EAAD,CAAOjC,QAAQ,UAAU3B,MAAO,CAAEuB,WAAY,OAA9C,SACGc,EAAcrK,YAGnB,gCACkB,cAAfuK,EAA6B,gDAASA,KAAqBA,YAMpE,eAAChC,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UACE,cAACoD,EAAA,EAAD,CACE3B,UAAU,aACVlC,MAAO,CAAEC,aAAc,MAAOe,YAAa,SAF7C,SAIE,eAAC8C,EAAA,EAAD,CAAgBC,MAAM,gBAAgBC,SAAUvB,EAAhD,UACE,cAACoB,EAAA,EAASI,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACL,EAAA,EAASI,KAAV,CAAeC,SAAS,YAAxB,uBACA,cAACL,EAAA,EAASI,KAAV,CAAeC,SAAS,UAAxB,4BAIN,cAACzD,EAAA,EAAD,UACE,uBACEyB,UAAU,aACVlC,MAAO,CAAEiC,UAAW,MAAOV,WAAY,SACvC4C,YAAY,yBACZC,SAAUjB,SAKhB,qBAAKnD,MAAO,CAAEqE,UAAW,OAAQ/D,WAAY,oBAA7C,SACG+B,EAAciC,KAAI,SAAChH,GAClB,IAAMsC,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEhJ,oBAAqBR,EACrBuC,MAAOA,EACPyE,QAAS0C,EACTjE,OAAO,SAJFlD,EAAMD,a,+DClMnBsH,EAAcC,YAAOC,YAAPD,CAAH,gRA0DFE,MAvCf,SAAyB/J,GACvB,MAA2Bb,oBAAS,GAApC,mBAAO6K,EAAP,KAAoBC,EAApB,KACMC,EAASC,uBAAY,SAACC,GACG,IAAzBA,EAAcnN,QAKlB+C,EAAMqK,UAAUD,EAAeH,GAAI,MAClC,IACH,EAAsDK,YAAY,CAChEJ,SACAK,OAAQ,oBAFFC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAUrC,OACE,8CAAKnK,GAAG,aAAgBiK,KAAxB,cACE,qCAAWC,MACVC,EACC,wDAEA,eAAC,WAAD,WACE,cAACjE,EAAA,EAAD,CAAQxB,MAAO,CAAE5E,MAAO,QAAUsG,QAZ1C,SAAqBzE,GACnBA,EAAEE,iBACF6H,GAAI,IAUE,6BAGiB,IAAhBD,EACC,cAACJ,EAAD,CAAa3E,MAAO,CAAEiC,UAAW,OAAS,cAAY,YACpD,aCxBR/I,G,QAAO,IAAIL,MAAOM,eAClBuM,EAAQC,MAAMC,KAAK,IAAID,MAAM,IAAI,SAACE,EAAKC,GAAN,OAAgB5M,EAAO4M,KAExDC,EAAQ,CACZ,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YA03CaC,MAv3Cf,SAAqBjL,GACnB,MAAoCnE,WAAuB,IAA3D,mBAAOqP,EAAP,KAAmBC,EAAnB,KACA,EAAwBtP,gBAAmC6I,GAA3D,mBAAOhD,EAAP,KAAa0J,EAAb,KACA,EAAwBvP,gBAAmC6I,GAA3D,mBAAO2G,EAAP,KAAaC,EAAb,KACA,EAA8BzP,gBAAmC6I,GAAjE,mBAAOsC,EAAP,KAAgBuE,EAAhB,KACA,EAAwB1P,gBAAmC6I,GAA3D,mBAAO8G,EAAP,KAAaC,EAAb,KACA,EAA0B5P,gBAAmC6I,GAA7D,mBAAOgH,EAAP,KAAcC,EAAd,KACA,EAA8B9P,gBAAmC6I,GAAjE,mBAAOkH,EAAP,KAAgBC,EAAhB,KACA,EAAkChQ,gBAAmC6I,GAArE,mBAAOoH,EAAP,KAAkBC,GAAlB,KACA,GAAsClQ,gBAAmC6I,GAAzE,qBAAOvC,GAAP,MAAoB6J,GAApB,MACA,GAAgCnQ,WAAuB,GAAvD,qBAAOoQ,GAAP,MAAiBC,GAAjB,MACA,GAA0BrQ,gBAAmC6I,GAA7D,qBAAOyH,GAAP,MAAcC,GAAd,MACA,GAA8BvQ,YAAwB,GAAtD,qBAAOwQ,GAAP,MAAgBC,GAAhB,MACA,GAAwCzQ,YAAwB,GAAhE,qBAAO0Q,GAAP,MAAqBC,GAArB,MACA,GAAsC3Q,gBAAmC6I,GAAzE,qBAAO+H,GAAP,MAAoBC,GAApB,MACA,GAA0C7Q,gBAAmC6I,GAA7E,qBAAOiI,GAAP,MAAsBC,GAAtB,MACA,GAAgC/Q,WAAmC,mBAAnE,qBAAOgR,GAAP,MAAiBC,GAAjB,MACA,GAA0CjR,gBAAmC6I,GAA7E,qBAAOqI,GAAP,MAAsBC,GAAtB,MACA,GAAsCnR,gBAAmC6I,GAAzE,qBAAOuI,GAAP,MAAoBC,GAApB,MACA,GAAwCrR,gBAAmC6I,GAA3E,qBAAOyI,GAAP,MAAqBC,GAArB,MACA,GAAoCvR,WAAuB,IAA3D,qBAAOwR,GAAP,MAAmBC,GAAnB,MACA,GAAkCzR,gBAAmC6I,GAArE,qBAAO6I,GAAP,MAAkBC,GAAlB,MACA,GAAgD3R,gBAC9C6I,GADF,qBAAO+I,GAAP,MAAyBC,GAAzB,MAGA,GAA4C7R,gBAC1C6I,GADF,qBAAOiJ,GAAP,MAAuBC,GAAvB,MAGA,GAA8C/R,gBAC5C6I,GADF,qBAAOmJ,GAAP,MAAwBC,GAAxB,MAIA,GAA8BjS,gBAAmC6I,GAAjE,qBAAOqJ,GAAP,MAAgBC,GAAhB,MAEA,GAA0CnS,YAAwB,GAAlE,qBAAOoS,GAAP,MAAsBC,GAAtB,MACA,GAAoDrS,YAAwB,GAA5E,qBAAOsS,GAAP,MAA2BC,GAA3B,MACA,GAAwDvS,YAAwB,GAAhF,qBAAOwS,GAAP,MAA6BC,GAA7B,MACA,GAAkDzS,YAAwB,GAA1E,qBAAO0S,GAAP,MAA0BC,GAA1B,MACA,GAA4C3S,YAAwB,GAApE,qBAAO4S,GAAP,MAAuBC,GAAvB,MACA,GAA4D7S,YAC1D,GADF,qBAAO8S,GAAP,MAA+BC,GAA/B,MAGA,GAA4D/S,YAC1D,GADF,qBAAOgT,GAAP,MAA+BC,GAA/B,MAGA,GAAwDjT,YAAwB,GAAhF,qBAAOkT,GAAP,MAA6BC,GAA7B,MACA,GAA0DnT,YACxD,GADF,qBAAOoT,GAAP,MAA8BC,GAA9B,MAGA,GAAoDrT,YAAwB,GAA5E,qBAAOsT,GAAP,MAA2BC,GAA3B,MAcA,GAAgDvT,YAAwB,GAAxE,qBAAOwT,GAAP,MAAyBC,GAAzB,MAEA,GAA8CzT,YAAwB,GAAtE,qBAAO0T,GAAP,MAAyBC,GAAzB,MAEA,GAAsC3T,WAA4B,IAAlE,qBAAOoE,GAAP,MAAoBC,GAApB,MACA,GAAgCrE,gBAAmC6I,GAAnE,qBAAO+K,GAAP,MAAiBC,GAAjB,MACA,GAA8C7T,YAAwB,GAAtE,qBAAO8T,GAAP,MAAwBC,GAAxB,MACA,GAAgB1Q,cAATmB,GAAP,qBAEA,GAKIwP,YAAsB,CACxBC,eAAgB,GAGhBC,SAAU,MARVvS,GADF,GACEA,MADF,MAEEwS,YAAexL,GAFjB,GAEiBA,OAAQ/H,GAFzB,GAEyBA,KACvBwT,GAHF,GAGEA,SACAC,GAJF,GAIEA,iBAQF,GAA+B9S,cAAvBtB,GAAR,GAAQA,OAAQE,GAAhB,GAAgBA,WApF8B,8CAoJ9C,WAAwB2E,EAAcC,GAAtC,IAAAvF,EAAA,SAAAA,EAAA,6DACQA,EAAIwF,SAASC,cAAc,KADnC,SAEiBC,GAAUJ,EAAMC,GAFjC,OAEEvF,EAAE2F,KAFJ,OAGE3F,EAAE4F,SAAWL,EACbC,SAASpF,KAAKyF,YAAY7F,GAE1BwF,SAASpF,KAAK0F,YAAY9F,GAN5B,4CApJ8C,sBA6J9C,SAAS0F,GAAUK,EAAaR,GAC9B,OAAOtF,MAAM8F,GACVC,MAAK,SAAC9F,GACL,OAAOA,EAAS+F,UAEjBD,MAAK,SAACC,GAEL,OAKN,SAAoBC,EAAeX,GAEjC,IAAMY,EAASD,EAEfC,EAAEC,iBAAmB,IAAI3D,KACzB0D,EAAEE,KAAOd,EACT,IAAMe,EAAe,GAEfC,EAAI,IAAIC,KAAK,CAACL,GAAIZ,GACxBe,EAAajB,KAAKkB,GAClB1B,GAAeyB,GAhBXG,CAAWR,EAAMV,GACVmB,IAAIC,gBAAgBV,MA9EjCpE,qBAAU,WACR,QAAiDwH,IAA7C1E,EAAMQ,oBAAoB2P,SAASzE,MAAqB,CAC1D,IAAM0E,EAAoBtU,GAAO+L,QAC/B,SAACtF,GAAD,OAAWA,EAAMD,KAAOtC,EAAMQ,oBAAoB2P,SAASzE,SAK7D,GAFAhP,QAAQC,IAAI,gBAAiByT,GAEzBA,EAAkBnT,OAAS,EAAG,CAChCqS,IAAoB,GACpBlE,EAAQgF,EAAkB,GAAG5N,MAC7B8I,EAAQ8E,EAAkB,GAAG3N,MAC7B8I,EAAW6E,EAAkB,GAAG1N,SAChC+I,EAAQ2E,EAAkB,GAAGzN,MAC7BgJ,EAASyE,EAAkB,GAAGxN,OAC9BiJ,EAAWuE,EAAkB,GAAGvN,SAChCkJ,GAAaqE,EAAkB,GAAGtN,WAClCkJ,GAAeoE,EAAkB,GAAGrN,aACpCmJ,GAAYkE,EAAkB,GAAGpN,UACjCoJ,GAASgE,EAAkB,GAAGnN,OAC9BqJ,GAAW8D,EAAkB,GAAG9M,SAChCkJ,GAAgB4D,EAAkB,GAAGxM,cACrCkJ,GAAYsD,EAAkB,GAAGtM,cAGjC,IAAMuM,EAAoBpI,IAAOmI,EAAkB,GAAGjN,cAEtD6J,GAAiBqD,EAAkBnI,OAAO,OAC1CgF,GAAemD,EAAkBnI,OAAO,OACxCkF,GAAgBiD,EAAkBnI,OAAO,SACzCsF,GAAa6C,EAAkBnI,OAAO,YAGtC,IAAMoI,EAAkBrI,IAAOmI,EAAkB,GAAGhN,iBAQpD,GAPAsK,GAAoB4C,EAAgBpI,OAAO,OAC3C0F,GAAkB0C,EAAgBpI,OAAO,OACzC4F,GAAmBwC,EAAgBpI,OAAO,SAC1C8F,GAAWsC,EAAgBpI,OAAO,YAElC0E,GAAiBwD,EAAkB,GAAG7M,eACtCmJ,GAAe0D,EAAkB,GAAGlN,aAEK,OAAvCkN,EAAkB,GAAGzM,oBACkBe,IAAvC0L,EAAkB,GAAGzM,cACrB,CACA+L,GAAYU,EAAkB,GAAGzM,eACjC,IAAMhD,EAAOyP,EAAkB,GAAGzM,cAClC,QAAae,IAAT/D,GAA+B,OAATA,EAAe,CACvC,IAAMC,EAAWD,EAAKgE,QAAQ,WAAY,KAtIN,uCAuIpCC,CAASjE,EAAMC,MAMJ,sBAAfZ,EAAMuQ,MAA+C,yBAAfvQ,EAAMuQ,KAC9CzD,GAAY,SAEZA,GAAY,YAEb,IAoCH,IAAM0D,GAAMC,aAAkB,WAG5BP,QAGIQ,GAAc,SAACxO,GAEnB+N,GAAS/N,EAAEqG,OAAO/K,OAAO,IAGrBkK,GAAe,SAAC,GAAD,IACnB+E,EADmB,EACnBA,YADmB,OAKf,WAGJwD,GAASxD,GAAa,GACtByD,KAEA,IAAMlJ,EAAUyF,EAAYkE,MAAM,KAC9B3J,EAAQ/J,OAAS,IAEnBsO,EAAWvE,EAAQ,IACnByE,EAAQzE,EAAQ,IAChB2E,EAAS3E,EAAQ,KAInB4J,YAAW,CAAE5J,QAASyF,IACnBpL,MAAK,SAACwP,GAAD,OAAaC,YAAWD,EAAQ,IAAI,MACzCxP,MAAK,SAAC0P,GACO,OAARA,GACFlF,EAAWkF,QAMbC,GAAoB,kBACxBvU,GAAK8M,KAAI,SAAC0H,GACR,IACEC,EAEED,EAFFC,SADF,EAGID,EADFE,sBAAyBC,EAF3B,EAE2BA,UAAWC,EAFtC,EAEsCA,eAEtC,OACE,qBAAmB1K,QAASe,GAAauJ,GAAzC,0BACK,iCAASG,IADd,IACkC,gCAAQC,MADjCH,OAMTI,GAAwB,kBAC5BpG,EAAW3B,KAAI,SAAC0H,GACd,OACE,qBAAwBtK,QAAS,SAACzE,GAAD,OAAOqP,GAAiBrP,EAAG+O,IAA5D,yBACI,iCAASA,EAAWzO,OADxB,MACyC,gCAAQyO,EAAWvO,YADnDuO,EAAW3O,QAMpBiP,GAAmB,SAACrP,EAAqBK,GAC7CL,EAAEE,iBACFgJ,EAAQ7I,EAAMC,MACd+I,EAAWhJ,EAAMG,SACjB+I,EAAQlJ,EAAMI,MACdgJ,EAASpJ,EAAMK,OACfiJ,EAAWtJ,EAAMM,SAEjBoN,GAAS,GAAD,OAAI1N,EAAMG,QAAV,YAAqBH,EAAMI,KAA3B,YAAmCJ,EAAMK,MAAzC,YAAkDL,EAAMM,UAChEsI,EAAc,KAGhB,SAASqG,GAAatP,GACpBA,EAAEE,iBACFgJ,EAAQlJ,EAAEqG,OAAO/K,OAEjB,IAAMiU,EAAY,IAAInJ,OAAJ,UAAcpG,EAAEqG,OAAO/K,MAAMgL,YAAc,KACvDC,EAAiB3M,GAAO+L,QAAO,SAACtF,GACpC,OAAOA,EAAMC,MAAQD,EAAMC,KAAKkG,MAAM+I,MAGxCtG,EAAc1C,QACD/D,IAAThD,IACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMzE,QAAS,GACjBiR,IAAiB,GAGrBwD,KAQF,SAASC,GAAgBzP,GACvBA,EAAEE,iBACFmJ,EAAWrJ,EAAEqG,OAAO/K,OAGtB,SAASoU,GAAa1P,GACpBA,EAAEE,iBACFqJ,EAAQvJ,EAAEqG,OAAO/K,OAGnB,SAASqU,GAAc3P,GACrBA,EAAEE,iBACFuJ,EAASzJ,EAAEqG,OAAO/K,OAGpB,SAASsU,GAAgB5P,GACvBA,EAAEE,iBACFyJ,EAAW3J,EAAEqG,OAAO/K,OAGtB,SAASuU,GAAkB7P,GACzBA,EAAEE,iBACF2J,GAAa7J,EAAEqG,OAAO/K,YAEJkH,IAAdoH,IACW,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW7O,QAAS,GACtBmR,IAAsB,GAG1BsD,KAGF,SAASM,GAAoB9P,GAC3BA,EAAEE,iBACF4J,GAAe9J,EAAEqG,OAAO/K,YAEJkH,IAAhBvC,KACa,OAAXA,SAAW,IAAXA,QAAA,EAAAA,GAAalF,QAAS,GACxBqR,IAAwB,GAG5BoD,KAGF,SAASO,GAAc/P,GACrBA,EAAEE,iBAEiB,sBAAfpC,EAAMuQ,MAA+C,yBAAfvQ,EAAMuQ,MAC9ChF,EAAW,qBACXE,EAAQ,eACRE,EAAS,SACTE,EAAW,UACa,yBAAf7L,EAAMuQ,OACfhF,EAAW,0BACXE,EAAQ,WACRE,EAAS,SACTE,EAAW,UAGb+D,IAAoBD,IAGtB,SAASuC,GAAYhQ,GACnBA,EAAEE,iBACF8J,GAAYD,GAAW,QAENvH,IAAbuH,IACFuC,IAAqB,GAEvBkD,KAGF,SAASS,GAAajQ,GACpBA,EAAEE,iBACF8J,GAAYD,GAAW,QAENvH,IAAbuH,IACFuC,IAAqB,GAEvBkD,KAGF,SAASU,GAAiBlQ,GACxBA,EAAEE,iBACF8J,GAAYpN,OAAOoD,EAAEqG,OAAO/K,QAG9B,SAAS6U,GAAcnQ,GACrBA,EAAEE,iBACFgK,GAASlK,EAAEqG,OAAO/K,YAEJkH,IAAVyH,IACFuC,IAAkB,GAEpBgD,KAGF,SAASY,GAAoBpQ,GAC3BA,EAAEE,iBACFsK,GAAexK,EAAEqG,OAAO/K,OAG1B,SAAS+U,GAAsBrQ,GAC7BA,EAAEE,iBACFwK,GAAiB1K,EAAEqG,OAAO/K,YACHkH,IAAnBxC,EAAEqG,OAAO/K,OACXoR,IAA0B,GAE5B8C,KAGF,SAASc,GAAiBtQ,GACxBA,EAAEE,iBACF0K,GAAY5K,EAAEqG,OAAO/K,OAGvB,SAASiV,GAAsBvQ,GAC7BA,EAAEE,iBACF,IAAMsQ,EAAUxQ,EAAEqG,OAAO/K,MACzBwP,GAAiB9K,EAAEqG,OAAO/K,OAC1BkQ,GAAoBxL,EAAEqG,OAAO/K,YACRkH,IAAjByI,IACFG,GAAc/O,YAAcmU,EAASvF,KAEhB,OAAnBjL,EAAEqG,OAAO/K,YAAqCkH,IAAnBxC,EAAEqG,OAAO/K,OACtCsR,IAA0B,GAE5B4C,KAGF,SAASiB,GAAoBzQ,GAC3BA,EAAEE,iBACF8K,GAAehL,EAAEqG,OAAO/K,OACxBoQ,GAAkB1L,EAAEqG,OAAO/K,OACJ,OAAnB0E,EAAEqG,OAAO/K,YAAqCkH,IAAnBxC,EAAEqG,OAAO/K,OACtCwR,IAAwB,GAE1B0C,KAGF,SAASkB,GAAqB1Q,GAC5BA,EAAEE,iBACFgL,GAAgBlL,EAAEqG,OAAO/K,OACzBsQ,GAAmB5L,EAAEqG,OAAO/K,YACNkH,IAAlBqI,IACFO,GAAc/O,YAAcwO,GAAe7K,EAAEqG,OAAO/K,QAE/B,SAAnB0E,EAAEqG,OAAO/K,YAAuCkH,IAAnBxC,EAAEqG,OAAO/K,OACxC0R,IAAyB,GAE3BwC,KAGF,SAASmB,GAAkB3Q,GACzBA,EAAEE,iBAEFoL,GAAatL,EAAEqG,OAAO/K,OACtBwQ,GAAW9L,EAAEqG,OAAO/K,OAEG,gBAAnB0E,EAAEqG,OAAO/K,OACX4R,IAAsB,GA6C1B,SAASsC,KAkBLpC,MAhBArB,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IACAE,IAKAE,KAQJ,SAASyD,GAAY5Q,GACnBA,EAAEE,iBAEF,IAAMC,EAAsB,CAC1BC,QAC+CoC,IAA7C1E,EAAMQ,oBAAoB2P,SAASzE,MAC/B,EACA5M,OAAOkB,EAAMQ,oBAAoB2P,SAASzE,OAChDlJ,UAAekC,IAAThD,EAAqB,IAAMA,EAAKqR,OACtCtQ,UAAeiC,IAAT2G,EAAqB,IAAMA,EAAK0H,OACtCrQ,aAAqBgC,IAAZsC,EAAwB,IAAMA,EAAQ+L,OAC/CpQ,UAAe+B,IAAT8G,EAAqB,IAAMA,EAAKuH,OACtCnQ,WAAiB8B,IAAVgH,EAAsB,IAAMA,EAAMqH,OACzClQ,aAAqB6B,IAAZkH,EAAwB,IAAMA,EAAQmH,OAC/CjQ,eAAyB4B,IAAdoH,EAA0B,IAAMA,EAAUiH,OACrDhQ,iBAA6B2B,IAAhBvC,GAA4B,IAAMA,GAAY4Q,OAC3D/P,SAAUiJ,GACVhJ,WAAiByB,IAAVyH,GAAsB,IAAMA,GACnCjJ,iBAA6BwB,IAAhB+H,GAA4B,IAAMA,GAAYsG,OAC3D5P,aAAa,GAAD,OAAK4J,GAAL,YAAsBE,GAAtB,YAAqCE,GAArC,YAAqDI,IACjEnK,gBAAgB,GAAD,OAAKqK,GAAL,YAAyBE,GAAzB,YAA2CE,GAA3C,YAA8DE,IAC7E1K,UAAW,IAAIvF,KACfwF,QAAS+I,GACT9I,mBAAiCmB,IAAlBiI,GAA8B,IAAMA,GAAcoG,OACjEvP,UAAqBkB,IAAf1E,EAAMuQ,KAAqB,IAAMvQ,EAAMuQ,KAAKwC,OAClDtP,eAA0BiB,IAAf1E,EAAMuQ,KAAqB,IAAMvQ,EAAMuQ,KAAKwC,OACvDrP,SAAU,GACVC,mBAA4Be,IAAb+K,GAAyB,IAAMA,GAASsD,OACvDnP,aAAc2I,GACd1I,SAAU,EACVC,aAAc+I,IAGhBnQ,QAAQC,IAAI,UAAW0F,GAEvB,IAAM0B,EAAU,IAAIC,SAEpB/D,GAAYgE,SAAQ,SAACC,GACnBH,EAAQI,OAAO,OAAQD,MAGzBH,EAAQI,OAAO,eAAgBC,KAAKC,UAAUhC,IAE9C,IAAMiC,EAAS,CACb9H,OAAQ,OACRf,KAAMsI,GAGR,IAEE,IAAMxI,EAAWD,MAAM,qEAAD,OACiDiB,4DACrE+H,GAEFkL,IAAkB,GAElBjU,EAAS8F,MAAK,SAACkD,GACO,MAAhBA,EAAKC,OACPC,YAAW,WACTuO,KACAxD,IAAkB,KACjB,KAEHyD,MAAM,sDAAD,OAAuD1O,EAAKC,YAGrE,MAAOtC,GACPxF,QAAQC,IAAR,sCAA2CuF,KAI/C,SAAS8Q,KACP5H,EAAQ,IACRE,EAAQ,IACRC,EAAW,IACXE,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXE,GAAa,qBACbC,GAAe,uBACfE,GAAY,GACZE,GAAS,IACTY,GAAiB,MACjBE,GAAe,MACfE,GAAgB,QAChBM,GAAoB,MACpBE,GAAkB,MAClBE,GAAmB,QACnBN,GAAa,eACbQ,GAAW,eACXpB,GAAiB,kBACjB1M,GAAe,IACfwM,GAAe,IACfuD,GAAS,IACTzD,IAAgB,GAChBF,IAAW,GACXQ,GAAY,mBAGd,SAASoG,GAAeC,GACtBjT,GAAeiT,GACf,IAAMC,EAAa,+EAA2ED,EAAM,GAAGzR,MACvGgO,GAAY0D,GAad,OAVApX,GAAWqX,MAAK,SAAChY,EAAcmG,GAC7B,YAAekD,IAAXrJ,EAAEmH,WAAiCkC,IAAXlD,EAAEgB,MACxBnH,EAAEmH,KAAOhB,EAAEgB,KACN,GAIH,KAGHnC,GAAQ,IACb,eAACsI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW3D,MAAO,CAAEqO,gBAAiB,QAASpM,UAAW,OAAzD,SACE,oBACEC,UAAU,cACVlC,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAFlD,cAIgDxB,IAA7C1E,EAAMQ,oBAAoB2P,SAASzE,MAChC,eACA,iBAIR,eAAC7E,EAAA,EAAD,WACE,eAACA,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,sBACZC,SAAUmI,GACVhU,MAAOkE,IAGRA,GAAQA,EAAKzE,OAAS,GACrB,oBAAIgI,MAAO,CAAEyO,cAAe,QAA5B,SAAuCpC,UAI3C,eAACzK,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,2BACA,cAAC,EAAD,CAAiBuD,UAAW6I,UACXxO,IAAhBzE,GACC,oBAAIgF,MAAO,CAAEyO,cAAe,OAAQC,YAAa,MAAOzM,UAAW,OAAnE,SACGjH,GAAYsJ,KAAI,SAACrF,GAAD,OACf,+BACE,cAAC,IAAD,CAAS6C,MAAM,QAAQL,KAAM,GAAIzB,MAAO,CAAEiC,UAAW,UACrD,sBACEjC,MAAO,CACL8B,MAAO,UACPG,UAAW,OACXd,cAAe,UAEjB,cAAY,iBANd,SAQGlC,EAAKxC,SAVDwC,EAAKxC,WAehB,QAGN,sBAAKuD,MAAO,CAAEC,aAAc,QAAUsL,IAAKA,GAA3C,UACE,cAAC3J,EAAA,EAAKC,MAAN,6BACA,cAACL,EAAA,EAAD,CACEG,QAAS+I,GAAe,UAAe,YACvCjJ,KAAK,KACLzB,MAAO,CAAEuB,WAAY,OACrBG,QAASsL,GAJX,SAMGtC,GAAe,gBAAqB,WAEvC,cAAC9I,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLjW,MAAOA,GACP6L,SAAUqH,GACVkD,SAAUjE,GACVvG,YAAY,uBACZnE,MAAO,CAAE5E,MAAO,UAGN,OAAXmE,IACC,oBAAIS,MAAO,CAAEyO,cAAe,QAA5B,SAAuC1C,UAG3C,cAAC6C,EAAA,EAAD,UACE,eAAC7O,EAAA,EAAD,WACE,cAAC6O,EAAA,EAAUC,OAAX,CAAkBlO,GAAIZ,IAAK+O,OAAQ5K,SAAS,IAA5C,0BAGA,cAAC0K,EAAA,EAAUG,SAAX,CAAoB7K,SAAS,IAA7B,SACE,eAACnE,EAAA,EAAKiP,KAAN,WACE,eAACpN,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,aACZ5L,MAAOwJ,EACPqC,SAAUsI,QAGd,eAAC9K,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,OACZ5L,MAAOgO,EACPnC,SAAUuI,QAGd,eAAC/K,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,oBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,QACZ5L,MAAOkO,EACPrC,SAAUwI,QAGd,eAAChL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,QACZ5L,MAAOoO,EACPvC,SAAUyI,kBAOtB,eAACjL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,yBACA,eAACD,EAAA,EAAK2M,QAAN,CAAc5N,GAAG,SAASyD,SAAU0I,GAAmBvU,MAAOsO,EAA9D,UACE,uDACC9P,GAAWuN,KAAI,SAACuC,GACf,OAAO,iCAA4BA,EAAUtJ,MAAzBsJ,EAAUxJ,aAIpC,eAACuE,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,2BACA,eAACD,EAAA,EAAK2M,QAAN,CAAc5N,GAAG,SAASyD,SAAU2I,GAAqBxU,MAAO2E,GAAhE,UACE,yDACA,6CACA,6CACA,+CACA,qDAGJ,eAAC0E,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,uBACA,gCACE,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLjW,MAAOyO,GACP5C,SAAU+I,GACVhJ,YAAY,IACZnE,MAAO,CAAE5E,MAAO,OAAQ6T,QAAS,YAEnC,cAACzN,EAAA,EAAD,CACExB,MAAO,CACLiP,QAAS,SACT1N,WAAY,MACZJ,cAAe,MACfD,WAAY,QAEdQ,QAASuL,GAPX,eAWA,cAACzL,EAAA,EAAD,CACExB,MAAO,CACLiP,QAAS,SACT1N,WAAY,MACZJ,cAAe,MACfD,WAAY,QAEdQ,QAASwL,GAPX,qBAaJ,eAACtL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,oBACA,sBAAKK,UAAU,cAAf,UACE,sBACEA,UAAU,oBACVlC,MAAO,CACLiP,QAAS,cACT9N,cAAe,SACf+N,WAAY,UALhB,0BAUA,cAACtN,EAAA,EAAK2M,QAAN,CACEC,KAAK,SACLrK,YAAY,QACZgL,IAAI,IACJC,KAAK,OACL7W,MAAO2O,GACP9C,SAAUgJ,WAIhB,eAACxL,EAAA,EAAK0M,MAAN,CAAYe,UAAU,oBAAtB,UACE,eAACzN,EAAA,EAAK0N,MAAN,CAAYd,KAAK,WAAWlT,GAAG,kBAA/B,UACE,cAACsG,EAAA,EAAK0N,MAAMC,MAAZ,CACEf,KAAK,WACLgB,SAAO,EACPC,QAASrI,GACThD,SAAU,kBAAMiD,IAAYD,OAE9B,gDACA,cAACxF,EAAA,EAAK0N,MAAMzN,MAAZ,CAAkB7B,MAAO,CAAE8B,MAAO,SAAlC,wBAGF,eAACF,EAAA,EAAK0N,MAAN,CAAYd,KAAK,WAAWlT,GAAG,eAA/B,UACE,cAACsG,EAAA,EAAK0N,MAAMC,MAAZ,CACEf,KAAK,WACLgB,SAAO,EACPC,QAASnI,GACTlD,SAAU,kBAAMmD,IAAiBD,OAEnC,gDACA,cAAC1F,EAAA,EAAK0N,MAAMzN,MAAZ,CAAkB7B,MAAO,CAAE8B,MAAO,SAAlC,iCAGJ,cAACF,EAAA,EAAKC,MAAN,4BACA,eAACD,EAAA,EAAK0M,MAAN,WACE,eAAC1M,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHpI,MAAOuP,GACP1D,SAAUoJ,GACVxN,MAAO,CAAE5E,MAAO,OAAQ6T,QAAS,UAJnC,UAME,wBAAQ1W,MAAM,KAAd,gBACC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAM+L,KACxE,SAACxL,GACC,OAAO,wBAAQP,MAAK,UAAKO,GAAlB,mBAA+CA,IAAjBe,OAAOf,UAIlD,eAAC8I,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHrF,GAAG,SACH/C,MAAOyP,GACP5D,SAAUsJ,GACV1N,MAAO,CAAE5E,MAAO,OAAQ6T,QAAS,SAAU1N,WAAY,OALzD,UAOE,wBAAQhJ,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAECqK,QAAO,SAAC8M,GACP,OAAO7V,OAAO6V,IAAiBtH,MAEhC9D,KAAI,SAACxL,GACJ,OACE,wBAAQP,MAAK,UAAKO,GAAlB,mBAAwDA,IAAxD,cAAqCe,OAAOf,WAIpD,eAAC8I,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHrF,GAAG,UACH/C,MAAO2P,GACP9D,SAAUuJ,GACV3N,MAAO,CAAEiP,QAAS,SAAU7T,MAAO,QAASmG,WAAY,OAL1D,UAOE,wBAAQhJ,MAAM,OAAd,kBACCmN,EAAMpB,KAAI,SAACqL,EAAW7J,GACrB,IAAM8J,EAAW9J,EACjB,OACE,wBAAsCvN,MAAOoX,EAA7C,SACGA,GADH,oBAA0BC,UAMhC,uBACA,cAAChO,EAAA,EAAKC,MAAN,CAAY7B,MAAO,CAAEiC,UAAW,QAAhC,kBACA,eAACL,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHrF,GAAG,eACH/C,MAAO+P,GACPlE,SAAUwJ,GACV5N,MAAO,CAAE5E,MAAO,OALlB,UAOE,iDACC2K,EAAMzB,KAAI,SAAClL,EAAM0M,GAChB,IAAM8J,EAAW9J,EACjB,OACE,wBAAiCvN,MAAOa,EAAxC,SACGA,GADH,eAAqBwW,aAO7B,eAAChO,EAAA,EAAK0M,MAAN,CAAYtO,MAAO,CAAEiC,UAAW,OAAhC,UACE,cAACL,EAAA,EAAKC,MAAN,0BACA,cAACD,EAAA,EAAK2M,QAAN,CACE5N,GAAG,WACHkP,KAAM,EACNtX,MAAOiP,GACPrD,YAAY,mBACZC,SAAUiJ,QAGd,eAACzL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,gCACA,eAACD,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHyD,SAAUkJ,GACV/U,MAAOmP,GAHT,UAKE,oDACA,qDACA,4DACA,4DACA,8CACA,+CACA,sDACA,iDAIJ,eAAC9F,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,uBACA,eAACD,EAAA,EAAK2M,QAAN,CAAc5N,GAAG,SAASyD,SAAUmJ,GAAkBhV,MAAOqP,GAA7D,UACE,qDACA,2CACA,kDAIJ,cAACpG,EAAA,EAAD,CAAQG,QAAQ,UAAUD,QAASmM,GAAac,SAAUvE,GAA1D,oBAGA,cAAC5I,EAAA,EAAD,CAAQE,QAASqM,GAAa/N,MAAO,CAAEuB,WAAY,OAAnD,mBAGC+I,GACC,cAAC1I,EAAA,EAAKC,MAAN,CAAY7B,MAAO,CAAEuB,WAAY,OAAjC,iCACE,KACJ,6BAIJ,eAACmC,EAAA,EAAD,WACE,cAACgB,EAAA,EAAD,IACA,cAACf,EAAA,EAAD,CAAW3D,MAAO,CAAEqO,gBAAiB,QAASpM,UAAW,OAAzD,SACE,oBACEC,UAAU,cACVlC,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAFlD,cAIgDxB,IAA7C1E,EAAMQ,oBAAoB2P,SAASzE,MAChC,eACA,iBAIR,cAAC7E,EAAA,EAAD,UACE,eAACrB,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,eAACmB,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,sBACZC,SAAUmI,GACVhU,MAAOkE,IAERA,GAAQA,EAAKzE,OAAS,GACrB,oBAAIgI,MAAO,CAAEyO,cAAe,QAA5B,SAAuCpC,UAI3C,eAACzK,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,2BACA,cAAC,EAAD,CAAiBuD,UAAW6I,UACXxO,IAAhBzE,GACC,oBACEgF,MAAO,CAAEyO,cAAe,OAAQC,YAAa,MAAOzM,UAAW,OADjE,SAGGjH,GAAYsJ,KAAI,SAACrF,GAAD,OACf,+BACE,cAAC,IAAD,CAAS6C,MAAM,QAAQL,KAAM,GAAIzB,MAAO,CAAEiC,UAAW,UACrD,sBACEjC,MAAO,CACL8B,MAAO,UACPG,UAAW,OACXd,cAAe,UAEjB,cAAY,iBANd,SAQGlC,EAAKxC,SAVDwC,EAAKxC,WAehB,QAGN,sBAAKuD,MAAO,CAAEC,aAAc,QAAUsL,IAAKA,GAA3C,UACE,cAAC3J,EAAA,EAAKC,MAAN,6BACA,cAACL,EAAA,EAAD,CACEG,QAAS+I,GAAe,UAAe,YACvCjJ,KAAK,KACLzB,MAAO,CAAEuB,WAAY,OACrBG,QAASsL,GAJX,SAMGtC,GAAe,gBAAqB,WAEvC,cAAC9I,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLjW,MAAOA,GACP6L,SAAUqH,GACVkD,SAAUjE,GACVvG,YAAY,uBACZnE,MAAO,CAAE5E,MAAO,UAGN,OAAXmE,IACC,oBAAIS,MAAO,CAAEyO,cAAe,QAA5B,SAAuC1C,UAG3C,cAAC6C,EAAA,EAAD,UACE,eAAC7O,EAAA,EAAD,WACE,cAAC6O,EAAA,EAAUC,OAAX,CAAkBlO,GAAIZ,IAAK+O,OAAQ5K,SAAS,IAA5C,0BAGA,cAAC0K,EAAA,EAAUG,SAAX,CAAoB7K,SAAS,IAA7B,SACE,eAACnE,EAAA,EAAKiP,KAAN,WACE,eAACpN,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,aACZ5L,MAAOwJ,EACPqC,SAAUsI,QAGd,eAAC9K,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,OACZ5L,MAAOgO,EACPnC,SAAUuI,QAGd,eAAC/K,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,oBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,QACZ5L,MAAOkO,EACPrC,SAAUwI,QAGd,eAAChL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,QACZ5L,MAAOoO,EACPvC,SAAUyI,kBAOtB,eAACjL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,yBACA,eAACD,EAAA,EAAK2M,QAAN,CAAc5N,GAAG,SAASyD,SAAU0I,GAAmBvU,MAAOsO,EAA9D,UACE,uDACC9P,GAAWuN,KAAI,SAACuC,GACf,OAAO,iCAA4BA,EAAUtJ,MAAzBsJ,EAAUxJ,aAIpC,eAACuE,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,2BACA,eAACD,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHyD,SAAU2I,GACVxU,MAAO2E,GAHT,UAKE,yDACA,6CACA,6CACA,+CACA,qDAGJ,eAAC0E,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,uBACA,gCACE,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLjW,MAAOyO,GACP5C,SAAU+I,GACVhJ,YAAY,IACZnE,MAAO,CAAE5E,MAAO,OAAQ6T,QAAS,YAEnC,cAACzN,EAAA,EAAD,CACExB,MAAO,CACLiP,QAAS,SACT1N,WAAY,MACZJ,cAAe,MACfD,WAAY,QAEdQ,QAASuL,GAPX,eAWA,cAACzL,EAAA,EAAD,CACExB,MAAO,CACLiP,QAAS,SACT1N,WAAY,MACZJ,cAAe,MACfD,WAAY,QAEdQ,QAASwL,GAPX,wBAcN,eAACzM,EAAA,EAAD,WACE,eAACmB,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,oBACA,sBAAKK,UAAU,cAAf,UACE,sBACEA,UAAU,oBACVlC,MAAO,CACLiP,QAAS,cACT9N,cAAe,SACf+N,WAAY,UALhB,0BAUA,cAACtN,EAAA,EAAK2M,QAAN,CACEC,KAAK,SACLrK,YAAY,QACZgL,IAAI,IACJC,KAAK,OACL7W,MAAO2O,GACP9C,SAAUgJ,WAIhB,eAACxL,EAAA,EAAK0M,MAAN,CAAYe,UAAU,oBAAtB,UACE,eAACzN,EAAA,EAAK0N,MAAN,CAAYd,KAAK,WAAWlT,GAAG,kBAA/B,UACE,cAACsG,EAAA,EAAK0N,MAAMC,MAAZ,CACEf,KAAK,WACLgB,SAAO,EACPC,QAASrI,GACThD,SAAU,kBAAMiD,IAAYD,OAE9B,gDACA,cAACxF,EAAA,EAAK0N,MAAMzN,MAAZ,CAAkB7B,MAAO,CAAE8B,MAAO,SAAlC,wBAGF,eAACF,EAAA,EAAK0N,MAAN,CAAYd,KAAK,WAAWlT,GAAG,eAA/B,UACE,cAACsG,EAAA,EAAK0N,MAAMC,MAAZ,CACEf,KAAK,WACLgB,SAAO,EACPC,QAASnI,GACTlD,SAAU,kBAAMmD,IAAiBD,OAEnC,gDACA,cAAC1F,EAAA,EAAK0N,MAAMzN,MAAZ,CAAkB7B,MAAO,CAAE8B,MAAO,SAAlC,iCAKJ,cAACF,EAAA,EAAKC,MAAN,4BACA,eAACD,EAAA,EAAK0M,MAAN,WACE,eAAC1M,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHpI,MAAOuP,GACP1D,SAAUoJ,GACVxN,MAAO,CAAE5E,MAAO,OAAQ6T,QAAS,UAJnC,UAME,wBAAQ1W,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA+L,KAAI,SAACxL,GACL,OAAO,wBAAQP,MAAK,UAAKO,GAAlB,mBAA+CA,IAAjBe,OAAOf,UAGhD,eAAC8I,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHrF,GAAG,SACH/C,MAAOyP,GACP5D,SAAUsJ,GACV1N,MAAO,CAAE5E,MAAO,OAAQ6T,QAAS,SAAU1N,WAAY,OALzD,UAOE,wBAAQhJ,MAAM,KAAd,gBACC,CACC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAECqK,QAAO,SAAC8M,GACP,OAAO7V,OAAO6V,IAAiBtH,MAEhC9D,KAAI,SAACxL,GACJ,OACE,wBACEP,MAAK,UAAKO,GADZ,mBAGKA,IAHL,cAEce,OAAOf,WAK7B,eAAC8I,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHrF,GAAG,UACH/C,MAAO2P,GACP9D,SAAUuJ,GACV3N,MAAO,CAAEiP,QAAS,SAAU7T,MAAO,QAASmG,WAAY,OAL1D,UAOE,wBAAQhJ,MAAM,OAAd,kBACCmN,EAAMpB,KAAI,SAACqL,EAAW7J,GACrB,IAAM8J,EAAW9J,EACjB,OACE,wBAAsCvN,MAAOoX,EAA7C,SACGA,GADH,oBAA0BC,UAMhC,uBACA,cAAChO,EAAA,EAAKC,MAAN,CAAY7B,MAAO,CAAEiC,UAAW,QAAhC,kBACA,eAACL,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHrF,GAAG,eACH/C,MAAO+P,GACPlE,SAAUwJ,GACV5N,MAAO,CAAE5E,MAAO,OALlB,UAOE,iDACC2K,EAAMzB,KAAI,SAAClL,EAAM0M,GAChB,IAAM8J,EAAW9J,EACjB,OACE,wBAAiCvN,MAAOa,EAAxC,SACGA,GADH,eAAqBwW,aAO7B,eAAChO,EAAA,EAAK0M,MAAN,CAAYtO,MAAO,CAAEiC,UAAW,OAAhC,UACE,cAACL,EAAA,EAAKC,MAAN,0BACA,cAACD,EAAA,EAAK2M,QAAN,CACE5N,GAAG,WACHkP,KAAM,EACNtX,MAAOiP,GACPrD,YAAY,mBACZC,SAAUiJ,QAGd,eAACzL,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,gCACA,eAACD,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHyD,SAAUkJ,GACV/U,MAAOmP,GAHT,UAKE,oDACA,qDACA,4DACA,4DACA,8CACA,+CACA,sDACA,iDAIJ,eAAC9F,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,uBACA,eAACD,EAAA,EAAK2M,QAAN,CAAc5N,GAAG,SAASyD,SAAUmJ,GAAkBhV,MAAOqP,GAA7D,UACE,qDACA,2CACA,kDAIJ,cAACpG,EAAA,EAAD,CAAQG,QAAQ,UAAUD,QAASmM,GAAac,SAAUvE,GAA1D,oBAGA,cAAC5I,EAAA,EAAD,CAAQE,QAASqM,GAAa/N,MAAO,CAAEuB,WAAY,OAAnD,mBAGC+I,GACC,cAAC1I,EAAA,EAAKC,MAAN,CAAY7B,MAAO,CAAEuB,WAAY,OAAjC,iCACE,KACJ,mC,uBCx/BGuO,MAnbf,SAAwB/U,GACtB,IAAQlE,EAAWsB,cAAXtB,OACR,EAA8BD,gBAAiC6I,GAA/D,mBAAOsQ,EAAP,KAAoBC,EAApB,KACA,EAA4CpZ,WAAuBC,GAAnE,mBAAOoZ,EAAP,KAAuBC,EAAvB,KACA,EAA0BtZ,WAA8B,IAAIiC,MAA5D,mBAAON,EAAP,KAAc6L,EAAd,KACA,EAAgCxN,WAAmC,mBAAnE,mBAAOgR,EAAP,KAAiBC,EAAjB,KACA,EAA0CjR,YAAwB,GAAlE,mBAAOuZ,EAAP,KAAsBC,EAAtB,KACA,EAAgBnW,cAATmB,EAAP,oBA6DA,SAASiV,EAAT,GAM8B,IAL5B5X,EAK2B,EAL3BA,KAOA,MAAa,UAFc,EAJ3B6X,MAQIL,EAAeM,MACb,SAACC,GAAD,OACExN,IAAOwN,EAAEtS,cAAc+E,OAAO,gBAC9BD,IAAOvK,GAAMwK,OAAO,iBAGjB,YAIJ,KAGT,SAASwN,EAAelY,GACtByX,EAAOzX,GAIT,SAASgV,EAAiBtQ,GACxBA,EAAEE,iBACF0K,EAAY5K,EAAEqG,OAAO/K,OAEE,QAAnB0E,EAAEqG,OAAO/K,MAET2X,EADEC,EACgBtZ,EAGhBA,EAAO+L,QACL,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,gBAMlBoS,EADEC,EAEAtZ,EAAO+L,QAAO,SAAC8N,GAAD,OAAcA,EAAS7R,eAAiB5B,EAAEqG,OAAO/K,SAI/D1B,EACG+L,QAAO,SAAC8N,GAAD,OAAcA,EAAS7R,eAAiB5B,EAAEqG,OAAO/K,SACxDqK,QACC,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,gBA5HuB,SAmIlC6S,IAnIkC,2EAmIjD,sBAAAva,EAAA,sEAEQga,GAAkBD,GAF1B,OAMMD,EAFa,QAAbtI,EACEuI,EACgBtZ,EAGhBA,EAAO+L,QACL,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,eAKhBqS,EAEAtZ,EAAO+L,QAAO,SAAC8N,GAAD,OAAcA,EAAS7R,eAAiB+I,KAItD/Q,EACG+L,QAAO,SAAC8N,GAAD,OAAcA,EAAS7R,eAAiB+I,KAC/ChF,QACC,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,gBA5B1B,4CAnIiD,sBAsKjD,OA7JA7F,qBAAU,WAGR,GAAIpB,GAAUA,EAAOmB,OAAS,EAC5B,OAAQ+C,EAAM6V,UACZ,IAAK,iBAYL,IAAK,gBAKHV,EACErZ,EACG+L,QAAO,SAAC8N,GAAD,MAAwC,UAA1BA,EAAS7R,gBAC9B+D,QACC,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,gBAGpB+J,EAAY,SACZ,MACF,IAAK,gBACHqI,EACErZ,EACG+L,QAAO,SAAC8N,GAAD,MAAwC,WAA1BA,EAAS7R,gBAC9B+D,QACC,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,gBAGpB+J,EAAY,UACZ,MACF,QACEqI,EACErZ,EAAO+L,QACL,SAACM,GAAD,MAC8B,cAA5BA,EAAYpF,aACgB,cAA5BoF,EAAYpF,gBAGlB+J,EAAY,UAGjB,IAqGChR,GAAUA,EAAOmB,OAAS,EACrB,6CAGFoD,EAAQ,IACb,eAACsI,EAAA,EAAD,CAAWxB,UAAU,cAAclC,MAAO,CAAEiC,UAAW,OAAvD,UACE,cAAC0B,EAAA,EAAD,CAAW3D,MAAO,CAAEqO,gBAAiB,SAArC,SACE,oBAAIrO,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAApD,wBAEF,cAACW,EAAA,EAAK0M,MAAN,UACE,eAAC1M,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHyD,SAAUmJ,EACVhV,MAAOqP,EACP7D,MAAM,wBAJR,UAME,qDACA,2CACA,4CACA,8CAGJ,cAAC,IAAD,CACEK,SAAU,SAACyB,GAAD,OAASzB,EAASyB,IAC5BtN,MAAOA,EACP8X,cAAeA,EACfQ,WAAYJ,EACZvO,UAAU,iBACV4O,aAAa,OAEf,cAACvQ,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,UACE,uBAAMyB,UAAU,YAAYlC,MAAO,CAAEuB,WAAY,OAAjD,UACE,+BACE,sBAAMvB,MAAO,CAAEkB,WAAY,QAA3B,oBACA,cAAC0C,EAAA,EAAD,CACE5D,MAAO,CACLiB,SAAU,QACVa,MAAO,UACPP,WAAY,MACZwP,WAAY,SALhB,SASId,EAAerN,QAAO,SAAC9J,GACrB,GAAIiX,GAEA/M,IAAOlK,EAAIoF,cAAc+E,OAAO,eAChCD,IAAO+M,GAAa9M,OAAO,cAE3B,OAAOnK,KAGVd,YAIT,cAAC4J,EAAA,EAAK0M,MAAN,CAAYe,UAAU,oBAAtB,SACE,eAACzN,EAAA,EAAK0N,MAAN,CAAYd,KAAK,WAAWlT,GAAG,kBAA/B,UACE,cAACsG,EAAA,EAAK0N,MAAMC,MAAZ,CACEf,KAAK,WACLgB,SAAO,EACPC,QAASU,EACT/L,SAAUuM,IAEZ,cAAC/O,EAAA,EAAK0N,MAAMzN,MAAZ,CAAkB7B,MAAO,CAAE8B,MAAO,SAAlC,8CAQOrC,IAAhBsQ,EACGE,EACGrN,QAAO,SAACoO,GAIP,GAHqBhO,IAAOgO,EAAc9S,cACtB8E,MAGlB,OAAOgO,KAGV1M,KAAI,SAAChH,GACJ,IAAMsC,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEhJ,oBAAqBR,EAAMQ,oBAC3B+B,MAAOA,EACPyE,QAAS0C,EACTjE,OAAO,YAJFlD,EAAMD,OAQnB4S,EACGrN,QAAO,SAAC9J,GACP,GAAIiX,GAEA/M,IAAOlK,EAAIoF,cAAc+E,OAAO,eAChCD,IAAO+M,GAAa9M,OAAO,cAE3B,OAAOnK,KAIZsV,MAAK,SAAChY,EAAUmG,GACf,OAAInG,EAAE8H,aAAe3B,EAAE2B,aACd,GAGD,KAEToG,KAAI,SAAChH,GACJ,IAAMsC,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEhJ,oBAAqBR,EAAMQ,oBAC3B+B,MAAOA,EACPyE,QAAS0C,EACTjE,OAAO,YAJFlD,EAAMD,UAUzB,eAACqG,EAAA,EAAD,CAAW1D,MAAO,CAAEiC,UAAW,OAA/B,UACE,cAACyC,EAAA,EAAD,IACA,cAACf,EAAA,EAAD,CACEzB,UAAU,cACVlC,MAAO,CAAEqO,gBAAiB,QAASpM,UAAW,OAFhD,SAIE,oBAAIjC,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAApD,wBAGF,eAACV,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACmB,EAAA,EAAK0M,MAAN,UACE,eAAC1M,EAAA,EAAK2M,QAAN,CACE5N,GAAG,SACHyD,SAAUmJ,EACVhV,MAAOqP,EACP7D,MAAM,wBACN/D,MAAO,CAAE5E,MAAO,QAAS6V,OAAQ,QALnC,UAOE,qDACA,2CACA,4CACA,8CAGJ,cAAC,IAAD,CACE7M,SAAU,SAACyB,GAAD,OAASzB,EAASyB,IAC5BtN,MAAOA,EACP8X,cAAeA,EACfQ,WAAYJ,EACZK,aAAa,KACb5O,UAAU,sBAId,eAACzB,EAAA,EAAD,WACE,uBAAMyB,UAAU,cAAhB,UACE,+BACE,sBAAMlC,MAAO,CAAEkB,WAAY,QAA3B,oBACA,cAAC0C,EAAA,EAAD,CACE5D,MAAO,CACLiB,SAAU,QACVa,MAAO,UACPP,WAAY,MACZwP,WAAY,SALhB,SASId,EAAerN,QAAO,SAAC9J,GACrB,GAAIiX,GAEA/M,IAAOlK,EAAIoF,cAAc+E,OAAO,eAChCD,IAAO+M,GAAa9M,OAAO,cAE3B,OAAOnK,KAGVd,YAKT,cAAC4J,EAAA,EAAK0M,MAAN,CAAYe,UAAU,oBAAtB,SACE,eAACzN,EAAA,EAAK0N,MAAN,CAAYd,KAAK,WAAWlT,GAAG,kBAA/B,UACE,cAACsG,EAAA,EAAK0N,MAAMC,MAAZ,CACEf,KAAK,WACLgB,SAAO,EACPC,QAASU,EACT/L,SAAUuM,IAEZ,cAAC/O,EAAA,EAAK0N,MAAMzN,MAAZ,CAAkB7B,MAAO,CAAE8B,MAAO,SAAlC,0CAMWrC,IAAhBsQ,EACGE,EACGrN,QAAO,SAACoO,GAIP,GAHqBhO,IAAOgO,EAAc9S,cACtB8E,MAGlB,OAAOgO,KAGV1M,KAAI,SAAChH,GACJ,IAAMsC,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEhJ,oBAAqBR,EAAMQ,oBAC3B+B,MAAOA,EACPyE,QAAS0C,EACTjE,OAAO,YAJFlD,EAAMD,OAQnB4S,EACGrN,QAAO,SAAC9J,GACP,GAAIiX,GAEA/M,IAAOlK,EAAIoF,cAAc+E,OAAO,eAChCD,IAAO+M,GAAa9M,OAAO,cAE3B,OAAOnK,KAIZsV,MAAK,SAAChY,EAAUmG,GACf,OAAInG,EAAE8H,aAAe3B,EAAE2B,aACd,GAGD,KAEToG,KAAI,SAAChH,GACJ,IAAMsC,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,cAAC,EAAD,CAEEhJ,oBAAqBR,EAAMQ,oBAC3B+B,MAAOA,EACPyE,QAAS0C,EACTjE,OAAO,YAJFlD,EAAMD,iB,iBClb3B6T,EAAS,6BACXC,EAAa,EA2GFC,MAzGf,WACE,IACMC,EAAeza,IAAM0a,OADW,MAGtC,EAAkCpX,qBAAlC,mBAAkBqX,GAAlB,WACIC,OAAyC/R,EAE7CxH,qBAAU,WACR,IAAMwZ,EAAkB7V,SAAS8V,eAAe,gBADlC,4CAEd,gCAAAtb,EAAA,sEAEUgB,EAAY,IAAIC,QAAJ,4EACqDC,4DACrE,CACEC,OAAQ,QALhB,SASuBrB,YAAoBkB,GAT3C,QASUI,EATV,QAWaQ,OAAS,IACV2Z,EAAmBna,EAAKoL,QAAO,SAAC9J,GACpC,GACEkK,IAAOlK,EAAIoF,cAAc+E,OAAO,eAChCD,IAAO,IAAInK,MAAQoK,OAAO,cAE1B,OAAOnK,KAGXyY,EAAaI,GAEW,OAApBF,IACFD,EAAYI,IACZC,EAAWF,KAxBnB,gDA4BIla,QAAQC,IAAR,MA5BJ,0DAFc,0DAkCdP,KACC,IAGH,IAAMya,EAAgB,WACpB,OAAO,IAAIE,OAAOC,KAAKC,IAAIX,EAAaY,QAAwB,CAC9DC,OAAQ,CAAEC,IAAK,kBAAmBC,KAAM,YACxCC,KAAM,MAIV,SAASC,EACPpH,EACA5G,EACAhH,GAIA,IAAMiV,EAAY,IAAIT,OAAOC,KAAKS,OAAO,CACvCC,UAAWX,OAAOC,KAAKW,UAAUC,KACjCC,SAAU1H,EACV2H,MAAM,GAAD,OAAK3B,EAAOC,IAAeD,EAAOlZ,QAAlC,YAA6CsF,EAAMC,MACxD+G,IAAKA,IAGD1E,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GAElEuO,EAAa,iCACJrO,EADI,aACanH,EAAMG,QADnB,2BAKbsV,EAAa,IAAIjB,OAAOC,KAAKiB,WAAW,CAC5CC,QAASH,IAGXP,EAAUW,YAAY,SAAS,WAC7BH,EAAWI,KAAK7O,EAAKiO,MAhFE,SAoFZV,EApFY,8EAoF3B,WAA0BuB,GAA1B,SAAAhd,EAAA,+EACSgd,EAAapU,QAAb,iCAAAqU,MAAqB,WAAO/V,GAAP,uBAAAlH,EAAA,6DACpB2L,EADoB,UACPzE,EAAMG,QADC,aACWH,EAAMI,KADjB,aAC0BJ,EAAMK,MADhC,YACyCL,EAAMM,SAD/C,SAGJ+N,YAAW,CAAE5J,YAHT,cAGpB6J,EAHoB,gBAIC0H,YAAU1H,EAAQ,IAJnB,gBAIlBuG,EAJkB,EAIlBA,IAAKC,EAJa,EAIbA,SAEK3S,IAAd+R,GACFc,EAAU,CAAEH,MAAKC,OAAOZ,EAAWlU,GAPX,4CAArB,wDADT,4CApF2B,sBAiG3B,OACE,qBACEiO,IAAK8F,EACLrR,MAAO,CAAE5E,MAAO,IAAK4G,OAAQ,OAAQ4Q,SAAU,e,gBCoFtCW,OAjLf,SAAqBxY,GACnB,IAAQlE,EAAWsB,cAAXtB,OACR,EAA4BD,YAAwB,GAApD,mBAAO4c,EAAP,KAAeC,EAAf,KAMA,SAASC,IACPD,GAAWD,GAGb,GAAI3c,EAAOmB,OAAS,EAClB,OAAO,6CAGT,IAAM2b,EAAoB9c,EAAO+L,QAAO,SAACtF,GAAD,OAAWA,EAAMD,KAAOtC,EAAMmQ,SAASzE,SAC3EmN,EAAgBD,EAAkB,GAAGjV,cAezC,MAboB,SAAlBkV,QACkBnU,IAAlBmU,GACkB,KAAlBA,GACkB,OAAlBA,EAEAA,EACE,sGAEoBnU,IAAlBmU,IACFA,EAAgBD,EAAkB,GAAGjV,eAKvC,cAAC,WAAD,UACE,eAACgF,EAAA,EAAD,CAAWxB,UAAU,cAAclC,MAAO,CAAEiC,UAAW,OAAvD,UACE,cAAC0B,EAAA,EAAD,CAAW3D,MAAO,CAAEqO,gBAAiB,SAArC,SACE,oBAAIrO,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAApD,4BAIF,eAACV,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UACGkT,EAAkBrP,KAAI,SAAChH,GACtB,OACE,eAACyC,EAAA,EAAD,CACEmC,UAAU,mDAEVlC,MAAO,CACLgC,OAAQ,QACRC,UAAW,MACX/B,QAAS,QANb,UASE,cAACH,EAAA,EAAK+O,OAAN,CAAa9O,MAAO,CAAEiB,SAAU,SAAUC,WAAY,UAAtD,mBACM5D,EAAMC,KADZ,cAGA,eAACwC,EAAA,EAAKuB,KAAN,WACE,sBAAMtB,MAAO,CAAEkB,WAAY,QAA3B,yBAAwD,IACxD,qBAAKlB,MAAO,CAAE6T,UAAW,UAAzB,SAAsCvW,EAAMO,eAE9C,eAACkC,EAAA,EAAKuB,KAAN,CAAWtB,MAAO,CAAEC,aAAc,OAAlC,UACE,sBAAMD,MAAO,CAAEkB,WAAY,QAA3B,uBAAsD,IACtD,+BAAO5D,EAAMS,cAEf,cAACyD,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAS,kBA5DxBpG,EA4DwCgC,EAAMD,QA3D/DtC,EAAMS,QAAQC,KAAd,UAA8BH,GADhC,IAAmBA,GA4DH,oBAlBKgC,EAAMD,SAyBnB,cAACoD,EAAA,EAAD,CAAKyB,UAAU,mDAAf,SACE,cAACtB,EAAA,EAAD,CAAOC,IAAK+S,EAAeE,WAAS,EAACpS,QAASgS,MAE/CF,GACC,wBACEtR,UAAU,SACVlC,MAAO,CAAE4S,SAAU,YACnBO,MAAI,EACJzR,QAASgS,EAJX,SAME,qBACExR,UAAU,QACVrB,IAAK+S,EACLlS,QAASgS,EACTK,IAAI,kBAKZ,cAACxT,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,UACE,cAACuT,EAAA,EAAD,CAAWhU,MAAO,CAAEiC,UAAW,OAA/B,SACG0R,EAAkBrP,KAAI,SAAChH,GACtB,IAAMuC,EAAoB,IAAIhH,KAAKyE,EAAMY,cACnC4B,EAAkB,IAAIjH,KAAKyE,EAAMa,iBACjCyB,EAAU,UAAMtC,EAAMG,QAAZ,YAAuBH,EAAMI,KAA7B,YAAqCJ,EAAMK,OACrD4G,EAAiBC,UAAU5E,GAC3B6E,EAAY,0DAAsDF,GACxE,OACE,eAAC,WAAD,WACE,eAACyP,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,0CAAiB,IACjB,sBAAMlC,MAAO,CAAEuB,WAAY,OAA3B,SACsB,IAAnBjE,EAAMsB,SAAiB,kFAAe,sDAEzC,sBAAMoB,MAAO,CAAEuB,WAAY,OAA3B,SAAqCjE,EAAMuB,kBAE7C,eAACmV,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,8CAAqB,IACrB,sBAAMlC,MAAO,CAAEuB,WAAY,OAA3B,SACG/I,YAAW8E,EAAMc,WAAW,GAAM,QAGvC,eAAC4V,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,+CAAsB,IACtB,sBAAMlC,MAAO,CAAEuB,WAAY,MAAOP,YAAa,OAA/C,SACGxI,YAAW8E,EAAMY,cAAc,GAAO,KAEzC,mCACA,sBAAM8B,MAAO,CAAEuB,WAAY,OAA3B,SACG/I,YAAW8E,EAAMa,iBAAiB,GAAO,QAG9C,eAAC6V,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,iDAAwB,IACxB,sBAAMlC,MAAO,CAAEuB,WAAY,OAA3B,mBACM1B,EAAkBxG,mBAAmB,QAAS,CAChDgI,UAAW,aAGdvB,IAAoBD,EACnB,qCACE,sBAAMG,MAAO,CAAEuB,WAAY,OAA3B,kBACA,sBAAMvB,MAAO,CAAEuB,WAAY,OAA3B,mBACMzB,EAAgBzG,mBAAmB,QAAS,CAC9CgI,UAAW,gBAIf,aAGiB5B,IAAtBnC,EAAMW,aAA6BX,EAAMW,YAAYjG,OAAS,EAC7D,eAACgc,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,6CAAoB,IACpB,sBAAMlC,MAAO,CAAEuB,WAAY,OAA3B,SAAqCjE,EAAMW,iBAE3C,KAEJ,eAAC+V,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,mBAAGlC,MAAO,CAAEgB,YAAa,OAAzB,sBAA+C,IAC/C,uBAAMhB,MAAO,CAAEiB,SAAU,SAAzB,UACE,cAAC,IAAD,CAAYQ,KAAM,KAClB,mBACE1F,KAAM0I,EACNzE,MAAO,CAAEuB,WAAY,MAAON,SAAU,UAFxC,SAIGrB,UAIP,eAACoU,EAAA,EAAU/P,KAAX,CAAgB/B,UAAU,4BAA1B,UACE,mBAAGlC,MAAO,CAAEgB,YAAa,OAAzB,yBAAkD,IAClD,sBAAMhB,MAAO,CAAEiB,SAAU,UAAzB,SAAsC3D,EAAMkB,iBAhE3BlB,EAAMD,mB,UCxGhC4W,GAAuE,SAAC,GAE9E,IADLC,EACI,EADJA,aAEA,EAAsCha,qBAAtC,mBAAOia,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKlS,UAAU,mBAAmBlC,MAAO,CAAEiC,UAAW,QAAtD,UACE,oBACEjC,MAAO,CACLM,WAAY,gBACZW,SAAU,QACVa,MAAO,SACPuS,iBAAkB,aALtB,qBAUCF,GACC,qBAAKnU,MAAO,CAAEiB,SAAU,UAAxB,+CAIF,mBAAGjB,MAAO,CAAEiB,SAAU,UAAtB,qBACA,cAAC,eAAD,CACEqT,SAAQ,UAAKhd,4EACbid,WAAW,SACXC,UAAWN,EACXO,UAAW,SAACne,GACV8d,GAAe,IAEjBM,YAAY,EACZC,aAAc,qBACdC,aAAa,mB,UC4MNC,OAlOf,SAAuB9Z,GACrB,IAAQhE,EAAeoB,cAAfpB,WACR,EAA4CH,YAAwB,GAApE,mBAAOke,EAAP,KAAuBC,EAAvB,KACA,EAAoBne,WAAuB,GAA3C,mBAAO0E,EAAP,KAAW0Z,EAAX,KACA,EAAwBpe,gBAAmC6I,GAA3D,mBAAOhD,EAAP,KAAawY,EAAb,KACA,EAAsCre,gBAAmC6I,GAAzE,mBAAO+H,EAAP,KAAoB0N,EAApB,KACA,EAAgCte,gBAAmC6I,GAAnE,mBAAO+K,EAAP,KAAiBC,EAAjB,KACA,EAAsC7T,gBAAmC6I,GAAzE,mBAAO0V,EAAP,KAAoBC,EAApB,KAEA,EAAsCxe,WAA4B,IAAlE,mBAAOoE,EAAP,KAAoBC,EAApB,KA+CA,SAAS8S,IACPkH,EAAQ,IACRD,EAAM,GACNE,EAAe,IACfzK,EAAY,IAgDd,OAA0B,IAAtB1T,EAAWiB,OACN,0DAGTjB,EAAWqX,MAAK,SAAChY,EAAcmG,GAC7B,YAAekD,IAAXrJ,EAAEmH,WAAiCkC,IAAXlD,EAAEgB,MACxBnH,EAAEmH,KAAOhB,EAAEgB,KACN,GAIH,KAIR,eAACmG,EAAA,EAAD,CAAW5C,OAAK,EAAhB,UACE,cAACP,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAKyB,UAAU,cAAf,SACE,cAACyB,EAAA,EAAD,UACE,oBAAI3D,MAAO,CAAEM,WAAY,gBAAiBW,SAAU,aAApD,mCAMN,cAACO,EAAA,EAAD,CACEE,QAnGN,SAA+BzE,GAC7BA,EAAEE,iBACF4X,GAAmBD,IAkGf9U,MAAO,CAAEC,aAAc,OACvB0B,QAAQ,YAHV,8BAOCmT,EACC,cAAC,KAAD,CACEO,SAAS,YACTC,kBAAkB,KAClBC,SAAU,IACVC,eAAe,WACfC,eAAe,WACfC,gBAAgB,WAChBC,yBAAyB,EACzBC,OAAO,qCART,SAUG7e,EAAWuN,KAAI,SAACuC,GACf,OACE,cAACmN,EAAA,EAAU/P,KAAX,CAEE4R,QAAM,EACNnU,QAAS,kBAjJvB,SAA0BpG,GACxByZ,GAAmBD,GACnB,IAAMgB,EAAoB/e,EAAW6L,QAAO,SAACmT,GAAD,OAAQA,EAAG1Y,KAAO/B,KAC9D0Z,EAAMc,EAAkB,GAAGzY,IAC3B4X,EAAQa,EAAkB,GAAGvY,MACY,OAArCuY,EAAkB,GAAG7X,YACvBiX,EAAe,IAEfA,EAAeY,EAAkB,GAAG7X,aAGH,IAAjC6X,EAAkB,GAAGrX,eACagB,IAAlCqW,EAAkB,GAAGrX,UACa,OAAlCqX,EAAkB,GAAGrX,UACoB,IAAzCqX,EAAkB,GAAGrX,SAASzG,OAE9ByS,EACE,kGAGFA,EAAYqL,EAAkB,GAAGrX,UA6HRuX,CAAiBnP,EAAUxJ,KAH5C,SAKGwJ,EAAUtJ,MAJNsJ,EAAUxJ,SASrB,KACJ,eAACuE,EAAA,EAAD,WACE,eAACA,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,2BACZC,SAlIV,SAAsBnH,GACpBA,EAAEE,iBACF8X,EAAQhY,EAAEqG,OAAO/K,QAiITA,MAAOkE,OAIX,eAACmF,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,0BACA,cAACD,EAAA,EAAK2M,QAAN,CACEC,KAAK,OACLrK,YAAY,kCACZC,SAvIV,SAA6BnH,GAC3BA,EAAEE,iBACF+X,EAAejY,EAAEqG,OAAO/K,QAsIhBA,MAAOiP,OAIX,eAAC5F,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,2BACA,cAAC,EAAD,CAAiBuD,UAzIzB,SAAwB8I,GACtBjT,EAAeiT,GACf,IAAMC,EAAa,+EAA2ED,EAAM,GAAGzR,MACvGgO,EAAY0D,WAuIW1O,IAAhBzE,EACC,oBAAIgF,MAAO,CAAEyO,cAAe,OAAQC,YAAa,MAAOzM,UAAW,OAAnE,SACGjH,EAAYsJ,KAAI,SAACrF,GAAD,OACf,+BACE,cAAC,IAAD,CAAS6C,MAAM,QAAQL,KAAM,GAAIzB,MAAO,CAAEiC,UAAW,UACrD,sBACEjC,MAAO,CACL8B,MAAO,UACPG,UAAW,OACXd,cAAe,UAEjB,cAAY,iBANd,SAQGlC,EAAKxC,SAVDwC,EAAKxC,WAehB,QAGN,eAACmF,EAAA,EAAK0M,MAAN,WACE,cAAC1M,EAAA,EAAKC,MAAN,oBACA,cAACjB,EAAA,EAAD,CAAOC,IAAK2J,EAAUsJ,WAAS,OAGjC,eAAClS,EAAA,EAAK0M,MAAN,WACE,cAAC9M,EAAA,EAAD,CAAQE,QAxJhB,WACE,IAAMmF,EAAY,CAChBxJ,GAAI/B,EACJiC,KAAMd,EACNwB,YAAauJ,EACb/I,SAAU+L,EACVjM,KAAMxD,EAAMuQ,MAGRxM,EAAU,IAAIC,SAEpB/D,EAAYgE,SAAQ,SAACC,GACnBH,EAAQI,OAAO,OAAQD,MAGzBH,EAAQI,OAAO,YAAaC,KAAKC,UAAUyH,IAE3CpP,QAAQC,IAAI,iBAAkBmP,GAC9B,IACExQ,MAAK,wEAE8DiB,4DACjE,CACEC,OAAQ,OACRf,KAAMsI,IAER1C,MAAK,SAAC9F,GACN,IAAKA,EAAS2f,GACZ,MAAMC,MAAM,0BAUd,OAPAd,EAAe,qBAEf5V,YAAW,WACTuO,IACAqH,EAAe,MACd,KAEI9e,KAET,MAAO6f,GACP1e,QAAQC,IAAI,mBAAoBye,KA+G5B,kBACA,cAAC3U,EAAA,EAAD,CAAQE,QAASqM,EAAa/N,MAAO,CAAEuB,WAAY,OAAnD,mBAGA,cAACK,EAAA,EAAKC,MAAN,UAAasT,e,4BC7IRiB,GAnFH,SAACrb,GACX,MAA4BnE,IAAMsD,UAAkB,GAApD,mBAAOsZ,EAAP,KAAeC,EAAf,KAMA,SAAS4C,IACP5C,GAAU,GAGZ,OACE,eAAC,aAAD,CACED,OAAQA,EACR8C,cAAe,SAAC7P,GAAD,OAXnB,SAA2BA,GACzBgN,EAAUhN,EAAM+M,QAUY+C,CAAkB9P,IAC5C+P,WAAYzb,EAAMyb,WAClBC,iBAAkB1b,EAAM0b,iBAJ1B,UAME,eAAC,IAAD,CACEC,GAAG,IACHxU,UAAU,YACVR,QAAS,WACP2U,KAJJ,UAOE,cAAC,IAAD,CAAQrW,MAAO,CAAEgB,YAAa,MAAOG,cAAe,YAPtD,UAUA,eAAC,IAAD,CACEuV,GAAG,YACHxU,UAAU,YACVR,QAAS,WACP2U,KAJJ,UAOE,cAAC,IAAD,CAAYrW,MAAO,CAAEgB,YAAa,SAPpC,cAUA,eAAC,IAAD,CACE0V,GAAG,UACHxU,UAAU,YACVR,QAAS,WACP2U,KAJJ,UAOE,cAAC,KAAD,CAAerW,MAAO,CAAEgB,YAAa,SAPvC,kBAUA,eAAC,IAAD,CACE0V,GAAG,UACHxU,UAAU,YACVR,QAAS,WACP2U,KAJJ,UAOE,cAAC,KAAD,CAAUrW,MAAO,CAAEgB,YAAa,SAPlC,YAUA,eAAC,IAAD,CACE0V,GAAG,OACHxU,UAAU,YACVR,QAAS,WACP2U,KAJJ,UAOE,cAAC,IAAD,CAAOrW,MAAO,CAAEgB,YAAa,SAP/B,SAUA,uBACA,eAAC,IAAD,CACE0V,GAAG,cACHxU,UAAU,YACVR,QAAS,WACP2U,KAJJ,UAOE,cAAC,IAAD,CAAiBrW,MAAO,CAAEgB,YAAa,SAPzC,qBClEA2V,GAAYC,aAAS,kBAAM,uDAG3BC,GAAa,kBACjB,gCACE,gDACA,4CACa,cAAC,IAAD,CAAMH,GAAIpf,kBAAV,sBADb,WAMEwf,GAAkB,CACtB7W,aAAc,OACdoO,gBAAiB,qBACjBY,QAAS,cACTC,WAAY,SACZpN,MAAO,sBACPiV,UAAW,2EACX7W,QAAS,MACT8W,aAAc,MACd7W,OAAQ,wBACRc,SAAU,OACVX,WAAY,qBACZ2W,IAAK,MACLC,UAAW,mBACXtE,SAAU,QACVrR,WAAY,OAGdhH,OAAO4c,UAAY5c,OAAO4c,WAAa,GACvC,IAAMA,GAAY5c,OAAO4c,UAgMVC,UA9Lf,WACE,MAAkDld,mBAAiB,IAAnE,mBAAOmd,EAAP,KAA0BC,EAA1B,KACA,EAAkDpd,mBAAiB,IAAnE,mBAAOqd,EAAP,KAA0BC,EAA1B,KACA,EAAgDtd,mBAAiB,IAAjE,mBAAOud,EAAP,KAAyBC,EAAzB,KACA,EAAwCxd,mBAAiB,IAAzD,mBAAOyd,EAAP,KAAqBC,EAArB,KAEA3f,qBAAU,WACRkf,GAAU1b,MAAK,WACb,IAAMoc,EAAa,CACjBC,MAAM,GAAD,OAAKxgB,wCACVygB,8BAA8B,EAC9BC,cAAe,CACbC,UAAW,CACTC,SAAS,EACTC,cAAe,6DACfC,iBAAkB,QAClBC,iBAAkB,YAClBC,WAAY,CACVC,KAAM,CACJ,CACEC,IAAK,SACL3F,MAAO,oBAMjB4F,oBAAqB,CACnB1U,MAAO,sBACP7I,QAAS,4BAIbic,GAAU1b,MAAK,WACb0b,GAAUuB,qBAAuB,CAAEC,MAAO,mBAC1CxB,GAAUyB,oBAAsB,sCAChCzB,GAAU0B,4BACR,6CACF1B,GAAU2B,KAAKjB,WAGlB,IAEH,IAAMkB,EACJ,cAAC,GAAD,CACE7E,aAAc,SAAC5d,GACT,YAAaA,IACfkhB,EAAqBlhB,EAAS0iB,WAAWC,OACzCvB,EAAoBphB,EAAS0iB,WAAWvc,MACxCmb,EAAgBthB,EAAS0iB,WAAWxO,UACpC8M,EAAqBhhB,EAAS4iB,aAMhCC,EAAgB,WACpB7B,EAAqB,KAGvB,OACE,eAAC,WAAD,WACGD,IACwB,sBAAtBE,GACuB,yBAAtBA,GACsB,yBAAtBA,GACsB,wBAAtBA,GACsB,6BAAtBA,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAe6B,SAAU9hB,iBAAzB,SACE,sBAAK4K,UAAU,MAAM5G,GAAG,kBAAkB0E,MAAO,CAAEgC,OAAQ,QAA3D,UACE,cAAC,GAAD,CAAKyU,iBAAkB,kBAAmBD,WAAY,cACtD,qBAAKlb,GAAG,YAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE+d,OAAK,EACL3d,KAAK,IACL4d,OAAQ,kBAAM,cAAC3C,GAAD,CAAW/F,SAAU6G,OAErC,cAAC,IAAD,CACE4B,OAAK,EACL3d,KAAK,UACL4d,OAAQ,SAACve,GAAD,OAAW,cAAC,EAAD,eAAYA,OAEjC,cAAC,IAAD,CACEse,OAAK,EACL3d,KAAK,UACL4d,OAAQ,SAACve,GAAD,OACN,cAAC,EAAD,CACEuQ,KAAMiM,EACNhc,oBAAqBR,OAI3B,cAAC,IAAD,CACEse,OAAK,EACL3d,KAAK,YACL4d,OAAQ,SAACve,GAAD,OACN,cAAC,EAAD,CACEQ,oBAAqBR,EACrB6V,SAAU6G,OAIhB,cAAC,IAAD,CAAO4B,OAAK,EAAC3d,KAAK,OAAO4d,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CACED,OAAK,EACL3d,KAAK,UACL4d,OAAQ,SAACve,GAAD,OAAW,cAAC,GAAD,eAAiBA,OAEtC,cAAC,IAAD,CACEse,OAAK,EACL3d,KAAK,cACL4d,OAAQ,kBAAM,cAAC,GAAD,CAAehO,KAAMiM,OAErC,cAAC,IAAD,CAAOgC,UAAW1C,eAKzBY,EACC,sBACEzX,MAAO,CACL4S,SAAU,QACV4G,OAAQ,IACRpe,MAAO,MACP4F,YAAa,MACbgB,OAAQ,QANZ,UASE,cAAC,gBAAD,CACEsX,OAAQ,SAACG,GAAD,OACN,yBAAQ/X,QAAS+X,EAAY/X,QAAS1B,MAAO8W,GAA7C,UACE,qBACE9W,MAAO,CACLgB,YAAa,OACb+P,WAAY,qBACZ7Q,QAAS,OACT8W,aAAc,OALlB,SAQE,cAAC,IAAD,CAAUvV,KAAM,OAElB,sBAAMzB,MAAO,CAAEE,QAAS,qBAAsBgB,WAAY,KAA1D,wBAKJoT,SAAQ,UAAKhd,4EACbid,WAAW,SACXmF,gBAAiBP,IAEnB,sBAAKjX,UAAU,aAAalC,MAAO,CAAEM,WAAY,YAAjD,UACE,uBAAMN,MAAO,CAAEuB,WAAY,QAA3B,6BACmBkW,KAEnB,cAAC7W,EAAA,EAAD,CACEC,IAAK8W,EACL3X,MAAO,CAAEgC,OAAQ,OAAQT,WAAY,OACrCoY,eAAa,UAIjB,QAGTtC,EAAoB,KAAO0B,EAE3B1B,GAEuB,sBAAtBE,GACsB,yBAAtBA,GACsB,yBAAtBA,GACsB,wBAAtBA,GAEFA,EAAkBvf,OAAS,EACzB,qEACqC,IACnC,mBAAG+D,KAAK,0BAAR,+BACA,cAAC,gBAAD,CACEuY,SAAQ,UAAKhd,4EACbid,WAAW,SACXmF,gBAAiBP,OAGnB,U,gCC9OV,0EAoEezU,IA3DK,kBAClB,eAAC,IAAD,CAAQkV,GAAG,OAAOjY,QAAQ,OAA1B,UACE,cAAC,IAAOkY,MAAR,CAAc9d,KAAK,QAAnB,gCACA,eAAC,IAAD,CAAKmG,UAAU,UAAf,UACE,cAAC,IAAD,CAAMwU,GAAG,IAAT,SACE,eAAC,IAAIoD,KAAL,CAAU/d,KAAK,QAAf,UACE,cAAC,IAAD,CAAQ0F,KAAM,GAAIzB,MAAO,CAAEC,aAAc,MAAOe,YAAa,SAD/D,YAKF,cAAC,IAAD,CAAM0V,GAAG,YAAT,SACE,eAAC,IAAIoD,KAAL,CAAU/d,KAAK,YAAf,UACE,cAAC,IAAD,CAAY0F,KAAM,GAAIzB,MAAO,CAAEC,aAAc,MAAOe,YAAa,SADnE,gBAKF,cAAC,IAAD,CAAM0V,GAAG,UAAT,SACE,eAAC,IAAIoD,KAAL,CAAU/d,KAAK,WAAf,UACE,cAAC,IAAD,CACE0F,KAAM,GACNK,MAAM,QACN9B,MAAO,CAAEC,aAAc,MAAOe,YAAa,SAJ/C,oBASF,cAAC,IAAD,CAAM0V,GAAG,UAAT,SACE,eAAC,IAAIoD,KAAL,CAAU/d,KAAK,UAAf,UACE,cAAC,IAAD,CACE0F,KAAM,GACNK,MAAM,UACN9B,MAAO,CAAEC,aAAc,MAAOe,YAAa,SAJ/C,cASF,cAAC,IAAD,CAAM0V,GAAG,OAAT,SACE,eAAC,IAAIoD,KAAL,CAAU/d,KAAK,UAAf,UACE,cAAC,IAAD,CACE0F,KAAM,GACNK,MAAM,OACN9B,MAAO,CAAEC,aAAc,MAAOe,YAAa,SAJ/C,WASF,cAAC,IAAD,CAAM0V,GAAG,cAAT,SACE,eAAC,IAAIoD,KAAL,CAAU/d,KAAK,UAAf,UACE,cAAC,IAAD,CACE0F,KAAM,GACNzB,MAAO,CAAEC,aAAc,MAAOe,YAAa,SAC1C,IAJL","file":"static/js/5.b4977a87.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport * as H from 'history';\nimport { useEffect, useLayoutEffect, useState } from 'react';\n\n//https://stackoverflow.com/questions/56457935/typescript-error-property-x-does-not-exist-on-type-window\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line\n    OneSignal: any;\n  }\n}\n\nexport enum AtTheBoothBakery_Type {\n  Delivered = 'Delivered',\n  Ordered = 'ordered',\n  Today = 'Today',\n}\n\nexport interface Order {\n  Id: number;\n  Name: string | undefined;\n  Area: string | undefined;\n  Address: string | undefined;\n  City: string | undefined;\n  State: string | undefined;\n  ZipCode: string | undefined;\n  OrderType: string | undefined;\n  OrderStatus: string | undefined;\n  Quantity: number;\n  Price: string | undefined;\n  Description: string | undefined;\n  DeliveryDate: string;\n  DeliveryDateEnd: string;\n  OrderDate: Date;\n  PrePaid: boolean;\n  TrafficSource: string | undefined;\n  User: string | undefined;\n  CreatedBy: string | undefined;\n  ImageUrl: string | undefined;\n  OrderImageUrl: string | undefined;\n  PorchDropoff: boolean;\n  Employee: number;\n  EmployeeName: string | undefined;\n}\n\nexport type Orders = Array<Order>;\n\nexport interface OrderType {\n  Id: number;\n  Name: string | undefined;\n  Description: string | undefined;\n  ImageUrl: string | undefined;\n  User: string | undefined;\n}\n\nexport interface RouteComponentProps<P> {\n  match: match<P>;\n  location: H.Location;\n  history: H.History;\n  // eslint-disable-next-line\n  staticContext?: any;\n}\n\nexport interface match<P> {\n  params: P;\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nexport async function emeraldGet<T>(request: RequestInfo): Promise<T> {\n  const response = await fetch(request);\n  const body = await response.json();\n  return body;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useOrders = (initial: Order[] = [], emeraldOrderTypes: OrderType[] = []) => {\n  const [orders, setOrders] = React.useState<Order[]>(initial);\n  const [orderTypes, setOrderType] = React.useState<OrderType[]>(emeraldOrderTypes);\n\n  const [newOrder, setNewOrder] = React.useState<string>('');\n  useEffect(() => {\n    // fetch(`http://localhost:7071/api/Function1`)\n\n    fetchEmeraldOrders();\n    fetchEmeraldOrderTypes();\n  }, []);\n\n  async function fetchEmeraldOrders(): Promise<void> {\n    try {\n      const getOrders = new Request(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrders);\n\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function fetchEmeraldOrderTypes(): Promise<void> {\n    try {\n      const getOrderTypes = new Request(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await emeraldGet<Order[]>(getOrderTypes);\n\n      setOrderType(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function getEmeraldOrders(): Promise<Order[]> {\n    return new Promise((resolve) => {\n      if (orders.length > 0) {\n        resolve(orders);\n      }\n    });\n  }\n\n  return {\n    orders,\n    orderTypes,\n    newOrder,\n    setNewOrder,\n    setOrders,\n    getEmeraldOrders,\n    fetchEmeraldOrders,\n  };\n};\n\nconst EmeraldContext = React.createContext<ReturnType<typeof useOrders> | null>(null);\n// eslint-disable-next-line\nexport const useEmeraldContext = () => React.useContext(EmeraldContext)!;\n\nexport function EmeraldProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <EmeraldContext.Provider value={useOrders([])}>{children}</EmeraldContext.Provider>\n  );\n}\n\nexport type OnChangeDateCallback = (date: Date | Date[]) => void;\n\nexport function formatDate(\n  date: string | Date,\n  withTime: boolean,\n  withSlashes: boolean\n): string {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const dateF = new Date(date);\n  const day = dateF.getDate();\n  const monthIndex = dateF.getMonth();\n  const year = dateF.getFullYear();\n  const time = dateF.toLocaleTimeString();\n  if (withTime) return `${monthIndex + 1}/${day}/${year} ${time}`;\n  if (withSlashes) return `${monthIndex + 1}/${day}/${year}`;\n\n  return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\nexport function calculateDate(date: string): number {\n  // JavaScript program to illustrate\n  // calculation of no. of days between two date\n\n  // To set two dates to two variables\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const DifferenceInTime = date2.getTime() - date1.getTime();\n\n  // To calculate the no. of days between two dates\n  const DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n\n  return Math.floor(DifferenceInDays);\n}\n\nexport function isLeapYear(yearSelected: number): boolean {\n  const isLeapYearMade = yearSelected % 4 === 0;\n  const AndEvenDivisible = yearSelected % 100 !== 0;\n  const OrEvenDiv100 = yearSelected % 400 === 0;\n  const isItEvenLeapYear = (isLeapYearMade && AndEvenDivisible) || OrEvenDiv100;\n  return isItEvenLeapYear;\n}\n\nexport function calculateDays(month: string, yearSelected: string): number {\n  let daysArrayLength = 31;\n  if (month === '' || yearSelected === '') {\n    return daysArrayLength;\n  }\n  if (\n    month === '01' ||\n    month === '03' ||\n    month === '05' ||\n    month === '07' ||\n    month === '08' ||\n    month === '10' ||\n    month === '12'\n  ) {\n    // these are 31 days\n    daysArrayLength = MonthDays.FullMonth;\n  } else if (month === '02' && isLeapYear(Number(yearSelected)) === true) {\n    daysArrayLength = MonthDays.LeapYear;\n  } else if (month === '02') {\n    daysArrayLength = MonthDays.NonLeapYear;\n  } else if (month === '04' || month === '06' || month === '09' || month === '11') {\n    daysArrayLength = MonthDays.Thirty;\n  }\n  return daysArrayLength;\n}\n\nexport function isValidDate(day: number, month: number, year: number): boolean {\n  return day <= calculateDays(month.toString(), year.toString());\n}\n\nexport function useMediaQuery(): number[] {\n  const [screenSize, setScreenSize] = useState([0, 0]);\n\n  useLayoutEffect(() => {\n    function updateScreenSize(): void {\n      setScreenSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateScreenSize);\n    updateScreenSize();\n    return () => window.removeEventListener('resize', updateScreenSize);\n  }, []);\n\n  return screenSize;\n}\n\nconst MonthDays = { FullMonth: 31, Thirty: 30, NonLeapYear: 28, LeapYear: 29 };\nObject.freeze(MonthDays);\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Card, Col, Row, Image, Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { Order, useEmeraldContext, useMediaQuery } from '../Interfaces/EmeraldTypes';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  order: Order;\n  address: string;\n  parent: 'calender' | 'other';\n};\n\nfunction OrderCard(props: Props): JSX.Element {\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [message, setMessage] = React.useState<string>('');\n  const { fetchEmeraldOrders } = useEmeraldContext();\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    const path = props.order.OrderImageUrl;\n    if (path !== undefined && path !== null) {\n      const fileName = path.replace(/^.*[\\\\/]/, '');\n      Download(path, fileName);\n    }\n  }, []);\n\n  function selectOrder(id: number): void {\n    props.routeComponentProps.history.push(`/detail`, id);\n  }\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    //a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    // eslint-disable-next-line\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  function updateBakeryOrder(\n    e: React.MouseEvent<HTMLElement>,\n    orderStatus: string\n  ): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id: props.order.Id,\n      Name: props.order.Name,\n      Area: props.order.Area,\n      Address: props.order.Address,\n      City: props.order.City,\n      State: props.order.State,\n      ZipCode: props.order.ZipCode,\n      OrderType: props.order.OrderType,\n      OrderStatus: orderStatus,\n      Quantity: props.order.Quantity,\n      Price: props.order.Price,\n      Description: props.order.Description,\n      DeliveryDate: props.order.DeliveryDate,\n      DeliveryDateEnd: props.order.DeliveryDateEnd,\n      OrderDate: props.order.OrderDate,\n      PrePaid: props.order.PrePaid,\n      TrafficSource: props.order.TrafficSource,\n      User: props.order.CreatedBy,\n      CreatedBy: props.order.CreatedBy,\n      ImageUrl: props.order.ImageUrl,\n      OrderImageUrl: props.order.OrderImageUrl,\n      PorchDropoff: props.order.PorchDropoff,\n      Employee: props.order.Employee,\n      EmployeeName: props.order.EmployeeName,\n    };\n\n    console.log('payload', orderContent, uploadFiles);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setMessage(`Order was ${orderStatus}`);\n          setTimeout(() => {\n            fetchEmeraldOrders();\n            setMessage(``);\n          }, 3000);\n        } else {\n          setMessage(`Order was not saved correctly.`);\n          setTimeout(() => {\n            setMessage(``);\n          }, 3000);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  let OrderImageUrl = '';\n\n  const mapAddress = `${props.order.Address} ${props.order.City},${props.order.State}`;\n  if (\n    props.order.OrderImageUrl === 'NONE' ||\n    props.order.OrderImageUrl === null ||\n    props.order.OrderImageUrl === undefined\n  ) {\n    OrderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (props.order.OrderImageUrl !== undefined) {\n      OrderImageUrl = props.order.OrderImageUrl;\n    }\n  }\n  const beginDeliveryDate = new Date(props.order.DeliveryDate);\n  const endDeliveryDate = new Date(props.order.DeliveryDateEnd);\n\n  return width < 769 ? (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n      }}\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ marginRight: '5px' }}>\n              {props.order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n            </span>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  ) : (\n    <Card\n      key={props.order.Id}\n      style={{\n        marginBottom: '3px',\n        padding: '5px',\n        border: 'black',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n        fontFamily: 'Andika-R',\n        height: props.parent === 'calender' ? '186px' : '253px',\n        width: props.parent === 'calender' ? '430px' : '790px',\n        marginTop: 'auto',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n      }}\n      className='text-center'\n    >\n      <Row>\n        {props.parent === 'other' ? (\n          <Col>\n            <Card.Img as={Image} src={OrderImageUrl} fluid={true} />\n          </Col>\n        ) : null}\n\n        <Col>\n          <Card.Title>\n            <span style={{ marginRight: '5px' }}>\n              {props.order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n            </span>\n            <span style={{ fontSize: 'large', fontWeight: 'bold' }}>\n              {props.order.Name}\n            </span>\n            <br />\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {props.order.PorchDropoff ? (\n                <span role='img' aria-label='door' style={{ fontSize: '26px' }}>\n                  🚪\n                </span>\n              ) : null}\n              {props.order.PrePaid ? (\n                <span role='img' aria-label='money' style={{ fontSize: '26px' }}>\n                  💵\n                </span>\n              ) : null}\n\n              {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n            <span style={{ fontSize: 'initial' }}> to </span>\n            <span style={{ fontSize: 'small', verticalAlign: 'baseline' }}>\n              {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                timeStyle: 'short',\n              } as Intl.DateTimeFormatOptions)}`}\n            </span>\n          </Card.Title>\n          <Card.Text>\n            <span style={{ fontWeight: 'bold' }}>Quantity:</span>\n            <span style={{ marginLeft: '5px' }}>{props.order.Quantity}</span>\n            {props.parent === 'other' ? (\n              <>\n                <br />\n                {props.order.Description !== undefined &&\n                props.order.Description.length > 0 ? (\n                  <>\n                    <span style={{ fontWeight: 'bold' }}>Description: </span>\n                    <span>{props.order.Description}</span>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <br />\n            <Button size='sm' onClick={() => selectOrder(props.order.Id)}>\n              Edit\n            </Button>\n            <Button\n              size='sm'\n              variant='success'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Delivered')}\n            >\n              Delivered\n            </Button>\n            <Button\n              variant='danger'\n              size='sm'\n              style={{ marginLeft: '5px' }}\n              onClick={(e) => updateBakeryOrder(e, 'Cancelled')}\n            >\n              Cancel\n            </Button>\n            {message.length > 0 ? (\n              <Form.Label\n                style={{ marginLeft: '5px', color: '#28a745', fontSize: 'x-large' }}\n              >\n                {message}\n              </Form.Label>\n            ) : null}\n          </Card.Text>\n          <Card.Text style={{ fontSize: 'medium' }}>\n            <FaMapSigns />\n            <a href={props.address} style={{ marginLeft: '5px' }}>\n              {mapAddress}\n            </a>\n          </Card.Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default OrderCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Jumbotron,\n  Dropdown,\n  DropdownButton,\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport { Order } from './Interfaces/EmeraldTypes';\nimport {\n  useEmeraldContext,\n  AtTheBoothBakery_Type,\n  useMediaQuery,\n} from './Interfaces/EmeraldTypes';\nimport OrderCard from './Common/OrderCard';\nimport BoothNavbar from './Common/BoothNavbar';\n\nconst sectionStyle = {\n  marginTop: '5px',\n  fontFamily: 'Andika-R',\n};\n\ntype Props = RouteComponentProps;\n\nfunction Orders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [displayOrders, setDisplayOrders] = useState(orders);\n  const [filterType, setFilterType] = useState<string>('Delivered');\n  const [width] = useMediaQuery();\n\n  // eslint-disable-next-line\n  const handleSelect = (e: any) : void => {\n    setFilterType(e);\n\n    let atbOrders: Array<Order> = [];\n\n    switch (e) {\n      case AtTheBoothBakery_Type.Delivered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Delivered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Ordered:\n        atbOrders = orders.filter((order: Order) => {\n          return order.OrderStatus === 'Ordered';\n        });\n        break;\n      case AtTheBoothBakery_Type.Today:\n        // eslint-disable-next-line no-case-declarations\n        const today = new Date();\n\n        atbOrders = orders\n          .filter((day) => {\n            if (today) {\n              if (\n                moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                moment(today).format('MM-DD-YYYY')\n              ) {\n                return day;\n              }\n            }\n          })\n          .filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          );\n        break;\n      default:\n        atbOrders = orders;\n    }\n\n    setDisplayOrders(atbOrders);\n  };\n\n  const onSearchKey = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const regExOrder = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return (\n        (order.Name && order.Name.match(regExOrder)) ||\n        (order.Address && order.Address.match(regExOrder))\n      );\n    });\n\n    setDisplayOrders(searchedOrders);\n  };\n\n  if (orders.length === 0) {\n    return <div>Orders not ready.</div>;\n  }\n\n  // Top is Mobile view. Bottom view is Desktop.\n  return width < 769 ? (\n    <Container fluid style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown style={{ marginBottom: '5px' }}>\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            style={{ marginTop: '5px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  ) : (\n    <Container style={sectionStyle}>\n      <Row>\n        <Col className='text-center'>\n          <BoothNavbar />\n          <Jumbotron style={{ marginTop: '5px' }}>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Orders\n              <Badge variant='success' style={{ marginLeft: '3px' }}>\n                {displayOrders.length}\n              </Badge>\n            </h1>\n            <label>\n              {filterType === 'Delivered' ? <span>🚚{filterType}</span> : filterType}\n            </label>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Dropdown\n            className='text-right'\n            style={{ marginBottom: '5px', marginRight: '250px' }}\n          >\n            <DropdownButton title='Orders filter' onSelect={handleSelect}>\n              <Dropdown.Item eventKey='Today'>Today</Dropdown.Item>\n              <Dropdown.Item eventKey='Delivered'>Delivered</Dropdown.Item>\n              <Dropdown.Item eventKey='ordered'>Ordered</Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </Col>\n        <Col>\n          <input\n            className='float-left'\n            style={{ marginTop: '5px', marginLeft: '173px' }}\n            placeholder='Search Name or Address'\n            onChange={onSearchKey}\n          ></input>\n        </Col>\n      </Row>\n\n      <div style={{ textAlign: 'left', fontFamily: 'AmaticSC-Regular' }}>\n        {displayOrders.map((order: Order) => {\n          const mapAddress = `${order.Address} ${order.City},${order.State}`;\n          const encodedAddress = encodeURI(mapAddress);\n          const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n          return (\n            <OrderCard\n              key={order.Id}\n              routeComponentProps={props}\n              order={order}\n              address={addressToUse}\n              parent='other'\n            />\n          );\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default Orders;\n","import * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa/index';\n\nconst SpinSpinner = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(359deg);\n      transform: rotate(359deg);\n    }\n  }\n  animation: spin 1.5s infinite;\n`;\n\ninterface Props {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  uploadDoc: Function;\n}\n\nfunction EmeraldDropzone(props: Props): React.ReactElement {\n  const [isUploading, set] = useState(false);\n  const onDrop = useCallback((acceptedFiles: Array<File>) => {\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n\n    // fire function uploadDoc from props\n    props.uploadDoc(acceptedFiles, set(false));\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: '.jpeg,.png,.jpg',\n  });\n\n  function ClickUpload(e: React.MouseEvent): void {\n    e.preventDefault();\n    set(true);\n  }\n\n  return (\n    <div id='uploadDoc' {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <React.Fragment>\n          <Button style={{ width: '100%' }} onClick={ClickUpload}>\n            Upload File(s)\n          </Button>\n          {isUploading === true ? (\n            <SpinSpinner style={{ marginTop: '5px' }} data-testid='spinner' />\n          ) : null}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default EmeraldDropzone;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  Container,\n  Jumbotron,\n  Form,\n  Button,\n  Accordion,\n  Card,\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport moment from 'moment';\nimport usePlacesAutocomplete, { getGeocode, getZipCode } from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { FaCheck } from 'react-icons/fa';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport '../css/createOrder.css';\nimport {\n  calculateDays,\n  Order,\n  useEmeraldContext,\n  OrderType,\n  Orders,\n  useMediaQuery,\n} from '../Interfaces/EmeraldTypes';\nimport BoothNavbar from '../Common/BoothNavbar';\n\ntype Props = {\n  routeComponentProps: RouteComponentProps;\n  user: string;\n};\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(2), (val, index) => year - index);\n\nconst times = [\n  '05:00 AM',\n  '05:30 AM',\n  '06:00 AM',\n  '06:30 AM',\n  '07:00 AM',\n  '07:30 AM',\n  '08:00 AM',\n  '08:30 AM',\n  '09:00 AM',\n  '09:30 AM',\n  '10:00 AM',\n  '10:30 AM',\n  '11:00 AM',\n  '11:30 AM',\n  '12:00 PM',\n  '12:30 PM',\n  '13:00 PM',\n  '13:30 PM',\n  '14:00 PM',\n  '14:30 PM',\n  '15:00 PM',\n  '15:30 PM',\n  '16:00 PM',\n  '16:30 PM',\n  '17:00 PM',\n  '17:30 PM',\n  '18:00 PM',\n  '18:30 PM',\n  '19:00 PM',\n  '19:30 PM',\n  '20:00 PM',\n  '20:30 PM',\n  '21:00 PM',\n  '21:30 PM',\n  '22:00 PM',\n  '22:30 PM',\n  '23:00 PM',\n  '23:30 PM',\n  '24:00 AM',\n];\n\nfunction CreateOrder(props: Props): JSX.Element {\n  const [nameOrders, setNameOrders] = React.useState<Orders>([]);\n  const [name, nameSet] = React.useState<string | undefined>(undefined);\n  const [area, areaSet] = React.useState<string | undefined>(undefined);\n  const [address, addressSet] = React.useState<string | undefined>(undefined);\n  const [city, citySet] = React.useState<string | undefined>(undefined);\n  const [state, stateSet] = React.useState<string | undefined>(undefined);\n  const [zipCode, zipCodeSet] = React.useState<string | undefined>(undefined);\n  const [orderType, orderTypeSet] = React.useState<string | undefined>(undefined);\n  const [orderStatus, orderStatusSet] = React.useState<string | undefined>(undefined);\n  const [quantity, quantitySet] = React.useState<number>(0);\n  const [price, priceSet] = React.useState<string | undefined>(undefined);\n  const [prepaid, prepaidSet] = React.useState<boolean>(false);\n  const [porchDropoff, setPorchDropoff] = React.useState<boolean>(false);\n  const [description, descriptionSet] = React.useState<string | undefined>(undefined);\n  const [trafficSource, trafficSourceSet] = React.useState<string | undefined>(undefined);\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [deliveryMonth, deliveryMonthSet] = React.useState<string | undefined>(undefined);\n  const [deliveryDay, deliveryDaySet] = React.useState<string | undefined>(undefined);\n  const [deliveryYear, deliveryYearSet] = React.useState<string | undefined>(undefined);\n  const [daysLength, daysLengthSet] = React.useState<number>(31);\n  const [beginTime, beginTimeSet] = React.useState<string | undefined>(undefined);\n  const [deliveryMonthEnd, deliveryMonthEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryDayEnd, deliveryDayEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  const [deliveryYearEnd, deliveryYearEndSet] = React.useState<string | undefined>(\n    undefined\n  );\n  // const [daysLengthEnd, daysLengthEndSet] = React.useState<number>(31);\n  const [endTime, endTimeSet] = React.useState<string | undefined>(undefined);\n  // validation state\n  const [nameValidated, setNameValidated] = React.useState<boolean>(false);\n  const [orderTypeValidated, setOrderTypeValidated] = React.useState<boolean>(false);\n  const [orderStatusValidated, setOrderStatusValidated] = React.useState<boolean>(false);\n  const [quantityValidated, setQuantityValidated] = React.useState<boolean>(false);\n  const [priceValidated, setPriceValidated] = React.useState<boolean>(false);\n  const [trafficSourceValidated, setTrafficSourceValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryMonthValidated, setDeliveryMonthValidated] = React.useState<boolean>(\n    false\n  );\n  const [deliveryDayValidated, setDeliveryDayValidated] = React.useState<boolean>(false);\n  const [deliveryYearValidated, setDeliveryYearValidated] = React.useState<boolean>(\n    false\n  );\n  const [beginTimeValidated, setBeginTimeValidated] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateMonthEndValidated,\n  //   setDeliveryDateMonthEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateDayEndValidated,\n  //   setDeliveryDateDayEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [\n  //   deliveryDateYearEndValidated,\n  //   setdeliveryDateYearEndValidated,\n  // ] = React.useState<boolean>(false);\n  // const [endTimeValidated, setEndTimeValidated] = React.useState<boolean>(false);\n  const [isSubmitDisabled, setIsSubmitDisabled] = React.useState<boolean>(true);\n  // other\n  const [isOrderSubmitted, setOrderSubmitted] = React.useState<boolean>(false);\n  // const [filteredBeginTime, setFilteredBeginTime] = React.useState<string>('');\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [isPickupClicked, setIsPickupClicked] = React.useState<boolean>(false);\n  const [width] = useMediaQuery();\n\n  const {\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n    },\n    debounce: 300,\n  });\n\n  const { orders, orderTypes } = useEmeraldContext();\n\n  useEffect(() => {\n    if (props.routeComponentProps.location.state !== undefined) {\n      const filteredEditOrder = orders.filter(\n        (order) => order.Id === props.routeComponentProps.location.state\n      );\n\n      console.log('order editing', filteredEditOrder);\n\n      if (filteredEditOrder.length > 0) {\n        setIsSubmitDisabled(false);\n        nameSet(filteredEditOrder[0].Name);\n        areaSet(filteredEditOrder[0].Area);\n        addressSet(filteredEditOrder[0].Address);\n        citySet(filteredEditOrder[0].City);\n        stateSet(filteredEditOrder[0].State);\n        zipCodeSet(filteredEditOrder[0].ZipCode);\n        orderTypeSet(filteredEditOrder[0].OrderType);\n        orderStatusSet(filteredEditOrder[0].OrderStatus);\n        quantitySet(filteredEditOrder[0].Quantity);\n        priceSet(filteredEditOrder[0].Price);\n        prepaidSet(filteredEditOrder[0].PrePaid);\n        setPorchDropoff(filteredEditOrder[0].PorchDropoff);\n        setEmployee(filteredEditOrder[0].EmployeeName);\n\n        // delivery date start\n        const deliveryDateStart = moment(filteredEditOrder[0].DeliveryDate);\n        // console.log('start time', deliveryDateStart.format('HH:mm A'));\n        deliveryMonthSet(deliveryDateStart.format('MM'));\n        deliveryDaySet(deliveryDateStart.format('DD'));\n        deliveryYearSet(deliveryDateStart.format('YYYY'));\n        beginTimeSet(deliveryDateStart.format('HH:mm A'));\n\n        // delivery date end\n        const deliveryDateEnd = moment(filteredEditOrder[0].DeliveryDateEnd);\n        deliveryMonthEndSet(deliveryDateEnd.format('MM'));\n        deliveryDayEndSet(deliveryDateEnd.format('DD'));\n        deliveryYearEndSet(deliveryDateEnd.format('YYYY'));\n        endTimeSet(deliveryDateEnd.format('HH:mm A'));\n\n        trafficSourceSet(filteredEditOrder[0].TrafficSource);\n        descriptionSet(filteredEditOrder[0].Description);\n        if (\n          filteredEditOrder[0].OrderImageUrl !== null ||\n          filteredEditOrder[0].OrderImageUrl !== undefined\n        ) {\n          setImageUrl(filteredEditOrder[0].OrderImageUrl);\n          const path = filteredEditOrder[0].OrderImageUrl;\n          if (path !== undefined && path !== null) {\n            const fileName = path.replace(/^.*[\\\\/]/, '');\n            Download(path, fileName);\n          }\n        }\n      }\n    }\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      setEmployee('Ariel');\n    } else {\n      setEmployee('Jordan');\n    }\n  }, []);\n\n  async function Download(path: string, fileName: string): Promise<void> {\n    const a = document.createElement('a');\n    a.href = await toDataURL(path, fileName);\n    a.download = fileName;\n    document.body.appendChild(a);\n    // a.click();\n    document.body.removeChild(a);\n  }\n\n  function toDataURL(url: string, fileName: string): Promise<string> {\n    return fetch(url)\n      .then((response) => {\n        return response.blob();\n      })\n      .then((blob) => {\n        blobToFile(blob, fileName);\n        return URL.createObjectURL(blob);\n      });\n  }\n\n  //https://stackoverflow.com/questions/27159179/how-to-convert-blob-to-file-in-javascript\n  function blobToFile(theBlob: Blob, fileName: string): void {\n    // eslint-disable-next-line\n    const b: any = theBlob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    const newFileArray = [];\n\n    const f = new File([b], fileName);\n    newFileArray.push(f);\n    setUploadFiles(newFileArray);\n  }\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    // Update the keyword of the input element\n    setValue(e.target.value, true);\n  };\n\n  const handleSelect = ({\n    description,\n  }: {\n    description: string;\n    place_id: string;\n  }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter to \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    const address = description.split(',');\n    if (address.length > 3) {\n      // set address, city and state\n      addressSet(address[0]);\n      citySet(address[1]);\n      stateSet(address[2]);\n    }\n\n    // Get Zip code from address.\n    getGeocode({ address: description })\n      .then((results) => getZipCode(results[0], false))\n      .then((zip) => {\n        if (zip !== null) {\n          zipCodeSet(zip);\n        }\n      });\n  };\n\n  // Render temp ul of suggestions\n  const renderSuggestions = (): JSX.Element[] =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n      return (\n        <li key={place_id} onClick={handleSelect(suggestion)}>\n          📍-<strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  const renderNameSuggestions = (): JSX.Element[] =>\n    nameOrders.map((suggestion) => {\n      return (\n        <li key={suggestion.Id} onClick={(e) => handleNameSelect(e, suggestion)}>\n          🍪<strong>{suggestion.Name}</strong> - <small>{suggestion.Address}</small>\n        </li>\n      );\n    });\n\n  const handleNameSelect = (e: React.MouseEvent, order: Order): void => {\n    e.preventDefault();\n    nameSet(order.Name);\n    addressSet(order.Address);\n    citySet(order.City);\n    stateSet(order.State);\n    zipCodeSet(order.ZipCode);\n\n    setValue(`${order.Address} ${order.City},${order.State} ${order.ZipCode}`);\n    setNameOrders([]);\n  };\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    nameSet(e.target.value);\n\n    const regExName = new RegExp(`${e.target.value.toString()}`, 'i');\n    const searchedOrders = orders.filter((order: Order) => {\n      return order.Name && order.Name.match(regExName);\n    });\n\n    setNameOrders(searchedOrders);\n    if (name !== undefined) {\n      if (name?.length > 0) {\n        setNameValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  // function onChangeArea(e: React.ChangeEvent<HTMLInputElement>): void {\n  //   e.preventDefault();\n  //   areaSet(e.target.value);\n  // }\n\n  function onChangeAddress(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    addressSet(e.target.value);\n  }\n\n  function onChangeCity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    citySet(e.target.value);\n  }\n\n  function onChangeState(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    stateSet(e.target.value);\n  }\n\n  function onChangeZipCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    zipCodeSet(e.target.value);\n  }\n\n  function onChangeOrderType(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderTypeSet(e.target.value);\n\n    if (orderType !== undefined) {\n      if (orderType?.length > 0) {\n        setOrderTypeValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onChangeOrderStatus(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    orderStatusSet(e.target.value);\n\n    if (orderStatus !== undefined) {\n      if (orderStatus?.length > 0) {\n        setOrderStatusValidated(true);\n      }\n    }\n    isFormValidated();\n  }\n\n  function onClickPickup(e: React.MouseEvent): void {\n    e.preventDefault();\n\n    if (props.user === 'azrael7@gmail.com' || props.user === 'abooth8503@gmail.com') {\n      addressSet('13819 Wood Breeze');\n      citySet('San Antonio');\n      stateSet('Texas');\n      zipCodeSet('78217');\n    } else if (props.user === 'jbooth6985@gmail.com') {\n      addressSet('2633 Gallant Fox Drive');\n      citySet('Schertz');\n      stateSet('Texas');\n      zipCodeSet('78108');\n    }\n\n    setIsPickupClicked(!isPickupClicked);\n  }\n\n  function onClickPlus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity + 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onClickMinus(e: React.MouseEvent): void {\n    e.preventDefault();\n    quantitySet(quantity - 1);\n\n    if (quantity !== undefined) {\n      setQuantityValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeQuantity(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    quantitySet(Number(e.target.value));\n  }\n\n  function onChangePrice(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    priceSet(e.target.value);\n\n    if (price !== undefined) {\n      setPriceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n    e.preventDefault();\n    descriptionSet(e.target.value);\n  }\n\n  function onChangeTrafficSource(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    trafficSourceSet(e.target.value);\n    if (e.target.value !== undefined) {\n      setTrafficSourceValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n  }\n\n  function onChangeDeliveryMonth(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    const newDate = e.target.value;\n    deliveryMonthSet(e.target.value);\n    deliveryMonthEndSet(e.target.value);\n    if (deliveryYear !== undefined) {\n      daysLengthSet(calculateDays(newDate, deliveryYear));\n    }\n    if (e.target.value !== 'MM' && e.target.value !== undefined) {\n      setDeliveryMonthValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryDay(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryDaySet(e.target.value);\n    deliveryDayEndSet(e.target.value);\n    if (e.target.value !== 'DD' && e.target.value !== undefined) {\n      setDeliveryDayValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeDeliveryYear(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    deliveryYearSet(e.target.value);\n    deliveryYearEndSet(e.target.value);\n    if (deliveryMonth !== undefined) {\n      daysLengthSet(calculateDays(deliveryMonth, e.target.value));\n    }\n    if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n      setDeliveryYearValidated(true);\n    }\n    isFormValidated();\n  }\n\n  function onChangeBeginTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n\n    beginTimeSet(e.target.value);\n    endTimeSet(e.target.value);\n\n    if (e.target.value !== 'Select Time') {\n      setBeginTimeValidated(true);\n    }\n  }\n\n  // function onChangeDeliveryMonthEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryMonthEndSet(e.target.value);\n  //   if (deliveryYearEnd !== undefined) {\n  //     daysLengthEndSet(calculateDays(e.target.value, deliveryYearEnd));\n  //   }\n  //   if (e.target.value !== 'MM' && e.target.value !== undefined) {\n  //     setDeliveryDateMonthEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  // function onChangeDeliveryDayEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryDayEndSet(e.target.value);\n  //   if (e.target.value !== 'DD' && e.target.value !== undefined) {\n  //     setDeliveryDateDayEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  // function onChangeEndTime(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   endTimeSet(e.target.value);\n  //   if (e.target.value !== 'Select Time') {\n  //     setEndTimeValidated(true);\n  //   }\n  // }\n\n  // function onChangeDeliveryYearEnd(e: React.ChangeEvent<HTMLSelectElement>): void {\n  //   e.preventDefault();\n  //   deliveryYearEndSet(e.target.value);\n  //   if (deliveryMonthEnd !== undefined) {\n  //     daysLengthEndSet(calculateDays(deliveryMonthEnd, e.target.value));\n  //   }\n  //   if (e.target.value !== 'YYYY' && e.target.value !== undefined) {\n  //     setdeliveryDateYearEndValidated(true);\n  //   }\n  //   isFormValidated();\n  // }\n\n  function isFormValidated(): void {\n    if (\n      nameValidated &&\n      orderTypeValidated &&\n      orderStatusValidated &&\n      quantityValidated &&\n      priceValidated &&\n      trafficSourceValidated &&\n      deliveryMonthValidated &&\n      deliveryDayValidated &&\n      deliveryYearValidated &&\n      beginTimeValidated &&\n      // deliveryDateMonthEndValidated &&\n      // deliveryDateDayEndValidated &&\n      // deliveryDateYearEndValidated &&\n      // endTimeValidated &&\n      isSubmitDisabled\n    ) {\n      setIsSubmitDisabled(true);\n    } else {\n      setIsSubmitDisabled(false);\n    }\n  }\n\n  function insertOrder(e: React.MouseEvent<HTMLElement>): void {\n    e.preventDefault();\n\n    const orderContent: Order = {\n      Id:\n        props.routeComponentProps.location.state === undefined\n          ? 0\n          : Number(props.routeComponentProps.location.state),\n      Name: name === undefined ? ' ' : name.trim(),\n      Area: area === undefined ? ' ' : area.trim(),\n      Address: address === undefined ? ' ' : address.trim(),\n      City: city === undefined ? ' ' : city.trim(),\n      State: state === undefined ? ' ' : state.trim(),\n      ZipCode: zipCode === undefined ? ' ' : zipCode.trim(),\n      OrderType: orderType === undefined ? ' ' : orderType.trim(),\n      OrderStatus: orderStatus === undefined ? ' ' : orderStatus.trim(),\n      Quantity: quantity,\n      Price: price === undefined ? '0' : price,\n      Description: description === undefined ? ' ' : description.trim(),\n      DeliveryDate: `${deliveryMonth}/${deliveryDay}/${deliveryYear} ${beginTime}`,\n      DeliveryDateEnd: `${deliveryMonthEnd}/${deliveryDayEnd}/${deliveryYearEnd} ${endTime}`,\n      OrderDate: new Date(),\n      PrePaid: prepaid,\n      TrafficSource: trafficSource === undefined ? ' ' : trafficSource.trim(),\n      User: props.user === undefined ? ' ' : props.user.trim(),\n      CreatedBy: props.user === undefined ? ' ' : props.user.trim(),\n      ImageUrl: '',\n      OrderImageUrl: imageUrl === undefined ? ' ' : imageUrl.trim(),\n      PorchDropoff: porchDropoff,\n      Employee: 1,\n      EmployeeName: employee,\n    };\n\n    console.log('payload', orderContent);\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('orderContent', JSON.stringify(orderContent));\n\n    const myInit = {\n      method: 'POST',\n      body: payload,\n    };\n\n    try {\n      // const response = fetch('http://localhost:7071/api/Function1', myInit);\n      const response = fetch(\n        `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n        myInit\n      );\n      setOrderSubmitted(true);\n\n      response.then((resp) => {\n        if (resp.status === 200) {\n          setTimeout(() => {\n            clearFields();\n            setOrderSubmitted(false);\n          }, 3000);\n        } else {\n          alert(`There was an error adding a new order. Status code:${resp.status}`);\n        }\n      });\n    } catch (e) {\n      console.log(`catch error on create/edit: ${e}`);\n    }\n  }\n\n  function clearFields(): void {\n    nameSet('');\n    areaSet('');\n    addressSet('');\n    citySet('');\n    stateSet('');\n    zipCodeSet('');\n    orderTypeSet('Select Order Type');\n    orderStatusSet('Select Order Status');\n    quantitySet(0);\n    priceSet('');\n    deliveryMonthSet('MM');\n    deliveryDaySet('DD');\n    deliveryYearSet('YYYY');\n    deliveryMonthEndSet('MM');\n    deliveryDayEndSet('DD');\n    deliveryYearEndSet('YYYY');\n    beginTimeSet('Select Time');\n    endTimeSet('Select Time');\n    trafficSourceSet('Select Traffic');\n    setUploadFiles([]);\n    descriptionSet(''); // Added clear description\n    setValue('');\n    setPorchDropoff(false);\n    prepaidSet(false);\n    setEmployee('Select Employee');\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return width < 769 ? (\n    <Container>\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order'\n            onChange={onChangeName}\n            value={name}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {name && name.length > 0 && (\n            <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n          )}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <div style={{ marginBottom: '10px' }} ref={ref}>\n          <Form.Label>Search Address</Form.Label>\n          <Button\n            variant={isPickupClicked ? `primary` : 'secondary'}\n            size='sm'\n            style={{ marginLeft: '5px' }}\n            onClick={onClickPickup}\n          >\n            {isPickupClicked ? `Enter Address` : 'Pickup'}\n          </Button>\n          <Form.Control\n            type='text'\n            value={value}\n            onChange={handleInput}\n            disabled={isPickupClicked}\n            placeholder='Where are you going?'\n            style={{ width: '100%' }}\n          />\n          {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n          {status === 'OK' && (\n            <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n          )}\n        </div>\n        <Accordion>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Address Info\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                <Form.Group>\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='123 Street'\n                    value={address}\n                    onChange={onChangeAddress}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>City</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='City'\n                    value={city}\n                    onChange={onChangeCity}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>State</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='State'\n                    value={state}\n                    onChange={onChangeState}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>ZipCode</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='12345'\n                    value={zipCode}\n                    onChange={onChangeZipCode}\n                  />\n                </Form.Group>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        <Form.Group>\n          <Form.Label>Order Type</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n            <option>Select Order Type</option>\n            {orderTypes.map((orderType) => {\n              return <option key={orderType.Id}>{orderType.Name}</option>;\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Order Status</Form.Label>\n          <Form.Control as='select' onChange={onChangeOrderStatus} value={orderStatus}>\n            <option>Select Order Status</option>\n            <option>Pending</option>\n            <option>Ordered</option>\n            <option>Delivered</option>\n            <option>Cancelled</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Quantity</Form.Label>\n          <div>\n            <Form.Control\n              type='text'\n              value={quantity}\n              onChange={onChangeQuantity}\n              placeholder='1'\n              style={{ width: '50px', display: 'inline' }}\n            />\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickPlus}\n            >\n              +\n            </Button>\n            <Button\n              style={{\n                display: 'inline',\n                marginLeft: '5px',\n                verticalAlign: 'top',\n                fontWeight: 'bold',\n              }}\n              onClick={onClickMinus}\n            >\n              -\n            </Button>\n          </div>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Price</Form.Label>\n          <div className='input-group'>\n            <span\n              className='input-group-addon'\n              style={{\n                display: 'inline-flex',\n                verticalAlign: 'middle',\n                alignItems: 'center',\n              }}\n            >\n              💲\n            </span>\n            <Form.Control\n              type='number'\n              placeholder='10.00'\n              min='1'\n              step='0.01'\n              value={price}\n              onChange={onChangePrice}\n            />\n          </div>\n        </Form.Group>\n        <Form.Group controlId='formBasicCheckbox'>\n          <Form.Check type='checkbox' id='prepaidCheckbox'>\n            <Form.Check.Input\n              type='checkbox'\n              isValid\n              checked={prepaid}\n              onChange={() => prepaidSet(!prepaid)}\n            />\n            <span>💵</span>\n            <Form.Check.Label style={{ color: 'black' }}>PrePaid</Form.Check.Label>\n          </Form.Check>\n\n          <Form.Check type='checkbox' id='porchDropOff'>\n            <Form.Check.Input\n              type='checkbox'\n              isValid\n              checked={porchDropoff}\n              onChange={() => setPorchDropoff(!porchDropoff)}\n            />\n            <span>🚪</span>\n            <Form.Check.Label style={{ color: 'black' }}>Porch Dropoff</Form.Check.Label>\n          </Form.Check>\n        </Form.Group>\n        <Form.Label>Delivery Date</Form.Label>\n        <Form.Group>\n          <Form.Control\n            as='select'\n            value={deliveryMonth}\n            onChange={onChangeDeliveryMonth}\n            style={{ width: '78px', display: 'inline' }}\n          >\n            <option value='MM'>MM</option>\n            {['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'].map(\n              (day) => {\n                return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n              }\n            )}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addDay'\n            value={deliveryDay}\n            onChange={onChangeDeliveryDay}\n            style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n          >\n            <option value='DD'>DD</option>\n            {[\n              '01',\n              '02',\n              '03',\n              '04',\n              '05',\n              '06',\n              '07',\n              '08',\n              '09',\n              '10',\n              '11',\n              '12',\n              '13',\n              '14',\n              '15',\n              '16',\n              '17',\n              '18',\n              '19',\n              '20',\n              '21',\n              '22',\n              '23',\n              '24',\n              '25',\n              '26',\n              '27',\n              '28',\n              '29',\n              '30',\n              '31',\n            ]\n              .filter((numberOfDays) => {\n                return Number(numberOfDays) <= daysLength;\n              })\n              .map((day) => {\n                return (\n                  <option value={`${day}`} key={`day-${Number(day)}`}>{`${day}`}</option>\n                );\n              })}\n          </Form.Control>\n          <Form.Control\n            as='select'\n            id='addYear'\n            value={deliveryYear}\n            onChange={onChangeDeliveryYear}\n            style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n          >\n            <option value='YYYY'>YYYY</option>\n            {years.map((everyYear, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                  {everyYear}\n                </option>\n              );\n            })}\n          </Form.Control>\n          <br></br>\n          <Form.Label style={{ marginTop: '10px' }}>Time</Form.Label>\n          <Form.Control\n            as='select'\n            id='beginTimeCtl'\n            value={beginTime}\n            onChange={onChangeBeginTime}\n            style={{ width: '40%' }}\n          >\n            <option>Select Time</option>\n            {times.map((time, index) => {\n              const keyIndex = index;\n              return (\n                <option key={`time-${keyIndex}`} value={time}>\n                  {time}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group style={{ marginTop: '5px' }}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as='textarea'\n            rows={4}\n            value={description}\n            placeholder='Description here'\n            onChange={onChangeDescription}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Source of Traffic</Form.Label>\n          <Form.Control\n            as='select'\n            onChange={onChangeTrafficSource}\n            value={trafficSource}\n          >\n            <option>Select Traffic</option>\n            <option>3009 Moms group</option>\n            <option>San Antonio Moms group</option>\n            <option>Grocery Facebook Group</option>\n            <option>Facebook</option>\n            <option>Instagram</option>\n            <option>Friend-Relatives</option>\n            <option>Other</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Employee</Form.Label>\n          <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n            <option>Select Employee</option>\n            <option>Ariel</option>\n            <option>Jordan</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n          Submit\n        </Button>\n        <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n          Clear\n        </Button>\n        {isOrderSubmitted ? (\n          <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n        ) : null}\n        <br></br>\n      </Form>\n    </Container>\n  ) : (\n    <Container>\n      <BoothNavbar />\n      <Jumbotron style={{ backgroundColor: 'white', marginTop: '3px' }}>\n        <h2\n          className='text-center'\n          style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}\n        >\n          {props.routeComponentProps.location.state === undefined\n            ? 'Create Order'\n            : 'Edit Order'}\n        </h2>\n      </Jumbotron>\n\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter name of order'\n                onChange={onChangeName}\n                value={name}\n              />\n              {name && name.length > 0 && (\n                <ul style={{ listStyleType: 'none' }}>{renderNameSuggestions()}</ul>\n              )}\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Upload Image</Form.Label>\n              <EmeraldDropzone uploadDoc={GetUploadImage} />\n              {uploadFiles !== undefined ? (\n                <ul\n                  style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}\n                >\n                  {uploadFiles.map((file: File) => (\n                    <li key={file.name}>\n                      <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                      <span\n                        style={{\n                          color: '#005ea2',\n                          marginTop: '10px',\n                          verticalAlign: 'bottom',\n                        }}\n                        data-testid='uploadfilename'\n                      >\n                        {file.name}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              ) : null}\n            </Form.Group>\n\n            <div style={{ marginBottom: '10px' }} ref={ref}>\n              <Form.Label>Search Address</Form.Label>\n              <Button\n                variant={isPickupClicked ? `primary` : 'secondary'}\n                size='sm'\n                style={{ marginLeft: '5px' }}\n                onClick={onClickPickup}\n              >\n                {isPickupClicked ? `Enter Address` : 'Pickup'}\n              </Button>\n              <Form.Control\n                type='text'\n                value={value}\n                onChange={handleInput}\n                disabled={isPickupClicked}\n                placeholder='Where are you going?'\n                style={{ width: '100%' }}\n              />\n              {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n              {status === 'OK' && (\n                <ul style={{ listStyleType: 'none' }}>{renderSuggestions()}</ul>\n              )}\n            </div>\n            <Accordion>\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey='0'>\n                  Address Info\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey='0'>\n                  <Card.Body>\n                    <Form.Group>\n                      <Form.Label>Address</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='123 Street'\n                        value={address}\n                        onChange={onChangeAddress}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>City</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='City'\n                        value={city}\n                        onChange={onChangeCity}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>State</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='State'\n                        value={state}\n                        onChange={onChangeState}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>ZipCode</Form.Label>\n                      <Form.Control\n                        type='text'\n                        placeholder='12345'\n                        value={zipCode}\n                        onChange={onChangeZipCode}\n                      />\n                    </Form.Group>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <Form.Group>\n              <Form.Label>Order Type</Form.Label>\n              <Form.Control as='select' onChange={onChangeOrderType} value={orderType}>\n                <option>Select Order Type</option>\n                {orderTypes.map((orderType) => {\n                  return <option key={orderType.Id}>{orderType.Name}</option>;\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Order Status</Form.Label>\n              <Form.Control\n                as='select'\n                onChange={onChangeOrderStatus}\n                value={orderStatus}\n              >\n                <option>Select Order Status</option>\n                <option>Pending</option>\n                <option>Ordered</option>\n                <option>Delivered</option>\n                <option>Cancelled</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quantity</Form.Label>\n              <div>\n                <Form.Control\n                  type='text'\n                  value={quantity}\n                  onChange={onChangeQuantity}\n                  placeholder='1'\n                  style={{ width: '50px', display: 'inline' }}\n                />\n                <Button\n                  style={{\n                    display: 'inline',\n                    marginLeft: '5px',\n                    verticalAlign: 'top',\n                    fontWeight: 'bold',\n                  }}\n                  onClick={onClickPlus}\n                >\n                  +\n                </Button>\n                <Button\n                  style={{\n                    display: 'inline',\n                    marginLeft: '5px',\n                    verticalAlign: 'top',\n                    fontWeight: 'bold',\n                  }}\n                  onClick={onClickMinus}\n                >\n                  -\n                </Button>\n              </div>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group>\n              <Form.Label>Price</Form.Label>\n              <div className='input-group'>\n                <span\n                  className='input-group-addon'\n                  style={{\n                    display: 'inline-flex',\n                    verticalAlign: 'middle',\n                    alignItems: 'center',\n                  }}\n                >\n                  💲\n                </span>\n                <Form.Control\n                  type='number'\n                  placeholder='10.00'\n                  min='1'\n                  step='0.01'\n                  value={price}\n                  onChange={onChangePrice}\n                />\n              </div>\n            </Form.Group>\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={prepaid}\n                  onChange={() => prepaidSet(!prepaid)}\n                />\n                <span>💵</span>\n                <Form.Check.Label style={{ color: 'black' }}>PrePaid</Form.Check.Label>\n              </Form.Check>\n\n              <Form.Check type='checkbox' id='porchDropOff'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={porchDropoff}\n                  onChange={() => setPorchDropoff(!porchDropoff)}\n                />\n                <span>🚪</span>\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Porch Dropoff\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n            <Form.Label>Delivery Date</Form.Label>\n            <Form.Group>\n              <Form.Control\n                as='select'\n                value={deliveryMonth}\n                onChange={onChangeDeliveryMonth}\n                style={{ width: '78px', display: 'inline' }}\n              >\n                <option value='MM'>MM</option>\n                {[\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                ].map((day) => {\n                  return <option value={`${day}`} key={Number(day)}>{`${day}`}</option>;\n                })}\n              </Form.Control>\n              <Form.Control\n                as='select'\n                id='addDay'\n                value={deliveryDay}\n                onChange={onChangeDeliveryDay}\n                style={{ width: '78px', display: 'inline', marginLeft: '5px' }}\n              >\n                <option value='DD'>DD</option>\n                {[\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                  '13',\n                  '14',\n                  '15',\n                  '16',\n                  '17',\n                  '18',\n                  '19',\n                  '20',\n                  '21',\n                  '22',\n                  '23',\n                  '24',\n                  '25',\n                  '26',\n                  '27',\n                  '28',\n                  '29',\n                  '30',\n                  '31',\n                ]\n                  .filter((numberOfDays) => {\n                    return Number(numberOfDays) <= daysLength;\n                  })\n                  .map((day) => {\n                    return (\n                      <option\n                        value={`${day}`}\n                        key={`day-${Number(day)}`}\n                      >{`${day}`}</option>\n                    );\n                  })}\n              </Form.Control>\n              <Form.Control\n                as='select'\n                id='addYear'\n                value={deliveryYear}\n                onChange={onChangeDeliveryYear}\n                style={{ display: 'inline', width: '100px', marginLeft: '5px' }}\n              >\n                <option value='YYYY'>YYYY</option>\n                {years.map((everyYear, index) => {\n                  const keyIndex = index;\n                  return (\n                    <option key={`everyYear-${keyIndex}`} value={everyYear}>\n                      {everyYear}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n              <br></br>\n              <Form.Label style={{ marginTop: '10px' }}>Time</Form.Label>\n              <Form.Control\n                as='select'\n                id='beginTimeCtl'\n                value={beginTime}\n                onChange={onChangeBeginTime}\n                style={{ width: '40%' }}\n              >\n                <option>Select Time</option>\n                {times.map((time, index) => {\n                  const keyIndex = index;\n                  return (\n                    <option key={`time-${keyIndex}`} value={time}>\n                      {time}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group style={{ marginTop: '5px' }}>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as='textarea'\n                rows={4}\n                value={description}\n                placeholder='Description here'\n                onChange={onChangeDescription}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Source of Traffic</Form.Label>\n              <Form.Control\n                as='select'\n                onChange={onChangeTrafficSource}\n                value={trafficSource}\n              >\n                <option>Select Traffic</option>\n                <option>3009 Moms group</option>\n                <option>San Antonio Moms group</option>\n                <option>Grocery Facebook Group</option>\n                <option>Facebook</option>\n                <option>Instagram</option>\n                <option>Friend-Relatives</option>\n                <option>Other</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Employee</Form.Label>\n              <Form.Control as='select' onChange={onChangeEmployee} value={employee}>\n                <option>Select Employee</option>\n                <option>Ariel</option>\n                <option>Jordan</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button variant='primary' onClick={insertOrder} disabled={isSubmitDisabled}>\n              Submit\n            </Button>\n            <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n              Clear\n            </Button>\n            {isOrderSubmitted ? (\n              <Form.Label style={{ marginLeft: '5px' }}>Order is submitted!</Form.Label>\n            ) : null}\n            <br></br>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateOrder;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './css/reactCalendar.css';\nimport { Jumbotron, Container, Row, Col, Badge, Form } from 'react-bootstrap';\nimport OrderCard from './Common/OrderCard';\nimport { Order, Orders } from './Interfaces/EmeraldTypes';\nimport { useEmeraldContext, useMediaQuery } from './Interfaces/EmeraldTypes';\nimport BoothNavbar from './Common/BoothNavbar';\n\ninterface Props {\n  routeComponentProps: RouteComponentProps;\n  userName: string;\n}\n\nfunction CalendarOrders(props: Props): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [selectedDay, daySet] = React.useState<Date | undefined>(undefined);\n  const [calenderOrders, setCalenderOrders] = React.useState<Orders>(orders);\n  const [value, onChange] = React.useState<Date | Date[]>(new Date());\n  const [employee, setEmployee] = React.useState<string | undefined>('Select Employee');\n  const [showAllOrders, setShowAllOrders] = React.useState<boolean>(false);\n  const [width] = useMediaQuery();\n\n  useEffect(() => {\n    // fetchEmeraldOrders();\n\n    if (orders && orders.length > 0) {\n      switch (props.userName) {\n        case 'Ariel Castillo':\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Ariel');\n          break;\n        case 'Paul Castillo':\n          // console.log(\n          //   'found Paul',\n          //   orders.filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n          // );\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Ariel')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Ariel');\n          break;\n        case 'Jordan Hebert':\n          setCalenderOrders(\n            orders\n              .filter((empOrder) => empOrder.EmployeeName === 'Jordan')\n              .filter(\n                (statusOrder) =>\n                  statusOrder.OrderStatus !== 'Delivered' &&\n                  statusOrder.OrderStatus !== 'Cancelled'\n              )\n          );\n          setEmployee('Jordan');\n          break;\n        default:\n          setCalenderOrders(\n            orders.filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n          );\n          setEmployee('All');\n      }\n    }\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  function tileClassName({\n    date,\n    view,\n  }: {\n    date: any;\n    view: any;\n  }): string | string[] | null {\n    // Add class to tiles in month view only\n    if (view === 'month') {\n      if (\n        calenderOrders.find(\n          (x) =>\n            moment(x.DeliveryDate).format('MM-DD-YYYY') ===\n            moment(date).format('MM-DD-YYYY')\n        )\n      ) {\n        return 'highlight';\n      }\n      return null;\n    }\n    return null;\n  }\n\n  function onClickDayDate(value: Date): void {\n    daySet(value);\n    return;\n  }\n\n  function onChangeEmployee(e: React.ChangeEvent<HTMLSelectElement>): void {\n    e.preventDefault();\n    setEmployee(e.target.value);\n\n    if (e.target.value === 'All') {\n      if (showAllOrders) {\n        setCalenderOrders(orders);\n      } else {\n        setCalenderOrders(\n          orders.filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          )\n        );\n      }\n    } else {\n      if (showAllOrders) {\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === e.target.value)\n        );\n      } else {\n        setCalenderOrders(\n          orders\n            .filter((empOrder) => empOrder.EmployeeName === e.target.value)\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n        );\n      }\n    }\n  }\n\n  async function onChangeShowAllOrders(): Promise<void> {\n\n    await setShowAllOrders(!showAllOrders);\n\n    if (employee === 'All') {\n      if (showAllOrders) {\n        setCalenderOrders(orders);\n      } else {\n        setCalenderOrders(\n          orders.filter(\n            (statusOrder) =>\n              statusOrder.OrderStatus !== 'Delivered' &&\n              statusOrder.OrderStatus !== 'Cancelled'\n          )\n        );\n      }\n    } else {\n      if (showAllOrders) {\n        setCalenderOrders(\n          orders.filter((empOrder) => empOrder.EmployeeName === employee)\n        );\n      } else {\n        setCalenderOrders(\n          orders\n            .filter((empOrder) => empOrder.EmployeeName === employee)\n            .filter(\n              (statusOrder) =>\n                statusOrder.OrderStatus !== 'Delivered' &&\n                statusOrder.OrderStatus !== 'Cancelled'\n            )\n        );\n      }\n    }\n  }\n\n  if (orders && orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  return width < 769 ? (\n    <Container className='text-center' style={{ marginTop: '5px' }}>\n      <Jumbotron style={{ backgroundColor: 'white' }}>\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n      <Form.Group>\n        <Form.Control\n          as='select'\n          onChange={onChangeEmployee}\n          value={employee}\n          title='Select Employee view.'\n        >\n          <option>Select Employee</option>\n          <option>Ariel</option>\n          <option>Jordan</option>\n          <option>All</option>\n        </Form.Control>\n      </Form.Group>\n      <Calendar\n        onChange={(val) => onChange(val)}\n        value={value}\n        tileClassName={tileClassName}\n        onClickDay={onClickDayDate}\n        className='centercalendar'\n        calendarType='US'\n      />\n      <Row>\n        <Col>\n          <span className='text-left' style={{ marginLeft: '5px' }}>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={showAllOrders}\n                  onChange={onChangeShowAllOrders}\n                />\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Show all Orders\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </span>\n        </Col>\n      </Row>\n      {selectedDay === undefined\n        ? calenderOrders\n            .filter((upcomingOrder) => {\n              const deliveryDate = moment(upcomingOrder.DeliveryDate);\n              const currentDate = moment();\n\n              if (deliveryDate > currentDate) {\n                return upcomingOrder;\n              }\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })\n        : calenderOrders\n            .filter((day) => {\n              if (selectedDay) {\n                if (\n                  moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                  moment(selectedDay).format('MM-DD-YYYY')\n                ) {\n                  return day;\n                }\n              }\n            })\n            .sort((a: Order, b: Order) => {\n              if (a.DeliveryDate > b.DeliveryDate) {\n                return 1;\n              }\n\n              return -1;\n            })\n            .map((order: Order) => {\n              const mapAddress = `${order.Address} ${order.City},${order.State}`;\n              const encodedAddress = encodeURI(mapAddress);\n              const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n              return (\n                <OrderCard\n                  key={order.Id}\n                  routeComponentProps={props.routeComponentProps}\n                  order={order}\n                  address={addressToUse}\n                  parent='calender'\n                />\n              );\n            })}\n    </Container>\n  ) : (\n    <Container style={{ marginTop: '5px' }}>\n      <BoothNavbar />\n      <Jumbotron\n        className='text-center'\n        style={{ backgroundColor: 'white', marginTop: '5px' }}\n      >\n        <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>Calendar</h2>\n      </Jumbotron>\n\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Control\n              as='select'\n              onChange={onChangeEmployee}\n              value={employee}\n              title='Select Employee view.'\n              style={{ width: '193px', margin: 'auto' }}\n            >\n              <option>Select Employee</option>\n              <option>Ariel</option>\n              <option>Jordan</option>\n              <option>All</option>\n            </Form.Control>\n          </Form.Group>\n          <Calendar\n            onChange={(val) => onChange(val)}\n            value={value}\n            tileClassName={tileClassName}\n            onClickDay={onClickDayDate}\n            calendarType='US'\n            className='centercalendar'\n          />\n        </Col>\n\n        <Col>\n          <span className='text-center'>\n            <h5>\n              <span style={{ fontWeight: 'bold' }}>Count:</span>\n              <Badge\n                style={{\n                  fontSize: 'large',\n                  color: '#007bff',\n                  marginLeft: '5px',\n                  background: 'white',\n                }}\n              >\n                {\n                  calenderOrders.filter((day) => {\n                    if (selectedDay) {\n                      if (\n                        moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                        moment(selectedDay).format('MM-DD-YYYY')\n                      ) {\n                        return day;\n                      }\n                    }\n                  }).length\n                }\n              </Badge>\n            </h5>\n\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Check type='checkbox' id='prepaidCheckbox'>\n                <Form.Check.Input\n                  type='checkbox'\n                  isValid\n                  checked={showAllOrders}\n                  onChange={onChangeShowAllOrders}\n                />\n                <Form.Check.Label style={{ color: 'black' }}>\n                  Show all Orders\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </span>\n          {selectedDay === undefined\n            ? calenderOrders\n                .filter((upcomingOrder) => {\n                  const deliveryDate = moment(upcomingOrder.DeliveryDate);\n                  const currentDate = moment();\n\n                  if (deliveryDate > currentDate) {\n                    return upcomingOrder;\n                  }\n                })\n                .map((order: Order) => {\n                  const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                  const encodedAddress = encodeURI(mapAddress);\n                  const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                  return (\n                    <OrderCard\n                      key={order.Id}\n                      routeComponentProps={props.routeComponentProps}\n                      order={order}\n                      address={addressToUse}\n                      parent='calender'\n                    />\n                  );\n                })\n            : calenderOrders\n                .filter((day) => {\n                  if (selectedDay) {\n                    if (\n                      moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n                      moment(selectedDay).format('MM-DD-YYYY')\n                    ) {\n                      return day;\n                    }\n                  }\n                })\n                .sort((a: Order, b: Order) => {\n                  if (a.DeliveryDate > b.DeliveryDate) {\n                    return 1;\n                  }\n\n                  return -1;\n                })\n                .map((order: Order) => {\n                  const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                  const encodedAddress = encodeURI(mapAddress);\n                  const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                  return (\n                    <OrderCard\n                      key={order.Id}\n                      routeComponentProps={props.routeComponentProps}\n                      order={order}\n                      address={addressToUse}\n                      parent='calender'\n                    />\n                  );\n                })}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CalendarOrders;\n","/// <reference types=\"google.maps\" />\nimport React, { useEffect, useState } from 'react';\nimport { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Order, emeraldGet } from './Interfaces/EmeraldTypes';\nimport moment from 'moment';\n\nconst labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nlet labelIndex = 0;\n\nfunction GMap(): JSX.Element {\n  const mapRef: HTMLDivElement | null = null;\n  const googleMapRef = React.useRef<HTMLDivElement | null>(mapRef);\n  // eslint-disable-next-line\n  const [ordersMap, setOrdersMap] = useState<Order[]>();\n  let googleMap: google.maps.Map | undefined = undefined;\n\n  useEffect(() => {\n    const googleMapScript = document.getElementById('googlescript');\n    async function fetchEmeraldOrders(): Promise<void> {\n      try {\n        const getOrders = new Request(\n          `https://emeraldorderfunction.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_FUNC_KEY}`,\n          {\n            method: 'GET',\n          }\n        );\n\n        const data = await emeraldGet<Order[]>(getOrders);\n\n        if (data.length > 0) {\n          const currentDayOrders = data.filter((day) => {\n            if (\n              moment(day.DeliveryDate).format('MM-DD-YYYY') ==\n              moment(new Date()).format('MM-DD-YYYY')\n            ) {\n              return day;\n            }\n          });\n          setOrdersMap(currentDayOrders);\n\n          if (googleMapScript !== null) {\n            googleMap = initGoogleMap();\n            setMarkers(currentDayOrders);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchEmeraldOrders();\n  }, []);\n\n  // initialize the google map\n  const initGoogleMap = (): google.maps.Map => {\n    return new google.maps.Map(googleMapRef.current as HTMLElement, {\n      center: { lat: 29.56638929999999, lng: -98.3988705 },\n      zoom: 10,\n    });\n  };\n\n  function addMarker(\n    location: google.maps.LatLngLiteral,\n    map: google.maps.Map,\n    order: Order\n  ): void {\n    // Add the marker at the clicked location, and add the next-available label\n    // from the array of alphabetical characters.\n    const newMarker = new google.maps.Marker({\n      animation: google.maps.Animation.DROP,\n      position: location,\n      label: `${labels[labelIndex++ % labels.length]} ${order.Name}`,\n      map: map,\n    });\n\n    const mapAddress = `${order.Address} ${order.City},${order.State}`;\n    const encodedAddress = encodeURI(mapAddress);\n    const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n\n    const contentString = `<h3>\n        <a href='${addressToUse}'>${order.Address}</a>\n      </h3>\n    `;\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    newMarker.addListener('click', () => {\n      infowindow.open(map, newMarker);\n    });\n  }\n\n  async function setMarkers(markerOrders: Order[]): Promise<void> {\n    return markerOrders.forEach(async (order) => {\n      const address = `${order.Address}, ${order.City}, ${order.State} ${order.ZipCode}`;\n\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n\n      if (googleMap !== undefined) {\n        addMarker({ lat, lng }, googleMap, order);\n      }\n    });\n  }\n\n  return (\n    <div\n      ref={googleMapRef}\n      style={{ width: 600, height: '100%', position: 'absolute' }}\n    />\n  );\n}\n\nexport default GMap;\n","import * as React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n} from 'react-bootstrap';\nimport { FaMapSigns } from 'react-icons/fa';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useEmeraldContext, formatDate } from './Interfaces/EmeraldTypes';\nimport './css/orderDetail.css';\n\nfunction OrderDetail(props: RouteComponentProps<number>): JSX.Element {\n  const { orders } = useEmeraldContext();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function editOrder(id: number): void {\n    props.history.push(`/create`, id);\n  }\n\n  function handleShowDialog(): void {\n    setIsOpen(!isOpen);\n  }\n\n  if (orders.length < 1) {\n    return <div>Loading...</div>;\n  }\n\n  const filteredOrderProp = orders.filter((order) => order.Id === props.location.state);\n  let orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n  if (\n    orderImageUrl === 'NONE' ||\n    orderImageUrl === undefined ||\n    orderImageUrl === '' ||\n    orderImageUrl === null\n  ) {\n    orderImageUrl =\n      'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png';\n  } else {\n    if (orderImageUrl !== undefined) {\n      orderImageUrl = filteredOrderProp[0].OrderImageUrl;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container className='text-center' style={{ marginTop: '5px' }}>\n        <Jumbotron style={{ backgroundColor: 'white' }}>\n          <h2 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n            Order Detail\n          </h2>\n        </Jumbotron>\n        <Row>\n          <Col>\n            {filteredOrderProp.map((order) => {\n              return (\n                <Card\n                  className='d-flex align-items-center justify-content-center'\n                  key={order.Id}\n                  style={{\n                    height: '242px',\n                    marginTop: '5px',\n                    padding: '10px',\n                  }}\n                >\n                  <Card.Header style={{ fontSize: 'larger', fontWeight: 'bolder' }}>\n                    {`${order.Name}'s Order`}\n                  </Card.Header>\n                  <Card.Text>\n                    <span style={{ fontWeight: 'bold' }}>Order Type:</span>{' '}\n                    <div style={{ fontStyle: 'italic' }}>{order.OrderType}</div>\n                  </Card.Text>\n                  <Card.Text style={{ marginBottom: '5px' }}>\n                    <span style={{ fontWeight: 'bold' }}>Quantity:</span>{' '}\n                    <span>{order.Quantity}</span>\n                  </Card.Text>\n                  <Button size='sm' onClick={() => editOrder(order.Id)}>\n                    Edit\n                  </Button>\n                </Card>\n              );\n            })}\n          </Col>\n          <Col className='d-flex align-items-center justify-content-center'>\n            <Image src={orderImageUrl} thumbnail onClick={handleShowDialog} />\n          </Col>\n          {isOpen && (\n            <dialog\n              className='dialog'\n              style={{ position: 'absolute' }}\n              open\n              onClick={handleShowDialog}\n            >\n              <img\n                className='image'\n                src={orderImageUrl}\n                onClick={handleShowDialog}\n                alt='no image'\n              />\n            </dialog>\n          )}\n        </Row>\n        <Row>\n          <Col>\n            <ListGroup style={{ marginTop: '5px' }}>\n              {filteredOrderProp.map((order) => {\n                const beginDeliveryDate = new Date(order.DeliveryDate);\n                const endDeliveryDate = new Date(order.DeliveryDateEnd);\n                const mapAddress = `${order.Address} ${order.City},${order.State}`;\n                const encodedAddress = encodeURI(mapAddress);\n                const addressToUse = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n                return (\n                  <React.Fragment key={order.Id}>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Employee:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {order.Employee === 1 ? <>👱🏼‍♀️</> : <>👩</>}\n                      </span>\n                      <span style={{ marginLeft: '6px' }}>{order.EmployeeName}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Date Created:</b>{' '}\n                      <span style={{ marginLeft: '6px' }}>\n                        {formatDate(order.OrderDate, true, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Date:</b>{' '}\n                      <span style={{ marginLeft: '5px', marginRight: '5px' }}>\n                        {formatDate(order.DeliveryDate, false, true)}\n                      </span>\n                      <b>TO</b>\n                      <span style={{ marginLeft: '5px' }}>\n                        {formatDate(order.DeliveryDateEnd, false, true)}\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b>Delivery Window:</b>{' '}\n                      <span style={{ marginLeft: '5px' }}>\n                        {`${beginDeliveryDate.toLocaleTimeString('en-US', {\n                          timeStyle: 'short',\n                        } as Intl.DateTimeFormatOptions)}`}\n                      </span>\n                      {endDeliveryDate === beginDeliveryDate ? (\n                        <>\n                          <span style={{ marginLeft: '5px' }}> to </span>\n                          <span style={{ marginLeft: '5px' }}>\n                            {`${endDeliveryDate.toLocaleTimeString('en-US', {\n                              timeStyle: 'short',\n                            } as Intl.DateTimeFormatOptions)}`}\n                          </span>\n                        </>\n                      ) : null}\n                    </ListGroup.Item>\n\n                    {order.Description !== undefined && order.Description.length > 0 ? (\n                      <ListGroup.Item className='d-flex align-items-center'>\n                        <b>Description:</b>{' '}\n                        <span style={{ marginLeft: '5px' }}>{order.Description}</span>\n                      </ListGroup.Item>\n                    ) : null}\n\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Address:</b>{' '}\n                      <span style={{ fontSize: 'small' }}>\n                        <FaMapSigns size={22} />\n                        <a\n                          href={addressToUse}\n                          style={{ marginLeft: '5px', fontSize: 'medium' }}\n                        >\n                          {mapAddress}\n                        </a>\n                      </span>\n                    </ListGroup.Item>\n                    <ListGroup.Item className='d-flex align-items-center'>\n                      <b style={{ marginRight: '5px' }}>Created By:</b>{' '}\n                      <span style={{ fontSize: 'medium' }}>{order.CreatedBy}</span>\n                    </ListGroup.Item>\n                  </React.Fragment>\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default OrderDetail;\n","import React, { FunctionComponent, useState } from 'react';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from 'react-google-login';\n// import video1 from './videos/AtTheBoothHeading.mp4';\n\ninterface GoogleSignInComponentProps {\n  loginSuccess: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void;\n}\n\nexport const GoogleSignInComponent: FunctionComponent<GoogleSignInComponentProps> = ({\n  loginSuccess,\n}) => {\n  const [loginFailed, setLoginFailed] = useState<boolean>();\n\n  return (\n    <div className='text-center mb-4' style={{ marginTop: '10px' }}>\n      <h1\n        style={{\n          fontFamily: 'AmaticSC-Bold',\n          fontSize: '114px',\n          color: 'violet',\n          WebkitTextStroke: '2px black',\n        }}\n      >\n        Welcome\n      </h1>\n      {loginFailed && (\n        <div style={{ fontSize: 'larger' }}>Could not sign you in! Try again.</div>\n      )}\n      {/* <video src={video1} width='100%' height='400' autoPlay loop muted />\n      <source src={video1} type='video/mp4' /> */}\n      <p style={{ fontSize: 'larger' }}>Sign In</p>\n      <GoogleLogin\n        clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n        buttonText='Google'\n        onSuccess={loginSuccess}// eslint-disable-next-line\n        onFailure={(response: any) => {\n          setLoginFailed(true);\n        }}\n        isSignedIn={true}\n        cookiePolicy={'single_host_origin'}\n        responseType='code,token'\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport * as React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Jumbotron,\n  ListGroup,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport FlipMove from 'react-flip-move';\nimport { OrderType, useEmeraldContext } from '../Interfaces/EmeraldTypes';\nimport EmeraldDropzone from '../Common/EmeraldDropzone';\nimport { FaCheck } from 'react-icons/fa';\n\ntype Props = {\n  user: string;\n};\n\nfunction OrderTypeForm(props: Props) {\n  const { orderTypes } = useEmeraldContext();\n  const [showOrderTypes, setShowOrderTypes] = React.useState<boolean>(false);\n  const [id, setId] = React.useState<number>(0);\n  const [name, setName] = React.useState<string | undefined>(undefined);\n  const [description, setDescription] = React.useState<string | undefined>(undefined);\n  const [imageUrl, setImageUrl] = React.useState<string | undefined>(undefined);\n  const [saveMessage, setSaveMessage] = React.useState<string | undefined>(undefined);\n  // dropzone\n  const [uploadFiles, setUploadFiles] = React.useState<Array<File>>([]);\n\n  function orderTypeClicked(id: OrderType['Id']) {\n    setShowOrderTypes(!showOrderTypes);\n    const selectedOrderType = orderTypes.filter((ot) => ot.Id === id);\n    setId(selectedOrderType[0].Id);\n    setName(selectedOrderType[0].Name);\n    if (selectedOrderType[0].Description === null) {\n      setDescription('');\n    } else {\n      setDescription(selectedOrderType[0].Description);\n    }\n    if (\n      selectedOrderType[0].ImageUrl == '' ||\n      selectedOrderType[0].ImageUrl === undefined ||\n      selectedOrderType[0].ImageUrl === null ||\n      selectedOrderType[0].ImageUrl.length === 0\n    ) {\n      setImageUrl(\n        'https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/defaultOrderImage_min.png'\n      );\n    } else {\n      setImageUrl(selectedOrderType[0].ImageUrl);\n    }\n  }\n\n  function onClickshowOrderTypes(e: React.MouseEvent) {\n    e.preventDefault();\n    setShowOrderTypes(!showOrderTypes);\n  }\n\n  function onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  function GetUploadImage(files: Array<File>): void {\n    setUploadFiles(files);\n    const imageUrlAzure = `https://emeraldorderfunctionstor.blob.core.windows.net/emeraldbakery/${files[0].name}`;\n    setImageUrl(imageUrlAzure);\n  }\n\n  function clearFields(): void {\n    setName('');\n    setId(0);\n    setDescription('');\n    setImageUrl('');\n  }\n\n  function formSubmit(): void {\n    const orderType = {\n      Id: id,\n      Name: name,\n      Description: description,\n      ImageUrl: imageUrl,\n      User: props.user,\n    };\n\n    const payload = new FormData();\n\n    uploadFiles.forEach((file) => {\n      payload.append('file', file);\n    });\n\n    payload.append('ordertype', JSON.stringify(orderType));\n\n    console.log('order type obj', orderType);\n    try {\n      fetch(\n        // 'http://localhost:7071/api/Function1', //   fetch(\n        `https://emeraldordertype.azurewebsites.net/api/Function1?code=${process.env.REACT_APP_ORDERTYPE_FUNC_KEY}`,\n        {\n          method: 'POST',\n          body: payload,\n        }\n      ).then((response) => {\n        if (!response.ok) {\n          throw Error('Network Request failed');\n        }\n\n        setSaveMessage('Order Type saved!');\n\n        setTimeout(() => {\n          clearFields();\n          setSaveMessage('');\n        }, 4000);\n\n        return response;\n      });\n    } catch (error) {\n      console.log('order type error', error);\n    }\n  }\n\n  if (orderTypes.length === 0) {\n    return <div>Order Types not ready.</div>;\n  }\n\n  orderTypes.sort((a: OrderType, b: OrderType) => {\n    if (a.Name !== undefined && b.Name !== undefined) {\n      if (a.Name > b.Name) {\n        return 1;\n      }\n    }\n\n    return -1;\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col className='text-center'>\n          <Jumbotron>\n            <h1 style={{ fontFamily: 'AmaticSC-Bold', fontSize: 'xxx-large' }}>\n              Order Type Form\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Button\n        onClick={onClickshowOrderTypes}\n        style={{ marginBottom: '5px' }}\n        variant='secondary'\n      >\n        Show Order Types\n      </Button>\n      {showOrderTypes ? (\n        <FlipMove\n          typeName='ListGroup'\n          staggerDurationBy='22'\n          duration={500}\n          leaveAnimation='elevator'\n          enterAnimation='elevator'\n          appearAnimation='elevator'\n          maintainContainerHeight={true}\n          easing='cubic-bezier(0.39, 0.0, 0.45, 1.4)'\n        >\n          {orderTypes.map((orderType: OrderType) => {\n            return (\n              <ListGroup.Item\n                key={orderType.Id}\n                action\n                onClick={() => orderTypeClicked(orderType.Id)}\n              >\n                {orderType.Name}\n              </ListGroup.Item>\n            );\n          })}\n        </FlipMove>\n      ) : null}\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter name of order type'\n            onChange={onChangeName}\n            value={name}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter description of order type'\n            onChange={onChangeDescription}\n            value={description}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Upload Image</Form.Label>\n          <EmeraldDropzone uploadDoc={GetUploadImage} />\n          {uploadFiles !== undefined ? (\n            <ul style={{ listStyleType: 'none', paddingLeft: '0px', marginTop: '0px' }}>\n              {uploadFiles.map((file: File) => (\n                <li key={file.name}>\n                  <FaCheck color='green' size={22} style={{ marginTop: '10px' }} />\n                  <span\n                    style={{\n                      color: '#005ea2',\n                      marginTop: '10px',\n                      verticalAlign: 'bottom',\n                    }}\n                    data-testid='uploadfilename'\n                  >\n                    {file.name}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <Image src={imageUrl} thumbnail />\n        </Form.Group>\n\n        <Form.Group>\n          <Button onClick={formSubmit}>Save</Button>\n          <Button onClick={clearFields} style={{ marginLeft: '5px' }}>\n            Clear\n          </Button>\n          <Form.Label>{saveMessage}</Form.Label>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default OrderTypeForm;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scaleDown as Menu, State } from 'react-burger-menu';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\nimport './css/burgerMenu.css';\n\ntype Props = {\n  outerContainerId: string;\n  pageWrapId: string;\n};\n\nconst Nav = (props: Props): JSX.Element => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  function handleStateChange(state: State) {\n    setIsOpen(state.isOpen);\n  }\n\n  function closeMenu() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onStateChange={(state) => handleStateChange(state)}\n      pageWrapId={props.pageWrapId}\n      outerContainerId={props.outerContainerId}\n    >\n      <Link\n        to='/'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcHome style={{ marginRight: '5px', verticalAlign: 'middle' }} />\n        Home\n      </Link>\n      <Link\n        to='/calendar'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FcCalendar style={{ marginRight: '5px' }} />\n        Calendar\n      </Link>\n      <Link\n        to='/create'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <AiOutlineForm style={{ marginRight: '5px' }} />\n        Create Order\n      </Link>\n      <Link\n        to='/orders'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <BiCookie style={{ marginRight: '5px' }} />\n        Orders\n      </Link>\n      <Link\n        to='/map'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaMap style={{ marginRight: '5px' }} />\n        Map\n      </Link>\n      <hr />\n      <Link\n        to='/ordertypes'\n        className='menu-item'\n        onClick={() => {\n          closeMenu();\n        }}\n      >\n        <FaClipboardList style={{ marginRight: '5px' }} />\n        Order Types\n      </Link>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport loadable from '@loadable/component'\nimport { GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\nimport { EmeraldProvider } from './Interfaces/EmeraldTypes';\n// import Dashboard from './Common/Dashboard';\nimport Orders from './Orders';\nimport CreateOrder from './Forms/CreateOrder';\nimport CalendarOrders from './CalendarOrders';\nimport './css/burgerMenu.css';\nimport { FcGoogle } from 'react-icons/fc';\nimport GMap from './Gmap';\nimport OrderDetail from './OrderDetail';\nimport { GoogleSignInComponent } from './GoogleSignInComponent';\nimport { GoogleLogout } from 'react-google-login';\nimport OrderTypeForm from './Admin/OrderTypeForm';\nimport Nav from './Nav';\n\nconst Dashboard = loadable(() => import('./Common/Dashboard'))\n\n// Used when a user hits a route not defined below\nconst FourOhFour = (): JSX.Element => (\n  <div>\n    <h1>Page not found</h1>\n    <p>\n      Go back to <Link to={process.env.PUBLIC_URL + '/'}>Homepage</Link>.\n    </p>\n  </div>\n);\n\nconst logoutBtnStyles = {\n  marginBottom: '10px',\n  backgroundColor: 'rgb(255, 255, 255)',\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'rgba(0, 0, 0, 0.54)',\n  boxShadow: 'rgba(0, 0, 0, 0.24) 0px 2px 2px 0px, rgba(0, 0, 0, 0.24) 0px 0px 1px 0px',\n  padding: '0px',\n  borderRadius: '2px',\n  border: '1px solid transparent',\n  fontSize: '14px',\n  fontFamily: 'Roboto, sans-serif',\n  top: '97%',\n  transform: 'translateY(-50%)',\n  position: 'fixed',\n  marginLeft: '5px',\n} as React.CSSProperties;\n\nwindow.OneSignal = window.OneSignal || [];\nconst OneSignal = window.OneSignal;\n\nfunction App(): JSX.Element {\n  const [googleAccessToken, setGoogleAccessToken] = useState<string>('');\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState<string>('');\n  const [loggedInUserName, setLoggedInUserName] = useState<string>('');\n  const [profileImage, setProfileImage] = useState<string>('');\n\n  useEffect(() => {\n    OneSignal.push(() => {\n      const initConfig = {\n        appId: `${process.env.REACT_APP_ONESIGNAL}`, //STEP 9\n        allowLocalhostAsSecureOrigin: true,\n        promptOptions: {\n          slidedown: {\n            enabled: true,\n            actionMessage: \"We'd like to show you notifications for the latest Orders.\",\n            acceptButtonText: 'Sure!',\n            cancelButtonText: 'No Thanks',\n            categories: {\n              tags: [\n                {\n                  tag: 'orders',\n                  label: 'BakeryOrders',\n                },\n              ],\n            },\n          },\n        },\n        welcomeNotification: {\n          title: 'At The Booth Bakery',\n          message: 'Thanks for subscribing!',\n        },\n      };\n\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = { scope: '/emeraldbakery/' };\n        OneSignal.SERVICE_WORKER_PATH = 'emeraldbakery/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH =\n          'emeraldbakery/OneSignalSDKUpdaterWorker.js';\n        OneSignal.init(initConfig);\n      });\n    });\n  }, []);\n\n  const componentToDisplay: JSX.Element = (\n    <GoogleSignInComponent\n      loginSuccess={(response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('tokenId' in response) {\n          setLoggedInUserEmail(response.profileObj.email);\n          setLoggedInUserName(response.profileObj.name);\n          setProfileImage(response.profileObj.imageUrl);\n          setGoogleAccessToken(response.tokenId);\n        }\n      }}\n    />\n  );\n\n  const logoutSuccess = (): void => {\n    setGoogleAccessToken('');\n  };\n\n  return (\n    <React.Fragment>\n      {googleAccessToken &&\n        (loggedInUserEmail === 'azrael7@gmail.com' ||\n          loggedInUserEmail === 'abooth8503@gmail.com' ||\n          loggedInUserEmail === 'jbooth6985@gmail.com' ||\n          loggedInUserEmail === 'dlbooth64@gmail.com' ||\n          loggedInUserEmail === 'frank.pigeonjr@gmail.com') && (\n          <EmeraldProvider>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <div className='App' id='outer-container' style={{ height: '100%' }}>\n                <Nav outerContainerId={'outer-container'} pageWrapId={'page-wrap'}></Nav>\n                <div id='page-wrap'>\n                  <Switch>\n                    <Route\n                      exact\n                      path='/'\n                      render={() => <Dashboard userName={loggedInUserName} />}\n                    />\n                    <Route\n                      exact\n                      path='/orders'\n                      render={(props) => <Orders {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/create'\n                      render={(props) => (\n                        <CreateOrder\n                          user={loggedInUserEmail}\n                          routeComponentProps={props}\n                        />\n                      )}\n                    />\n                    <Route\n                      exact\n                      path='/calendar'\n                      render={(props) => (\n                        <CalendarOrders\n                          routeComponentProps={props}\n                          userName={loggedInUserName}\n                        />\n                      )}\n                    />\n                    <Route exact path='/map' render={() => <GMap />} />\n                    <Route\n                      exact\n                      path='/detail'\n                      render={(props) => <OrderDetail {...props} />}\n                    />\n                    <Route\n                      exact\n                      path='/ordertypes'\n                      render={() => <OrderTypeForm user={loggedInUserEmail} />}\n                    />\n                    <Route component={FourOhFour} />\n                  </Switch>\n                </div>\n              </div>\n            </BrowserRouter>\n            {loggedInUserName ? (\n              <div\n                style={{\n                  position: 'fixed',\n                  bottom: '0',\n                  width: '98%',\n                  marginRight: '5px',\n                  height: '42px',\n                }}\n              >\n                <GoogleLogout\n                  render={(renderProps) => (\n                    <button onClick={renderProps.onClick} style={logoutBtnStyles}>\n                      <div\n                        style={{\n                          marginRight: '10px',\n                          background: 'rgb(255, 255, 255)',\n                          padding: '10px',\n                          borderRadius: '2px',\n                        }}\n                      >\n                        <FcGoogle size={20}></FcGoogle>\n                      </div>\n                      <span style={{ padding: '10px 10px 10px 0px', fontWeight: 500 }}>\n                        Logout\n                      </span>\n                    </button>\n                  )}\n                  clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n                  buttonText='Logout'\n                  onLogoutSuccess={logoutSuccess}\n                ></GoogleLogout>\n                <div className='text-right' style={{ fontFamily: 'Andika-R' }}>\n                  <span style={{ marginLeft: '58px' }}>\n                    Logged in User: {loggedInUserName}\n                  </span>\n                  <Image\n                    src={profileImage}\n                    style={{ height: '35px', marginLeft: '5px' }}\n                    roundedCircle\n                  ></Image>\n                </div>\n              </div>\n            ) : null}\n          </EmeraldProvider>\n        )}\n      {googleAccessToken ? null : componentToDisplay}\n\n      {googleAccessToken &&\n      !(\n        loggedInUserEmail === 'azrael7@gmail.com' ||\n        loggedInUserEmail === 'abooth8503@gmail.com' ||\n        loggedInUserEmail === 'jbooth6985@gmail.com' ||\n        loggedInUserEmail === 'dlbooth64@gmail.com'\n      ) &&\n      loggedInUserEmail.length > 0 ? (\n        <div>\n          Unauthorized Access: please email:{' '}\n          <a href='email:azrael7@gmail.com'>azrael7@gmail.com</a>\n          <GoogleLogout\n            clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n            buttonText='Logout'\n            onLogoutSuccess={logoutSuccess}\n          ></GoogleLogout>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { FcHome } from 'react-icons/fc';\nimport { BiCookie } from 'react-icons/bi';\nimport { AiOutlineForm } from 'react-icons/ai';\nimport { FcCalendar } from 'react-icons/fc';\nimport { FaMap, FaClipboardList } from 'react-icons/fa';\n\nconst BoothNavbar = (): JSX.Element => (\n  <Navbar bg='dark' variant='dark'>\n    <Navbar.Brand href='#home'>At The Booth Admin</Navbar.Brand>\n    <Nav className='mr-auto'>\n      <Link to='/'>\n        <Nav.Link href='#home'>\n          <FcHome size={28} style={{ marginBottom: '3px', marginRight: '4px' }} />\n          Home\n        </Nav.Link>\n      </Link>\n      <Link to='/Calendar'>\n        <Nav.Link href='#features'>\n          <FcCalendar size={28} style={{ marginBottom: '3px', marginRight: '4px' }} />\n          Calendar\n        </Nav.Link>\n      </Link>\n      <Link to='/Create'>\n        <Nav.Link href='#pricing'>\n          <AiOutlineForm\n            size={28}\n            color='Black'\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />\n          Create Order\n        </Nav.Link>\n      </Link>\n      <Link to='/Orders'>\n        <Nav.Link href='#orders'>\n          <BiCookie\n            size={28}\n            color='#ef89bb'\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />\n          Orders\n        </Nav.Link>\n      </Link>\n      <Link to='/Map'>\n        <Nav.Link href='#orders'>\n          <FaMap\n            size={28}\n            color='Blue'\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />\n          Map\n        </Nav.Link>\n      </Link>\n      <Link to='/ordertypes'>\n        <Nav.Link href='#orders'>\n          <FaClipboardList\n            size={28}\n            style={{ marginBottom: '3px', marginRight: '4px' }}\n          />{' '}\n          Order Types\n        </Nav.Link>\n      </Link>\n    </Nav>\n  </Navbar>\n);\n\nexport default BoothNavbar;\n"],"sourceRoot":""}